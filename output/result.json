{"rfp_path": "uploaded_rfps\\ondc_tech_registry_12_2024_p_10_rfp_doc_removed_removed.pdf", "rfp_text": "Ref: ONDC/Tech/Registry/12-2024/P-101\nRequest for Proposal (RFP) for Selection of\nManaged Services Provider (MSP) for upgrade\nand maintenance of ONDC Registry\n10th Feb 2025\nAPPENDIX 2\n1. Considerations:\nService Fee\u2026\u2026\u2026\u2026\u2026\u2026\u2026..\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be\nmarked up in the invoice for Service Fee on actual basis and shall be borne and\npaid by Client to the Service Provider. The responsibility to pay such taxes to the\napplicable authorities will be that of the Service Provider. The Service Provider\nshall ensure timely deposit of GST amount as well as filing of GST returns with the\napplicable authorities such that the Client is able to avail input credit on such GST\namount. The Service Provider shall raise invoice on a monthly basis/as per\npayment milestones which shall include monthly progress report.\nc) The Service Fee payable hereunder shall be paid subject to deduction of income\ntax at source / withholding taxes, levies or other deductions at the applicable rates.\nIf payment to a Service Provider is subject to Tax Deduction at Source (TDS), the\nClient agrees to comply with the relevant rules and regulations under the Income\nTax Act and to provide the TDS certificates to the Service Provider within the\nprescribed timelines.\nd) For out of pocket expenses, the Service Provider shall seek prior approval of all\nsuch expenses from the designated authorised representative of the Client\nduring incurring any such expense.\ne) If work for Client requires that personnel perform Services outside the city, state,\nprovince, or country in which such personnel are based, Client will reimburse the\nService Provider for increased tax and administrative costs incurred by the Service\nprovider and/or its personnel. Client will be responsible for the payment of taxes in\nconnection with this Agreement incurred on transactions between and among the\nService Provider, its Affiliates, and third-party subcontractors to the extent\napplicable to the performance of Services under this Agreement.\nf) Payment terms and conditions:\nSubmission and Payment of Invoices. The Service Provider shall submit an invoice\nfor performance of the Services and Deliverables as per this APPENDIX 2. Invoices\nshall be submitted to the designated contact of the Client. Invoices must include a SLA\nreports, description of tasks performed, deliverables delivered and hours spent\nperforming such tasks broken down by dates, as applicable.\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii)\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of\nsuch invoices.\nAny eligible pre-approved out of pocket expenses (including travel expenses) incurred\nby the Service Provider for the performance of the Services and/ or Deliverables will\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 33 of 125\nbe reimbursable within thirty (30) days after receipt of debit note. Such debit note for\nout of pocket expenses shall be supported by receipts, tickets (or other evidence\nverifying such expense to the reasonable satisfaction of Client) and in the case of a\ndispute concerning any expense the decision of Client shall be final and binding.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 34 of 125\nSection 3 - Change Management Process\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC\nand Registry MSP recognize that changes may be required during the project. ONDC also\nrecognizes that these changes may require modification to the manpower requirements and/or\ntools and may thus have a financial impact. The MSP will endeavour, wherever reasonably\npracticable, to effect change without an increase in the contract value, and ONDC or its\nnominated agencies will work with the MSP to ensure that all changes are discussed and\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions\nwhich will apply to changes to the agreement.\n1. Conditions for Change Order\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP\nrequests to carry out the following changes in relation to the services rendered by MSP:\n1.1. Request for changes to the infrastructure\n1.2. Request for change in manpower requirements because of change in scope of\nwork as set out in Section 4 - Terms of reference or due to changes in the\nservice level agreements.\n1.3. Request for enhancement of features of a particular component of registry\narchitecture.\n1.4. Request for rendering services of third party software/hardware tools to\nenhance Registry functionality, such as a CRM tool for managing participants'\ngrievances.\n2. Change Management Process\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to\nperform the effort estimation for application related changes, as mentioned in\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA)\nor T-Shirt sizing or any other industry defined model for effort estimation. MSP\nshall develop the estimation model in consultation with ONDC. Post approval\nfrom ONDC, for every type of change request, this model shall be used for\nestimation purposes by MSP and ONDC shall review/approve the effort basis\nof this model.\n2.2. Change Request in respect of the Agreement will emanate from the ONDC or\nMSP. MSP\u2019s Program Manager will be responsible for obtaining approval for\nthe change and will initiate the Change Request by completing Change Control\nNote (CCN) (refer Change Control Note Form). CCNs will be submitted to the\nClient, who will acknowledge receipt of the CCN.\n2.3. The MSP and ONDC or its nominated agencies, during the term of the\nAgreement and while preparing the CCN, shall determine whether the change\nis beyond the scope of services as detailed in Section 4-Terms of reference.\n2.4. The total value of all change orders to be issued under this contract shall not\nexceed 50% of the total contract value. It is hereby also clarified that any\nchange control suggested beyond 50 % (fifty percent) of the total contract value\nwill be beyond the scope of the change control process. It is hereby clarified\nthat the 50% (fifty percent) of the total contract value as stated in herein above\nis calculated on the basis of bid value (exclusive of taxes) submitted by the\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 35 of 125\nMSP and accepted by the ONDC or its nominated agencies or as decided and\napproved by ONDC or its Nominated Agencies.\n3. Quotation\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide\nas a minimum:\n3.1.1. a description of the change;\n3.1.2. a list of deliverables required for implementing the change;\n3.1.3. a time table for implementation;\n3.1.4. an estimate of effort (using the estimation model, approved by ONDC)\nfor the proposed change;\n3.1.5. any relevant acceptance criteria;\n3.1.6. an assessment of the value of the proposed change;\n3.1.7. Profiles of Resources to be added to the team to effect the change.\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake\nits own internal review of the proposal and obtain all necessary internal\napprovals. As a part of this internal review process, the MSP shall consider the\nmateriality of the proposed change in the context of the agreement and the total\neffect that may arise from implementation of the change.\n4. Cost\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in\nthe quotation, preparation of CCNs and in the completion of its obligations\ndescribed in the change management process, provided the MSP meets the\nobligations as set out in the CCN. In the event the MSP is unable to meet the\nobligations as defined in the CCN then the cost of getting it done by a third\nparty by ONDC shall be borne by the MSP.\n4.2. Cost for Change Order:\n4.2.1. For the purpose of estimating the value with respect to staff costs and\ntools associated with change order approved by ONDC, the rates\n(exclusive of taxes) submitted by the MSP in their commercial bid shall\nbe used. Taxes will be applicable as per the prevailing laws and rates\nspecified therein.\n4.2.2. If a new skill set is required, the cost of such resource(s) should not be\nmore than an equivalent resource in terms of number of years of\nexperience for the resource for another skill set deployed during that\nparticular time period.\n4.2.3. If a new infrastructure component or tool is required to implement the\nchange, the cost of such a tool or infrastructure component should not\nbe more than the prevailing market rate or the unit cost submitted by\nthe Bidder in their commercial proposal, whichever is lower.\n5. Change order and SLAs\n5.1. For activities carried out against change orders, the applicability of existing\nSLAs shall be evaluated by the ONDC and if found applicable, the same shall\ncontinue to be in force.\n5.2. For activities to be performed in a time bound manner against change orders,\nONDC may define additional milestone SLAs which will have an appropriate\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs\nshall be agreed upon between ONDC and MSP prior to submission of\nquotation by the MSP.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 36 of 125\n5.3. In the event that any of the change orders requires definition of new SLAs,\nClient may add additional SLAs to cover the additional scope of activities as\ndefined in the change orders. Such milestone SLAs shall be agreed upon\nbetween ONDC and MSP prior to submission of quotation by the MSP.\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP\nand communicated by the ONDC in writing as part of the change order issued\nto the MSP.\n6. Obligations\n6.1. It shall be binding on MSP to implement any proposed changes as per the\nterms and conditions of the change order, once approval in accordance with\nabove provisions has been given.\n6.2. The acceptance criteria for any such \u2018Change\u2019 will remain the same as\ndescribed in the Agreement with respect to the performance and quality\nparameters.\n6.3. The MSP\u2019s obligations with respect to such change order shall remain in\naccordance with the Agreement.\n6.4. Agreed manpower requirements for additional scope of work through a change\norder process will not be revised during the implementation of the change\nrequest.\nChange control note Form\nPART A: INITIATION\nChange Request Number:\nDate:\nTitle:\nInitiator:\nBrief Description of Proposed\nChange:\nName & Designation:\n(On behalf of Initiator)\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 37 of 125\nChange Submitted to\nPart B: EVALUATION\nChange Request Number:\nDate:\nDetailed Description of Change:\nImpact:\n\u00b7 Cost\n\u00b7 Risk\n\u00b7 On Overall Project\nDeliverables Involved:\nDetailed Timelines:\nAvailable alternatives (if any):\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 38 of 125\nAny Other Relevant Information: Payment Terms:\nName & Designation:\n(On behalf of Initiator)\nSignature:\nAuthority to Proceed (YES/NO):\nApproved Rejected\nComments: Comments:\nFor ONDC For MSP\nSignature: Signature:\nName:\nDesignation:\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 39 of 125\nDate:\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 40 of 125\nSection 4 - Terms of Reference\n1. Introduction\nOpen Network for Digital Commerce (ONDC) is Govt. of India\u2019s initiative which enables e-\ncommerce networks based on open protocols which will enable commerce across different\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications\nin the network and they will communicate using open protocols. For enabling this broadly there\nare two infrastructure components that are essential to the network namely Gateway and\nRegistry. Incumbent agency (M/s Protean) has been supporting both of these integral\ncomponents as per the requirements of ONDC.\nThe Gateway enables discovery in the network. When a buyer (seeker) application wants to\nsearch the network for goods/services it sends the search intent to the Gateway which\nbroadcasts it to all the eligible sellers through seller applications (provider applications) who\nmay service this request. The seller applications in turn send their catalogues back to the\nbuyer applications asynchronously against the same intent as broadcast by the Gateway. The\nresponse to search intent is directly cascaded by seller apps to buyer apps, on end points\ndefined by buyer apps as part of the intent.\nThe Registry is a repository for storing the details of the network participants including seller\napp, buyer app and gateways. It is the meta data repository for all entities in the network, that\nincludes end point URLs, Public Keys etc.. All the network participants use the Registry to get\ndetails of other entities in the network. Registry has four main features:\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the\ncredentials of the existing NP on to the network\n2. Provide meta data details of onboarded entities to other authenticated network\nparticipants.\n3. Respond to gateway resolving the discovery intent from buyer apps.\n4. Host and provide authentication information for respective network participants to\nthe requester.\nIt is responsible for registering the network participants on the ONDC network . This involves\nverifying the identity and credentials of the participant, and adding them to a list of approved\nentities that are allowed to access and operate on the network. It ensures that only authorised\nentities are able to access the network and participate in transactions on the ONDC network.\nAll the transactions on the registry are authenticated using a state of an art key based signing\nalgorithm.\nThe Registry plays a pivotal role in discovering Network Participants (\u201cNP\u201d) on ONDC network\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up-to-\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying\npost authentication of their signatures.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 41 of 125\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to\nthe expected growth in NPs. As of Nov, 2024, the number of monthly transactions being\nenabled on the ONDC network has reached 15 Million across various domains including\nconsumer goods, logistics, mobility, financial services, among others. The peak TPS of\nregistry that we have observed so far, is of the tune 1500.\nAt present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance\nthe design of the Registry based on the design principles and functional requirements\nspecified in this document and select a service provider to manage and maintain the Registry\non an ongoing basis.\nAn overview of the current design of Registry is provided in Annexure - 3 of the RFP.\n2. Design principles of Registry\n2.1. Open source and avoidance of vendor lock-in: The Registry shall be\ndesigned and implemented using open source components and avoid usage\nof proprietary components that may result in vendor lock-in(s).\n2.2. Multi-tiered architecture: The Registry shall be designed as a multi-tiered\narchitecture with independently scalable layers as depicted in the logical\narchitecture provided below in Figure 1.\n2.2.1. API layer - The Registry will follow an API first design philosophy. It\nprovides three APIs - the Subscribe, Lookup and Admin APIs at present\nwhich enable Network Participants to be added to the Registry and\nquerying of Network Participant data. The API layer shall expose the\nend points to be accessed via the API Gateway(s) after due\nauthentication of incoming requests. The existing APIs may be\nenhanced further and new APIs may also be added during the course\nof this contract based on emerging business requirements of ONDC.\n2.2.2. Application layer - The application layer will perform the necessary\nrequest processing which can be an update to Registry or a Registry\ndata lookup.\n2.2.3. Data layer - The data layer will host the core Registry database and\nobject store along with a data cache. All data access of the Registry\ndatabase will include a writeback to the cache.\nThe core Registry database can be a denormalized, key-value pair\ndatabase. The solution may incorporate any contemporary consistent\ndata architecture using any database technology.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 42 of 125\nThis layer shall also have features to classify and manage core Registry\nand log data based on frequency of access as well as recency of data\nas Hot, Warm and Cold and retaining data for up to 7 years based on\nbusiness and regulatory requirements. Correspondingly, different\nstorage technologies shall be utilised in the infrastructure layer for\nefficient and cost effective management of Registry data.\nFigure - 1: Indicative Logical architecture of Registry\n2.2.4. Authentication and Authorization - This layer will authenticate and\nauthorise incoming requests from the NPs through the ONDC Network\nGateway(s) or directly as the case may be and enable secure access\nto the Registry.\nThe authentication and authorization layer must cater to API\nauthentication and user authentication as the case may be.\n2.2.5. Perimeter security layer - This layer will contain perimeter security\ndevices that will include Web Application Firewall, L3 firewalls,\nAdvanced Threat Protection and DDoS protection.\n2.2.6. Monitoring and management services - This will comprise a set of\ncomponents to monitor the performance and availability of the entire\nRegistry stack on a real time basis. This will also report data to the\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 43 of 125\nONDC Network Health Monitoring dashboard which will be accessible\nto the public at large. Such monitoring data of Registry shall be made\navailable through APIs or any other mechanism determined by ONDC\nas part of the design of the Network Health Monitoring system.\nAs part of monitoring and measurement of performance and availability\nmetrics of the Registry at overall data center level and at application\nlevel, the MSP should create a \u201c/health\u201d API which may simulate\nsynthetic transactions of the nature expected to be performed on\nRegistry.\n2.2.7. Infrastructure layer - This layer will include the cloud hosting\ninfrastructure along with the automated disaster recovery and business\ncontinuity cutovers. The system integrator may implement the solution\neither on bare metal or virtualized or containerized infrastructure\nkeeping in view the performance and availability requirements of the\nRegistry.\n2.3. Zero data loss: The Registry shall be designed to be a zero data loss.\n2.4. Data security: Considering that the Registry will be primarily sharing data over\nthe internet with Network Participants, the minimum encryption standard for the\nRegistry shall be ECDH (Elliptic-curve Diffie\u2013Hellman) using X25519 or better\nencryption curves.\nThe Registry communication can be either peer-to-peer or in a broadcast\nmode. For all Registry broadcasts the minimum encryption standard shall be\nECDH X25519.\nFor peer to peer communications, given that different network participants may\nbe following different encryption methods, the Registry must hold the details of\nthe encryptions standards followed by each NP. In such cases, the Registry will\nneed to support look up of the relevant encryption standard of a NP and adopt\nthe corresponding standard for peer to peer communication with the NP. The\nMSP is required to propose a suitable architecture for supporting multiple\nencryption keys in the Registry. Requirements for implementing data vaults\nmay be evaluated and proposed by the MSP if needed and Registry shall be\ndesigned to support the same.\n2.5. Data residency: The Registry shall be hosted on public cloud infrastructure.\nRegistry data of entities registered or incorporated in India shall be stored on\npublic cloud infrastructure within India.\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner\nwith 99.99% availability. It shall have an optimum usage of infrastructure as\npart of disaster recovery design across the two data centers. It is pertinent to\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 44 of 125\nEvery participant will have certain contact coordinates in the form of SPOCs or support or\nother specific contact persons details that need to be published in the registry so that it is\naccessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer\nKey Record\nThe Registry plays a vital role in developing a trust on the network as it remains the source of\ntruth for any authentication mechanism as it houses in the public keys for signing and\nencryption for each participant hence allowing other participants to access it and perform\nrelevant security measures.\nLocation Record\nGeographical transactability presence of a participant is vital for optimal broadcast of a\ndemand on the network. To meet this requirement each participant would define their\ngeographical presence in the registry which can be accessed by other participants to evaluate\ntheir presence and ability to transact in a given location. The definition of location can range\nfrom being a Country, CIty, Pincode, Geo Json supported as well.\nURI Record\nThe endpoint at which the participants exposed APIs are hosted where the transacting and\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached\nout to which usage in the mapping record.\nMapping Record\nCertain configurations of the participant and association to other records found in the mapping\nrecord will be crucial to address the filtration and policy executing information to be available\nfor the participants.\nPolicy Record\nEvery network would adhere to a policy and agreements that are linked between networks\nand these needs to be stored at a common source of truth which would lead to enforcement\nat the receiving end. These records will be the place holders of these policies but the execution\nof them is not a responsibility of the registry or the record itself.\nFuture Record\nThis is a place holder or making sure that the design enables or allows storing newer records\nthat may emerge with the network requirements and functionalities in the future\n6.2 Data to be captured in Registry\nBelow is the list of data fields for the proposed structure\nS.No. Data Field/Records Description\n1 Participant Id Unique Participant Id provided by the registry\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 49 of 125\n2 Cred Participant credential records\n3 Cred.id Credential record unique id\n4 Cred.type Credential type\n5 Cred.key_1 Place holder field purposed based on type\n6 Cred.key_2 Place holder field purposed based on type\n7 Cred.key_3 Place holder field purposed based on type\n8 Contact Participant contact records\n9 Contact.id Contact record unique id\n10 Contact.type Contact type\n11 Contact.key_1 Place holder field purposed based on type\n12 Contact.key_2 Place holder field purposed based on type\n13 Contact.key_3 Place holder field purposed based on type\n14 Contact.key_4 Place holder field purposed based on type\n15 Key Participant key records\n16 Key.uk_id Unique Key Id provided by Registry\n17 Key.signing_pub Signing Public Key\n18 Key.encryption_pub Encryption Public Key\n19 Key.valid_from Key valid from timestamp\n20 Key.valid_to Key valid till timestamp\n21 URI Participant URI records\n22 URI.id participant unique uri id\n23 URI.url url of the participant\n24 Location Participant location records\n25 Location.id Location record unique id\n26 Location.city Array of city reference identifiers\n27 Location.country Array of country reference identifiers\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 50 of 125\n28 Location.geojson geo json format definition of location\n29 Mapping Mapping Records\n30 Mapping.id Mapping record unique identifier\n31 Mapping.domain Participant transactional domain\n32 Mapping.type Participant transactional type\n33 Mapping.uri_id URI record reference id\n34 Mapping.location_id Location record reference id\nRequest ID unique request id, generated by participant for\n35\neach request\ncallback_uri Participant callback uri for validation &\n36\nverification on each request\n6.3 APIs\nAll APIs of registry are authenticated and can only be accessed by participants/prospective\nparticipants of the registry. The Authentication will follow the same signature pattern as\nproposed by the base commerce protocol i.e. beckn\nQuery API - /lookup\nQuery APIs are to query the registry for records. The query shall have various formats and\nstructure and will result in appropriate responses. A few possible queries are listed below\nthese are projected but not the entire list.\n\u25cf Query for Participant Records - Single Record\nAny participant can query for a single participant record this encompasses of all the\nsub records of the participant to name a few : Creds, Contact, URI, Keys, Location,\nMapping Records\n\u25cf Query for Key Records - Single Record\nAny participant can query for a particular or all key records associated with a particular\nparticipant\n\u25cf Query for URI Records - Single Record\nAny participant can query for a particular or all URI records associated with a particular\nparticipant\n\u25cf Query for Participant List - Multiple Records\nSome designated participants can query for a complete dump or a filtered dump of\nparticipant records based on the lookup query.\nParticipant Registration/Management API - /subscribe\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 51 of 125\nRegistration APIs are to register/subscribe a participant to the registry with their records. The\nregistration process will adhere to adequate validation against the information shared during\nthe process. Along the life-cycle of a participant there will be multiple phases or milestones\nand management activities where they need to manage their records. These APIs in its\nentirety and different shapes will address the needs to support it with adequate validation and\nauthorization needed. A few possible usages are listed below; these are projected but not the\nentire list.\n\u25cf New Registration - /subscribe - POST\nA post request created to make a new entry of a participant with all the adequate\ninformation and records that needs to be added to the registry this would be preceded\nby a whitelisting action from Admin.\n\u25cf Update Record - /subscribe - PUT & PATCH\nEvery network participant would require to modify, update and add records in the\nregistry during the tenure in the network these APIs would help supporting such\nfunctionalities\nAdmin APIs - /admin/domains, /admin/subscribe\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to\nadmins:\n\u25cf Enable/Disable Domains\n\u25cf Whitelist & Un-subscribe participants\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these\nfunctions of the registry\nThe Authentication and Authorization of an Admin and its associated workflows are managed\nby an external system to the core registry function and these APIs will be secured via MTLS\nand other secure tunnel communication between the identified such registry management\nservice/s.\n6.3.1 Existing Registry APIs\n6.3.1.1 lookup API\nlookup API is used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases of lookup API and being used:\n\u25cf By gateways and/or adaptors for search details about network participants\n\u25cf By network participants to querying existing details\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n6.3.1.2 vlookup API [TO BE DEPRECATED]\n\\vlookup API is used by the network participants to get details about other network participants\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more\nadvanced and secure version of lookup API, as it contains the signature parameter of the\nsender as one of the input parameters.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 52 of 125\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled\nthrough lookup API.\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n6.3.1.3 subscribe API\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently\nthe registry is supporting the following types of registrations. Same needs to be enabled in the\nupdated Registry.\n\u25cf Buyer App New entity Registration\n\u25cf Non-MSN Seller New entity registration\n\u25cf MSN Seller new entity registration\n\u25cf Buyer App and Non-MSN Seller new registration\n\u25cf Buyer App and MSN Seller new registration\n\u25cf RSP new entity registration and record updates\n\u25cf SA new entity registration and record updates\n\u25cf ODRSP new entity registration and record updates\n\u25cf SSP new entity registration and record updates\n\u25cf CA new entity registration and record updates\n\u25cf Adding new seller on records\n\u25cf Updating records of buyer app, seller app and seller on records\n\u25cf Validation of GSTIN\n\u25cf Validation of PAN\n\u25cf Validation of Bank Account number\n\u25cf Deduplication of all types of participants, ukId, signing key and encryption key\nThe subscribe API should only be carried out for the NPs that are whitelisted.\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n6.4 Dashboard\n6.3.2 The admin dashboard is to be developed for ONDC internal teams, ONDC\nofficials and MSP. The dashboard will have the following features:\n6.3.3 Admin dashboard should have the functionality of Registration and login for\nusers\n6.3.4 Dashboard need to have two-factor authentication enabled for every user\n6.3.5 Dashboard content should support the English language.\n6.3.6 Dashboard should not allow concurrent sessions for the same user. The\nsystem should automatically log out a user in case of session breakdowns\n(e.g., communication failure, high inactivity period - these should be\nparameterized)\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 53 of 125\n6.3.7 Dashboard should have Role based access control (RBAC) enabled. This\nfunctionality will enable ONDC admin to authorize users by assigning\nprivileges to roles and assigning roles to users or group\n6.3.8 Dashboard should implement security features such as captcha, password\ncomplexity, automatic blocking (temporary/permanent) of user logins after\na given number of unsuccessful attempts.\n6.3.9 Dashboard must be developed as per Guidelines for Indian Government\nWebsites (GIGW) guidelines\n6.3.10 Portal should support HTTPS protocol on Secure Socket Layer (SSL)\n6.3.11 Graphical representation of the current status of their subscription,\nregistration across all environments (Sandbox, Pre-prod & production)\n6.3.12 Dashboard shall be built on 3-tier architecture with separate presentation,\nbusiness and database layer\n6.3.13 Dashboard must have the capability to integrate issue management system\nof ONDC\n6.3.14 It must support configuration of customizable workflows to define the flow\nof issues\n6.3.15 Dashboard shall have the ability to send email and SMS notifications to\nusers regarding issue status or any other information\n6.3.16 It should be able to support user access management, user control and\ncreating customized pages or dashboards for different set of users\n6.3.17 Dashboard should have responsive UX design supporting different screen\nsizes\n6.3.18 The Dashboard should have the capability to monitor Registry related\nmetrics/parameters. The monitoring module should have the following\ncapabilities:\n6.3.18.1 The below required parameters need to be displayed on the\ndashboard. Dashboard shall have and not limited to the following\nfunctionalities. Below API calls latency along with Response time:\n6.3.18.1.1 Subscriber API\n6.3.18.1.2 Lookup API\n6.3.18.2 Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on\nRecords, Gateways, RSPs, ODRSP, SSP, and others)\n6.3.18.3 Throughput\n6.3.18.4 Availability - Uptime & Downtime of Registry\n6.3.18.5 Concurrent Users\n6.3.18.6 CPU, RAM and Storage Usage\n6.3.18.7 Volume of API calls\n6.3.18.8 Seller App and Buyer App Wise number of serving categories and\nproducts\n6.3.19 Dashboard should have the capability to project data on Daily, Weekly and\nMonthly basis\n6.3.20 Registry monitoring dashboard should have the capability to show graphical\nrepresentation of the data available\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 54 of 125\n6.3.21 Dashboard should have the capability to generate reports required by\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats.\nFurther, if any other format is required by ONDC\n6.3.22 Dashboard should have the capability to send alerts and notifications to\nrespective admins, MSP SPOCs on any change\n6.5 Infrastructure\nFollowing are the infrastructure requirement for the various environments:\nS.No. Requirement Type Sandbox Pre Production Production\n1 Uptime >=99% >=99.9% >=99.99%\n2 RPO - 15 mins 0\n3 RTO - 30 mins 10 mins\n4 Application response <100 milli-sec <100 milli-sec <10 milli-sec\ntime(except subscribe\nAPI)\n5 Response Time as <1000 milli-sec <1000 milli-sec <200 milli-sec\nmeasured at data\ncenter edge(except\nsubscribe API)\n6 Throughput 10 TPS 50 TPS 5000 TPS\n7 Concurrent users (live 100 500 1000. Scalable to\nnetwork participants) 5,000\n8 High Availability NA NA DC and DR in Active-\nactive mode on the\nbidder selected cloud\nplatform\n6.5 Migration\nThe MSP shall migrate the data from the existing registry for all the three environments -\nstaging (sandbox), pre-production and production to the new registry application.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 55 of 125\nS. Type of Unit of Number Uni Sub- Taxe Total\nNo. component / measure of units t Total s incl.\nproduct / rate taxes\nservice\n2 Cost of Per-month 36\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily\npeak TPS for a given month. The callbacks to the API will not be included in the computation of the\nnumber of API calls.\nTPS for a month =\n\ud835\udef4\ud835\udef4 \ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43 \ud835\udc47\ud835\udc47\ud835\udc43\ud835\udc43\ud835\udc47\ud835\udc47 \ud835\udc53\ud835\udc53\ud835\udc53\ud835\udc53\ud835\udc53\ud835\udc53 \ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc43\ud835\udc52\ud835\udc52\u210e \ud835\udc51\ud835\udc51\ud835\udc43\ud835\udc43\ud835\udc51\ud835\udc51\u00f7 \ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc41\ud835\udc43\ud835\udc43\ud835\udc53\ud835\udc53 \ud835\udc53\ud835\udc53\ud835\udc53\ud835\udc53 \ud835\udc51\ud835\udc51\ud835\udc43\ud835\udc43\ud835\udc51\ud835\udc51\ud835\udc51\ud835\udc51 \ud835\udc56\ud835\udc56\ud835\udc56\ud835\udc56 \ud835\udc43\ud835\udc43 \ud835\udc41\ud835\udc41\ud835\udc53\ud835\udc53\ud835\udc56\ud835\udc56\ud835\udc5a\ud835\udc5a\u210e\nNote: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this\nmeans that TPS greater than the 99th percentile reading will be discarded and not considered for the\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have\noccurred due to longer service start up times or some exception scenarios.\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:\nTPS for a month (P) = 2,306\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN-5 #1 Cost of secure cloud infrastructure meeting\nall the technical specifications capable of processing 1,000 TPS]\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN-5 #2 Cost of secure cloud infrastructure\nmeeting all the technical specifications capable of processing additional 1,000 TPS]\nAmount payable during the month for cloud infrastructure (A) = = 1,00,000 +\n1.3*50,000 = INR 1,65,000/-\n\ud835\udc44\ud835\udc44 + (\ud835\udc43\ud835\udc43/1000 \u22121)\u2217\ud835\udc45\ud835\udc45\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 70 of 125\nB. Service Level Agreements\n1. Introduction\na. The Service Level Agreements (SLA) defined for the project specify the\nexpected levels of baseline service to be provided by the MSP to ONDC. The\nobjectives of SLA governance model are to:\ni. Provide clear reference to service ownership, accountability, roles and\nresponsibilities.\nii. Present a clear, concise and measurable description of service\nprovisioning at each level.\niii. Bridge the gap between perceptions of expected service provisioning\nand actual service support and delivery.\nb. The SLAs are intended to:\ni. Make explicit and strict expectations that ONDC has for performance\nand availability of business services.\nii. Help ONDC control and ensure the planned level and performance of\nbusiness services.\niii. Trigger a process that brings ONDC and MSP\u2019s management attention\nto situations when any aspect drops below an agreed upon threshold,\nor target.\nc. The performance of the MSP services shall be measured against the SLAs\ndetailed below. The service level targets define the levels of service to be\nprovided by the MSP to ONDC for the applicability period or duration of this\ncontract, whichever is earlier, or until the stated SLA targets are amended.\nd. Any degradation in the performance of the services undertaken by the MSP\nproject team during the contract duration, will be subject to levy of liquidated\ndamages. The liquidated damages mentioned in this RFP are a pre-estimate\nof damages likely to flow from the breach of timelines and service levels. In\ncase of breach of multiple SLAs:\ni. the cumulative liquidated damages applicable on the MSP for\ntimeline/milestone linked SLAs shall not exceed 10% of the total amount\npayable against the respective milestone.\nii. the cumulative liquidated damages applicable on the MSP for\noperational SLAs computed on a quarterly basis shall not exceed 10%\nof the total amount payable for the quarter.\ne. MSP shall not be relieved from any obligations under this contract by virtue of\npayment of such liquidated damages.\nf. MSP shall implement a SLA reporting tool to provide live status of conformance\nto various SLAs to ONDC.\ng. Any change in the SLAs during the term of Project [in terms of addition,\nalteration or deletion of certain parameters], would be initiated at the discretion\nof ONDC, which would be subsequently discussed and agreed with the MSP\nbefore putting the amended SLAs into effect.\n2. Definitions of measurement and reporting intervals\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 72 of 125\na. Measurement interval - For some of the SLAs, the Reporting interval has been\nbroken down into multiple Measurement intervals. This has been done to\nprovide the MSP an opportunity to rectify any SLA non-compliance during a\nparticular measurement interval in the remaining measurement intervals\navailable in the Reporting interval.\ni. For example, during a quarter, a SLA could be measured every month\nand even if there was a certain non-compliance during one of the three\nmonths, the MSP would have an opportunity to rectify the non-\ncompliance in the other two months.\nii. For each of the SLAs, all observations regarding the SLA recorded will\nbe aggregated and the SLA will be computed for every measurement\ninterval. The applicable percentage of liquidated damages will be the\nsimple average of the liquidated damages computed for each\nmeasurement interval.\niii. For example, for availability of solutions, all \"system up check\" data\ngathered, all planned and unplanned downtimes during the\nmeasurement interval (i.e., a given month) will be aggregated and the\nSLA will be computed. Accordingly, as per the LD computation\nguidelines defined in this document, the percentage of LD applicable\nfor the measurement interval will be computed.\nb. Reporting interval: Reporting interval for all SLAs is quarterly. The\npercentage of LD to be applied for a Reporting interval is computed as an\naverage of the LD percentages computed for each of the Measurement\nintervals.\n3. Timelines and associated liquidated damages, if any\nS. No. Milestone / Deliverable Timeline Liquidated damages, if any,\napplicable\n1 Signing of the contract T Not applicable\n2 Submission of detailed T+6 weeks 1% of cost head (A) as\ndesign document mentioned in commercial bid\ncontract for every week of delay\n3 Submission of the UAT T+12 weeks 1% of cost head (A) as\nplan with detailed test mentioned in commercial bid\ncases and test data contract for every week of delay\n4 Security testing (VAPT T+18 weeks 1% of cost head (A) as\nand App scan by a CERT- mentioned in commercial bid\nIn empanelled agency), contract for every week of delay\nPerformance testing and\nbenchmarking of system\nprior to go-live and\nnecessary fine-tuning\n5 Completion of UAT and T+18 weeks (= 1% of cost head (A) as\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 73 of 125\nS. No. Milestone / Deliverable Timeline Liquidated damages, if any,\napplicable\nsolution Go-Live along T1) mentioned in commercial bid\nwith replication of the contract for every week of delay\nexisting data in the\nRegistry database\n6 Submission of quarterly Before 15th of 1% of quarterly amount payable\nSLA compliance report next month for every week of delay\nafter end of\nquarter\n7 Submission of the T1+ 12 1% of quarterly amount payable\nKnowledge transition quarters for every week of delay\nreport and complete\nregistry documentation\n4. Solution SLAs and associated liquidated damages\na. Availability of Registry\nSLA Availability of Registry as a solution\nDescription\nScope of SLA Applies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\nTools, methods Healthcheck service to be implemented by MSP \u2013 a custom monitoring\nor scripts to be script shall be executed once every minute from the SLA monitoring\nused to server.\nmeasure SLA\nProcess to The availability of registry shall be measured as follows:\ncapture data or i. From the SLA monitoring server(s) invoke the service under\nmeasure the measurement. In the case of Registry, each API shall be\nparameter considered as a separate service.\nii. Based to the response obtained from each API, availability shall\nbe computed.\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\nSLA calculation Will be calculated using the below formula.\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2013 Planned Downtime)]} *100\nPlanned Downtime permissible for each API = 15 minutes per quarter\nTotal Time = 24 X 7 measured over a period of one calendar month.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 74 of 125\n[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\nOverall Availability % of Registry = ROUND ( [Availability % for each\nAPI]/Number of APIs, 2)\n\ud835\udef4\ud835\udef4\nSLA target and\nSeverity level\nSLA Level Applicable LD as % of quarterl\nfor computation\nof quarterly payment due\nof Liquidated\nDamages for\n>=99.99% None\nProduction\nenvironment <99.99% and >= 99.9% 1%\n<99.9% and >= 99% 2%\n<99% and >=98% 3%\n<98% and >=97% 4%\n<97% 5%\nSLA target and\nSeverity level\nSLA Level Applicable LD as % of quarterl\nfor computation\nof quarterly payment due\nof Liquidated\nDamages for\n>=99.9% None\nPre-\nProduction <99.9% 0.5%\nenvironment\nSLA target and\nSeverity level\nSLA Level Applicable LD as % of quarterl\nfor computation\nof quarterly payment due\nof Liquidated\nDamages for\n>=99% None\nSandbox\nenvironment <99% 0.5%\nAssumptions, if The MSP should implement custom scripts to enable the measurement\nany of various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.\nMeasurement Monthly\ninterval\nReporting Quarterly\ninterval\nReporting Automated SLA dashboard to be provided by MSP\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 75 of 125\nb. Response time of Registry\nSLA Description Response time of Registry as a solution\nScope of SLA Applies to response time of Registry as a solution,\nspecifically the APIs through which Network Participants\naccess the Registry.\nTools, methods or scripts Tool to be implemented by MSP \u2013 a custom monitoring script\nto be used to measure shall be executed once every 10 minutes from the SLA\nSLA monitoring server for each Registry API.\nProcess to capture data or The response time of registry shall be measured as follows:\nmeasure the parameter\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.\nSLA calculation Will be calculated using the below formula.\nFormula: Average response time of Registry =\nROUND(simple average of response times of each API\nexcluding outliers,2)\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.\nSLA target and Severity\nlevel for computation of\nSLA Level Applicable LD\nLiquidated Damages for\nas % of\nProduction environment\nquarterly\npayment\nAverage response time of Registry None\napplication <= 10 millisecond\nAverage response time of Registry 3%\napplication > 10 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 200 millisecond\nAverage response time of Registry 3%\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 76 of 125\napplication > 200 millisecond\nSLA target and Severity\nlevel for computation of\nSLA Level Applicable LD\nLiquidated Damages for\nas % of\nPre-Production\nquarterly\nenvironment\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 1%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 1%\napplication > 1000 millisecond\nSLA target and Severity\nlevel for computation of\nSLA Level Applicable LD\nLiquidated Damages for\nas % of\nSandbox environment\nquarterly\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 0.5%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 0.5%\napplication > 1000 millisecond\nAssumptions, if any The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\ntools.\nMeasurement interval Monthly\nReporting interval Quarterly\nReporting Automated SLA dashboard to be provided by MSP\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 77 of 125\n5. Support SLAs and associated liquidated damages\na. Incident response\nSLA Description Incident Response Time\nScope of SLA Applies to all Incidents\nTools, methods or Incident and Service Desk Management tool to be implemented by MSP\nscripts to be used to\nmeasure SLA\nProcess to capture Once an incident is logged through one of the agreed channels, the\ndata or measure the priorities have to be set using agreed channels for incidents based on\nparameter for ONDC requirements to meet the business objectives.\nProduction\nenvironment Measurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 15 minutes\nP2 60 minutes\nP3 2 hours\nProcess to capture Once an incident is logged through one of the agreed channels, the\ndata or measure the priorities have to be set using agreed channels for incidents based on\nparameter for ONDC requirements to meet the business objectives.\nSandbox and Pre-\nProduction Measurement of SLA\nenvironments Response Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours\nSLA calculation Formula:\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 78 of 125\nSLA Description Incident Response Time\ntimelines during the period / Number of P3 incidents opened during the\nperiod\nSLA target Response Time compliance =100%\nLiquidated 2% of quarterly payment if SLA target is not met\nDamages\nMeasurement Monthly\ninterval\nReporting interval Quarterly\nReporting Using SLA reporting tool\nb. Incident resolution\nSLA Description Incident Resolution Time\nScope of SLA Applies to all incidents\nTools, methods or Incident and Service Desk Management tool to be implemented by\nscripts to be used to MSP\nmeasure SLA\nProcess to capture Measurement of SLA\ndata or measure the Response time is the time from incident creation until the \"Work in\nparameter for Progress\" status update with assignment by MSP.\nProduction Resolution Time is the time from incident creation until the \"Resolved\"\nenvironment status update.\nPriority Resolution time\nP1 8 Hours\nP2 2 Days\nP3 5 days\nP4 - Service Request 15 days\nProcess to capture Measurement of SLA\ndata or measure the Response time is the time from incident creation until the \"Work in\nparameter for Progress\" status update with assignment by MSP.\nSandbox and Pre- Resolution Time is the time from incident creation until the \"Resolved\"\nProduction status update.\nenvironments\nPriority Resolution time\nP1 15 Hours\nP2 3 Days\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 79 of 125\nP3 6 days\nP4 - Service Request 15 days\nSLA calculation Formulae:\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period\nSLA target Resolution Time % = 100%\nSeverity level for 2% of quarterly payment due\ncomputation of\nLiquidated Damages\nMeasurement interval Monthly\nReporting interval Quarterly\nReports or Data to be Automated SLA dashboard in Service Request tools but not limiting to\nsubmitted, if any following reports can be customizable as required.\n1. Incident Resolution Report\n2. Incident Request Work \u201cIn Progress\u201d Report\n3. Incident average resolution report\n4. Incident number of duplicates\n5. % of incidents converted as Problem\n6. % repeat unknown cause of/incident\n7. Number of incidents with priorities modified during their course\nof resolution report\n8. RCA of P1 and P2 resolved.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 80 of 125\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 81 of 125\nThe dependency injection feature allows you to define the dependencies that your\n-\napplication needs in configuration classes, and the framework will automatically create\nand inject the required beans at runtime. This can make it easier to manage\ndependencies and keep your code modular and maintainable.\nIt also provides CRUD (create, read, update, delete) services that can be used to\n-\nsimplify the implementation of common persistence tasks. These services are built on\ntop of the Spring Data project, which provides a consistent interface for interacting with\na variety of data stores.\nFigure 1 Registry Software Architecture\nAt a high level, application consists of the following components:\nController:\n-\nVlookup: An API that handles requests related to retrieving subscriber information and\n-\nnetwork participant information would require an authentication mechanism to ensure\nthat only authorised users are able to access this information.\nLookUp: An API that retrieves subscriber information but does not have any\n-\nauthentication mechanism in place.\nSubscribe: An API mentioned here is a way for entities such as buyers, sellers, or\n-\nnetwork participants to register with ONDC registry.\nService:\n-\nValidation Keys: This logic is used to verify the signing_public_key and\n-\nencryption_public_key that are provided at the time of subscription through the\nsubscribe API. The validation keys are used to ensure that the keys provided by the\nentity are authentic and have not been tampered with.\nDomain Verification: The subscriber\u2019s URL is verified as part of the subscription\n-\nprocess. This process can ensure that the subscriber_id corresponds to a specific\ndomain, and that the subscriber has control over that domain. It also provides a way\nfor the system to confirm that the subscriber is who they claim to be, and that the\ndomain is being used for legitimate purposes.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 83 of 125\nAudit/Logging: The application allows for the logging and storage of information\n-\nrelated to certain events that occur within a system. This information can include details\nsuch as who performed an action, when it was performed, and what the action was.\nValidate Network Participant:\n-\nOne level of validation is JSON Schema validation, it is a way to ensure that the\n-\ndata received from the network participant conforms to a specific schema, this\nschema could contain certain rules for the message structure, data types, and\nformat. This step of validation helps to ensure that the data received from the\nnetwork participant is well-formed and can be processed correctly by the system.\nAnother level of validation is city code validation, This can be used to confirm that\n-\nthe network participant is physically located in a specific city, this information can\nbe used to determine the correct time zone, currency, or other data relevant to the\napplication.\nAnother level of validation is domain validation, which is used to confirm that the\n-\nnetwork participant has ownership of a specific domain name. This can help to\nprevent spoofing or phishing attempts.\nThe subscriber URL validation is a way to verify that the network participant is\n-\nauthorised to access specific resources or services, by checking that the network\nparticipant's URL matches a whitelisted or trusted domain.\nIt's important to note that these methods of validation can be used together or\n-\nindividually depending on the security requirements and the complexity of the\nnetwork.\nC. High Level Architecture\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 84 of 125\nFigure 2 Registry High Level Architecture\nPresentation Layer:\nThe presentation layer is the interface through which users interact with the registry. It\n-\nis responsible for presenting the information stored in the registry to the user, as well\nas receiving and validating requests from the user.\nThe presentation layer would receive requests from the user, validate them to ensure\n-\nthat they are properly structured and contain all necessary information, and then pass\nthem on to the registry. The registry would then process the request and return the\nrequested information to the presentation layer, which would in turn present it to the\nuser.\nThe presentation layer can also include additional functionality, such as authentication\n-\nand authorisation, to ensure that only authorised users are able to access the registry\nand that they are only able to perform actions that they are permitted to perform.\nBusiness Layer:\nThe business layer sits between the presentation layer and the database layer. It is\n-\nresponsible for implementing the business logic of the registry, including verifying\ndomain names, validating keys, and verifying the identity and credentials of network\nparticipants and sellers.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 85 of 125\nThe business layer can also include additional functionality, such as data\n-\ntransformation and mapping, to ensure that the data is properly formatted and\nstructured for use by the presentation layer and the database.\nPersistence Layer:\nIt is responsible for storing and retrieving information from the registry's database. It\n-\nimplements the logic for storing and organizing the data in the database, as well as for\nexecuting requests from the business layer to retrieve or update the data.\nThe persistence layer can include a variety of different components, such as database\n-\nmanagement systems, data storage systems, and data access and retrieval\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.\nDatabase:\nThe database is responsible for storing the data that is managed by the registry.\n-\nThe database stores the data in tables, with each table representing a different entity\n-\nor type of information. For example, there might be tables for storing information about\nnetwork participants, sellers, and transactions.\nRefer to Section 2 [Database Design] for more details.\n-\nD. Deployment Architecture\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application,\nand it routes incoming requests to the appropriate location backend based on the configured\nrules.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 86 of 125\nFigure 3 Deployment Architecture\nThe HTTP(S) Load Balancer provides below features:\nDeploy multiple instances of the application to different servers / virtual machines.\n-\nCreate an HTTP(S) Load Balancer and configure it to route traffic to the different\n-\nlocations where your application is deployed.\nAuthentication and authorization:\nHaving a white list of authorised network participants can help to ensure the security\n-\nand integrity of the registry by limiting access to only those participants that have been\nvetted and deemed trustworthy.\nBy exposing a URL and public key information, network participants can demonstrate\n-\ntheir identity and authenticity to the registry, which helps to ensure that only authorised\nparticipants are granted access.\nE. Registry Class Diagrams\nClass Diagrams: Com.nsdl.beckn.np.model.request :\n1) Ack.java:\nStatus: ACK for success, NACK for unsuccess. Delivers the message for the\nstatus. The status should be represented in string format.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 87 of 125\n2) Context.java :\nIn this class it should give the details of operation number, whereas operation\nnumber should be represented in integer format.\n3) Entity.java:\nIn this Entity class it should contain the details such as GST number, PAN number,\nName and Address of Authorised Signatory, email id, Mobile number, country. And also,\nshould give the details of effective date of registration.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 88 of 125\n4)EntityGst.java:\nThis EntityGst class contains the values such as Legal entity name, Business address, city\ncode, GST number.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 89 of 125\n5) EntityPan.java:\nThis EntityPan class contains name as per PAN, pan number, and date of\nincorporation description.\n6) Error.java:\nIn case of any failure scenarios this model gives the necessary\ninformation.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 90 of 125\n7) ErrorResponse.java :\nThis class show the Error Response Acknowledgement, like example\nSubscriber id already exists/Subscribe id does not exist.\n8) ErrorResponseACK.java :\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is\nunsuccess it gives NACK.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 91 of 125\n9) KarzaGstRequest.java :\nThis class contains the information of GST and Consent .\n10) KarzaPanRequest.java:\nThis Class contains the values of PAN number, Name, Date of birth,\nConsent.\n11) KeyPair.java:\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 92 of 125\nThis Class contains the information about Signing public key, encryption public key, valid from\nand valid until which are in string format.\n12) Logs.java: This class contains Server Name and request id.\n13) NetworkParticipant.java:\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And\nalso seller on record, city code list.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 93 of 125\n14) ReqLookup.java:\nThis Class contains the information such as Subscribe id, city, country, domain, type.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 94 of 125\n15) ReqOnSubscribe.java:\nThis Class shows Subscriber ID and challenge.\n14) RequestOldSearch.java:\nThis class contains the values city name, country name, domain, type, subscriber id, unique\nkey id, message.\n15) RequestSearch.java:\nThis class contains the values such as Sender subscriber id, request id, time stamp, search,\nparameters, signature, status code and message.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 95 of 125\n16)RequestSearchParam.java:\nThis class contains the values such as city, country, domain, type, subscriber id, data.\n17) RequestText.java:\nThis class contains the values such as client public key, challenge,\nclient private key\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 96 of 125\n18) SellerOnRecord.java :\nThis entity contains the values such as unique key id, key pair, city code.\n19) SubscribeBody.java :\nThis class contains the values such as subscribe context details, subscribe\nmessages. Gives error message details.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 97 of 125\n20) SubscribeContext.java :\nThis class contains the values of subscribe context details. shows the operation details.\n21) SubscribeMessage.java:\nThis class contains the values of entity, network participant, time stamp, request id.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 98 of 125\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 99 of 125\nCom.nsdl.beckn.np.model.response:\n1)ApiEntityMasterProjection.java:\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption,\nvalid from and valid until details, Subscriber URL.\n2) MessageCustomeResponse.java:\nIn this class there is a relationship between Message Customer response and message\nresponse.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 100 of 125\n3) MessageResponse.java:\n4) Response.java:\nThis class contains the response of the status message.\n5) ResponseKeyPair.java:\nThis class contains the details of signing public key, encryption public key, valid from and valid\nuntil.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 101 of 125\n6) ResponseNetworkParticipant.java:\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or\nSellerApp, MSN value, city code and seller on record details and map seller details.\n7) ResponsEntityMaster.java:\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing\npublic key, encryption public key, created updated, unique key id, and network participant\ndetails.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 102 of 125\n8) ResponseOnSubscribe.java :\nThis class contains the answers of the response.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 103 of 125\n9) ResponseSellerOnRecord.java:\nThis class contains the details of unique key id, key pair value, and city code. Gives the\nresponse of seller on record details.\n10) ResponseText.java:\nThis class contains the details answer of response text.\n11) ResponsOldCityArrayEntityMaster.java:\nThis class contains the details of city, here there is a relation with response old entity parent\nmaster and response old city array entity master.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 104 of 125\n12) ResponsOldCityEntityMaster.java:\nThis class contains the details of city and there is relation between response old entity parent\nmaster and response old city entity master.\n13) ResponsOldEntityParentMaster.java:\nThis class contains the details of subscriber id, status information, unique key\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption\npublic key, created, updated, brid, and city details.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 105 of 125\nF. Sequence diagrams\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 106 of 125\nOnboarding Subscriber Controller\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 107 of 125\nOnboarding Subscriber Service\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 108 of 125\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 109 of 125\nG. Database Design\nThe registry component describes the following data models:\ndomain_master: This data model likely stores information about the various domains\n-\nthat are supported by the registry. A domain could represent a specific business\ncontext, such as a particular industry or market segment, and the domain_master data\nmodel would store details about each domain, such as its name and any relevant\nmetadata.\nentity_master: This data model likely stores information about the various entities that\n-\nare registered with the registry. An entity could represent a person, company, or other\ntype of organisation, and the entity_master data model would store details about each\nentity, such as its name, address, and contact information.\nnetwork_participant_master: This data model likely stores information about the\n-\nvarious network participants that are registered with the registry. A network participant\ncould represent a user, device, or other type of entity that is participating in the network,\nand the network_participant_master data model would store details about each\nparticipant, such as its domain, status, and subscriber.\nregistry_keys: This data model likely stores information about the various keys that are\n-\nused to secure communications between the registry and other components. These\nkeys could include public and private keys, as well as any other types of keys that are\nused to encrypt or decrypt data.\nseller_on_record_master: This data model likely stores information about the various\n-\nsellers that are registered with the registry. A seller could represent an individual or\ncompany that is offering products or services for sale, and the\nseller_on_record_master data model would store details about each seller, such as\nunique id, subscriber id and keys.\nH. ER Diagram\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 110 of 125\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 111 of 125\nI. Registration Scenarios\nNetwork participants can register as Buyer App, Seller App or both.\nTo register as either, almost same steps are to be followed as shown in the next section barring\nthe following differences:\na. Register as Buyer App\nops_no = 1\n-\n\"type \": \"buyerApp\u201d,\u201cmsn\u201d: false\n-\nThis option is used when the network participant wants to register as a buyer App alone.\nb. Register as Seller (Non-MSN)\nops_no = 2\n-\n\"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\n-\nThis option is used when the network participant wants to register as a seller App alone that\nhas their own inventory.\nc. Register as Multi-Seller Node (MSN) Seller\nops_no = 3\n-\n\"type \": \"sellerApp\u201d , \u201cmsn\u201d: true\n-\nThis option is used when the network participant wants to register as a seller App that has\nmultiple merchants on boarded to their application.\nd. Register as Buyer and Non-MSN Seller\nops_no = 4\n-\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n-\n\"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\n-\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has their own inventory.\ne. Register as Buyer and MSN Seller\nops_no = 5\n-\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n-\n\"type \": \"sellerApp\u201d , \u201cmsn\u201d: true\n-\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has multiple merchants on boarded to their application.\nJ. User Flow to create subscribe request (Aud: Network Participant)\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 112 of 125\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 113 of 125\nSteps to be followed by Network Participant for getting onboarded on ONDC\n1. Gather all pre-requisites\na. Create Subscriber ID\ni. Purchase a domain name \u2013 Eg. - ondc.example.com.\ni. Purchase SSL certificate\nii. Map it with purchased domain. Eg. \u2013 https://ondc.example.com\niii. subscriber_Id = SSL + Domain Name\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual\nprocess.\nv. Configure your system with the domain name and SSL. All\ncommunication with the ONDC network will happen through this domain.\nb. Generate Signing key pair\ni. Method name: generateSigningKeyPair()\nii. Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing\niii. API: post/signature/key\niv. URL \u2013\nGeneric - {{pilot_url}}/crypto/signature/key\n\u2714\nPre-prod - https://preprod.registry.ondc.org/generate-sign-keys or\n\u2714\nv. Input (body) with example: No input needed\nvi. xpected output with example: signing_public key and\nsigning_private_key\n{\n\"publicKey\": \"S5h8gLhvW1AWP8k5spsGGSWXII0pAL6Z78bHpDF\n1SbE=\",\n\"privateKey\": \"vIk+FxxD5n8LcG0mgR6qL0Sln+Qo/AUQdZGzpeoU\nUn0=\"\n}\nc. Generate request_Id or unique key id (ukId)\ni. Method name: NA\nii. Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing. It should be unique for each network\nparticipant.\niii. URL - https://www.uuidgenerator.net/\niv. Input (body) with example \u2013 No input needed\nv. Expected output with example - b4963e85-47c4-41b1-94ab-\n6f3acc490f4d\nd. Create an html page. Eg - ondc-site-verification.html\ne. Generate encryption-decryption key pair\ni. Method name: generateEncDecKey()\nii. Description: Generate encryption decryption key pair using x25519 key\nexchange algorithm.\niii. API: post/signature/key\niv. URL \u2013\nGeneric - {{pilot_url}}/crypto/encrypt/decrypt/key\n\u2714\nPreprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key\n\u2714\nv. Input (body) with example: No input needed\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 114 of 125\nvi. Expected output with example (enc_dec_private_key and\nenc_dec_public_key)\n{\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dX2amsNb1zyq\nBiLLT+e2+mzJ2QH0=\",\n\"privateKey\": \"MFECAQEwBQYDK2VuBCIEINhPuAXdILHJvfhngONl0aIQ8\nIJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2\n+mzJ2QH0=\"\n}\nf. Set-up for key verification via HTML\ni. Place the created HTML at subscriber_Id. The new url to access the\nHTML will be in the format: https//<subscriber_Id>/<html page title>.\nRegistry shall check existence of this url in later stages. And will be\nreferred as callback_url.\nEg. https://ondc.example.com/ ondc-site-verification.html\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate\nwhat is termed as signed_unique_req_id or signature.\ni. Method name: sign(byte[] privateKey, byte[] message)\nii. Description: This method generates signature using given ED25519 32\nbyte/ 256 bits Private key.\niii. API: post/signature/generate\niv. URL:\nGeneric - {{pilot_url}}/crypto/signature/generate\n\u2714\nPreprod -\n\u2714\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\ng\nv. Input with example:\n{\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"cDWjNpLHYFFF8zFXBQoBlrmsXezndSj1JZRzSZZoKB\n4=\"\n}\nvi. Expected output with example\n\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP\nX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\"\nh. Add created signature (5.2.2, signed_unique_req_id) to callback html (5.2.1).\nEg:\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 115 of 125\ni. Configure /on_subscribe implementation to decrypt encrypted\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi).\nONDC registry public key will available publically.\ni. Click here for reference link\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[]\nprivateKey, byte[] publicKey (to be confirmed)\niii. API name: crypto/decrypt/text\niv. URL: {{pilot_url}}/crypto/decrypt/text\nv. Input:\n{\n\"value\": \"cNK5xU6tKn2VJ47AKL6cQQC0gnbpnByqvEXboCJPnbA=\",\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iMHx0Zo\ndBn0P9UTHcOkeczDmeOVkU=\",\n\"Subscriber_PrivateKey\": \"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI\n1jIIcjmzWgPQlIg/T1Q6A3pZ0AIWp6gSEAJGnKRTAEcSvpgD0mw9gBHv94E\n3w8sTtmPlszuXIEAF0=\"\n}\nvi. Expected Output: decrypted challenge_string\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback\nhtml (5.2.3).\nSend decrypted \u2018challenge_string\u2019 as a response to /on_subscribe.\nj. Create /subscribe request\nPlease refer to Github (ONDC_official) for more information.\nMethod: Following items must be kept ready\n- ops_no: based on which registration / amendment scenario is applicable, pass\n1,2,3,4,5 as ops_no parameter (refer 3.5)\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile\nNo., Country, Subscriber ID, Signing and Enc-Dec Keys (all parameters are either\nexistence proofs or generated pre-requisites)\n- Network Participant Details (Domain Name, Subscriber Type)\nURL: {{pilot_url}}/ondc/subscribe\nSample Input with example:\n{\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 116 of 125\n}\n},\n\"message\": {\n\"entity\": {\n\"gst\": {\n\"legal_entity_name\": \"Protean E-Gov\",\n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati\nBapat Marg, Lower Parel, Mumbai 013.\",\n\"city_code\": [\n\"std:080\"\n],\n\"gst_no\": \"27AAECF8760H1ZC\"\n},\n\"pan\": {\n\"name_as_per_pan\": \"Protean E-Gov\",\n\"pan_no\":\"AAECF8760H\",\n\"date_of_incorporation\": \"05/01/2022\"\n},\n\"callback_url\": \"/test\",\n\"name_of_authorised_signatory\": \"NSDL\",\n\"address_of_authorised Signatory\": \"Lower Parel,\",\n\"email_id\": \"contact@nsdl.co.in\",\n\"country\": \"IND\",\n\"mobile_no\": \"8734598345\",\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",\n\"key_pair\": {\n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\ncy5ZzuI0inWWf5fGZBs=\",\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n}\n},\n// change type and msn input depending on registration scenario\n\"network_participant\": [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\":false,\n\"city_code\": [\n\"std:080\"\n],\n// change input depending on registration scenario; the second network participant block only\nused in registration scenarios 4 and 5.\n\"network_participant\": [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 117 of 125\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": [\n{\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\n\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\n4mYqU6Aak/XiOFKDFAnUt0qRhM=\",\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n}\n]\n}\n],\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for\nlist of possible errors and their resolutions in the document attached.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 118 of 125\nK. User Flow to create On_subscribe request (Aud: Network Participant)\n8.1 Receive /subscribe request\n8.2 Verify OCSP and domain\n8.2.1 API: {{pilot_url}}/crypto/ocsp/verify\n8.2.2 Description: Deduplication check?\n8.2.3.Input: <subscriber_id>; Eg - ondc.example.com\n8.2.4. Expected output: Valid / Not Valid\n8.3 Verify signed keys / signature\n8.3.1 API: {{pilot_url}}/crypto/signature/verify\n8.3.2 Input data with example:\n{\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"clientPublicKey\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\"\n}\n8.3.3 Output: Valid / Not Valid (Error code, error message (eg - Signature is not valid header\nformat.))\n8.4 Create on_subscribe request\n8.4.1 Click here to access reference link.\n8.4.2 Generate challenge_string.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 119 of 125\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key\nreceived from /subscribe to generate encrypted_challenge_string.\ni. API: {{pilot_url}}/crypto/encrypt/text\nii. Input with example:\n{\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFl5oUrH/33bA/KulLErqGstlgSEA+XpYc09S8X8mkgNTlf6nlPRbL46TCwEXl\nAIkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkIrkyxTqyssjtYJ3KRN\nD5FnzK5MDrwlK3kC8=\"\n}\niii. Expected output: encrypted_challenge_string\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg.\nhttps://ondc.example.com/ ondc-site-verification.html/on_subscribe\nv. Input:\n{\n\"subscriber_id\": \"abc.com\",\n\"challenge\": \"encrypted_challenge_string\"\n}\nvi. Expected output:\nReceive decrypted_challenge_string from the subscriber.\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If\nboth are equal return ACK, else return NACK with error message.\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 120 of 125\nL. Lookup and Vlookup APIs\nThese APIs are used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases in which there APIs are used\n\u25cf By gateways and/or adapters for search details about network participants\n\u25cf By network participants to querying existing details\n/vlookup is the more advanced and secure version of /lookup.\n/lookup is still in use for backward compatibility with older network participants.\n1. LOOKUP\n\u25cf Input parameters: only search parameters are sent as inputs. Minimum 2 search\nparameters are mandatory\nInput parameters:\no\n\u25aa country\n\u25aa domain\n\u25aa type\n\u25aa city\n\u25aa subscriber_id\nExample:\no\n{\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\nOutput Response for the API is a list of network participants satisfying the\no\nsearch parameters passed via input.\n\u25cf Output Parameters:\nOutput Response of /lookup will show all details sequentially as a renormalized\no\nflat list. For example, if the response contains 2 network participants, one is a\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response\nis 4 blocks of details, 2 of network participants and 2 of sellers on record.\nExample:\no\n[\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"subscriber_url\": \"/subscriber1\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"buyerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 121 of 125\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\nLH0U=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 122 of 125\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\nLH0U=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"city\": \"std:080\"\n}\n]\n2. VLOOKUP [To be deprecated]\n\u25cf Input parameters:\nAlong with search parameters as inputs, few input parameters are also sent as\no\ninputs.\nSignature is sent as one of the input parameters makes it highly secured as\no\ncompared to /lookup.\nMinimum 2 search parameters are mandatory.\no\nAPI Input Parameters:\no\n\u25aa sender_subscriber_id\n\u25aa request_id\n\u25aa timestamp\n\u25aa search_parameters ( min 2 parameters):\n\u25cf country\n\u25cf domain\n\u25cf type\n\u25cf city\n\u25cf subscriber_id\n\u25aa signature key\n\u25aa Example:\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option5\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+EwOa77fJcqSxuj4+JGr115oMtlVKdyG8febGjivv\nOpZZUAX0tLAgapmDIX+xQhl3RS2qpCX3s6mS3uoCw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n}\n\u25cf Output Parameters:\nOutput Response for the API is a list of network participants satisfying the search\no\nparameters passed via input.\nOutput Response of /lookup will show all details in a hierarchical manner. For\no\nexample, if the response contains 2 network participants, one is a buyer and other\nis a MSN seller with 2 sellers on record, then /vlookup response will show the\ndetails of two sellers on record as a subset of the MSN seller.\nExample:\no\n[\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 123 of 125\n\"city\": [\n\"std:080\"\n],\n\"country\": \"IND\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/ac7\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\": [\n{\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": []\n},\n{\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": [\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\n0U=1\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n},\n{\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"key_pair\": {\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 124 of 125\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\n0U=1\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n}\n]\n}\n]\n}\n]\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 125 of 125\n\nRef: ONDC/Tech/Registry/12-2024/P-101\n\nOpen Network for Digital Commerce\n\nRequest for Proposal (RFP) for Selection of\nManaged Services Provider (MSP) for upgrade\nand maintenance of ONDC Registry\n\n10th Feb 2025\n\nRef: ONDC/Tech/Registry/12-2024/P-101\n\nONiDC\n\nOpen Network for Digital Commerce\n\nRequest for Proposal (RFP) for Selection of\nManaged Services Provider (MSP) for upgrade\nand maintenance of ONDC Registry\n\n10th Feb 2025\n\nONG C\n\nOpen Ne\n\nAPPENDIX 2\n\n1. Considerations:\nService Fee............:.:::::08\n\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be\nmarked up in the invoice for Service Fee on actual basis and shall be borne and\npaid by Client to the Service Provider. The responsibility to pay such taxes to the\napplicable authorities will be that of the Service Provider. The Service Provider\nshall ensure timely deposit of GST amount as well as filing of GST returns with the\napplicable authorities such that the Client is able to avail input credit on such GST\namount. The Service Provider shall raise invoice on a monthly basis/as per\npayment milestones which shall include monthly progress report.\n\nc) The Service Fee payable hereunder shall be paid subject to deduction of income\ntax at source / withholding taxes, levies or other deductions at the applicable rates.\nIf payment to a Service Provider is subject to Tax Deduction at Source (TDS), the\nClient agrees to comply with the relevant rules and regulations under the Income\nTax Act and to provide the TDS certificates to the Service Provider within the\nprescribed timelines.\n\nd) For out of pocket expenses, the Service Provider shall seek prior approval of all\nsuch expenses from the designated authorised representative of the Client\nduring incurring any such expense.\n\ne) If work for Client requires that personnel perform Services outside the city, state,\nprovince, or country in which such personnel are based, Client will reimburse the\nService Provider for increased tax and administrative costs incurred by the Service\nprovider and/or its personnel. Client will be responsible for the payment of taxes in\nconnection with this Agreement incurred on transactions between and among the\nService Provider, its Affiliates, and third-party subcontractors to the extent\napplicable to the performance of Services under this Agreement.\n\nf) Payment terms and conditions:\n\nSubmission and Payment of Invoices. The Service Provider shall submit an invoice\nfor performance of the Services and Deliverables as per this APPENDIX 2. Invoices\nshall be submitted to the designated contact of the Client. Invoices must include a SLA\nreports, description of tasks performed, deliverables delivered and hours spent\nperforming such tasks broken down by dates, as applicable.\n\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii)\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of\nsuch invoices.\n\nAny eligible pre-approved out of pocket expenses (including travel expenses) incurred\nby the Service Provider for the performance of the Services and/ or Deliverables will\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 33 of 125\n\nONC C\n\nOpen Ne\n\nAPPENDIX 2\n\n1. Considerations:\nService Fee............:.:::::08\n\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be\nmarked up in the invoice for Service Fee on actual basis and shall be borne and\npaid by Client to the Service Provider. The responsibility to pay such taxes to the\napplicable authorities will be that of the Service Provider. The Service Provider\nshall ensure timely deposit of GST amount as well as filing of GST returns with the\napplicable authorities such that the Client is able to avail input credit on such GST\namount. The Service Provider shall raise invoice on a monthly basis/as per\npayment milestones which shall include monthly progress report.\n\nc) The Service Fee payable hereunder shall be paid subject to deduction of income\ntax at source / withholding taxes, levies or other deductions at the applicable rates.\nIf payment to a Service Provider is subject to Tax Deduction at Source (TDS), the\nClient agrees to comply with the relevant rules and regulations under the Income\nTax Act and to provide the TDS certificates to the Service Provider within the\nprescribed timelines.\n\nd) For out of pocket expenses, the Service Provider shall seek prior approval of all\nsuch expenses from the designated authorised representative of the Client\nduring incurring any such expense.\n\ne) If work for Client requires that personnel perform Services outside the city, state,\nprovince, or country in which such personnel are based, Client will reimburse the\nService Provider for increased tax and administrative costs incurred by the Service\nprovider and/or its personnel. Client will be responsible for the payment of taxes in\nconnection with this Agreement incurred on transactions between and among the\nService Provider, its Affiliates, and third-party subcontractors to the extent\napplicable to the performance of Services under this Agreement.\n\nf) Payment terms and conditions:\n\nSubmission and Payment of Invoices. The Service Provider shall submit an invoice\nfor performance of the Services and Deliverables as per this APPENDIX 2. Invoices\nshall be submitted to the designated contact of the Client. Invoices must include a SLA\nreports, description of tasks performed, deliverables delivered and hours spent\nperforming such tasks broken down by dates, as applicable.\n\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii)\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of\nsuch invoices.\n\nAny eligible pre-approved out of pocket expenses (including travel expenses) incurred\nby the Service Provider for the performance of the Services and/ or Deliverables will\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 33 of 125\n\nOpen Network for Digital Commerce\n\nbe reimbursable within thirty (30) days after receipt of debit note. Such debit note for\nout of pocket expenses shall be supported by receipts, tickets (or other evidence\nverifying such expense to the reasonable satisfaction of Client) and in the case of a\ndispute concerning any expense the decision of Client shall be final and binding.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 34 of 125\n\nbe reimbursable within thirty (30) days after receipt of debit note. Such debit note for\nout of pocket expenses shall be supported by receipts, tickets (or other evidence\nverifying such expense to the reasonable satisfaction of Client) and in the case of a\ndispute concerning any expense the decision of Client shall be final and binding.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 34 of 125\n\nOpen Ne\n\nSection 3 - Change Management Process\n\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC\nand Registry MSP recognize that changes may be required during the project. ONDC also\nrecognizes that these changes may require modification to the manpower requirements and/or\ntools and may thus have a financial impact. The MSP will endeavour, wherever reasonably\npracticable, to effect change without an increase in the contract value, and ONDC or its\nnominated agencies will work with the MSP to ensure that all changes are discussed and\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions\nwhich will apply to changes to the agreement.\n\n1. Conditions for Change Order\n\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP\nrequests to carry out the following changes in relation to the services rendered by MSP:\n\n.1.__ Request for changes to the infrastructure\n\n.2. Request for change in manpower requirements because of change in scope of\nwork as set out in Section 4 - Terms of reference or due to changes in the\nservice level agreements.\n\n1.3. | Request for enhancement of features of a particular component of registry\n\narchitecture.\n\n1.4... Request for rendering services of third party software/hardware tools to\n\nenhance Registry functionality, such as a CRM tool for managing participants\u2019\n\ngrievances.\n\n1\n1\n\n2. | Change Management Process\n\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to\nperform the effort estimation for application related changes, as mentioned in\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA)\nor T-Shirt sizing or any other industry defined model for effort estimation. MSP\nshall develop the estimation model in consultation with ONDC. Post approval\nfrom ONDC, for every type of change request, this model shall be used for\nestimation purposes by MSP and ONDC shall review/approve the effort basis\nof this model.\n\n2.2. | Change Request in respect of the Agreement will emanate from the ONDC or\nMSP. MSP\u2019s Program Manager will be responsible for obtaining approval for\nthe change and will initiate the Change Request by completing Change Control\nNote (CCN) (refer Change Control Note Form). CCNs will be submitted to the\nClient, who will acknowledge receipt of the CCN.\n\n2.3. The MSP and ONDC or its nominated agencies, during the term of the\nAgreement and while preparing the CCN, shall determine whether the change\nis beyond the scope of services as detailed in Section 4-Terms of reference.\n\n2.4. The total value of all change orders to be issued under this contract shall not\nexceed 50% of the total contract value. It is hereby also clarified that any\nchange control suggested beyond 50 % (fifty percent) of the total contract value\nwill be beyond the scope of the change control process. It is hereby clarified\nthat the 50% (fifty percent) of the total contract value as stated in herein above\nis calculated on the basis of bid value (exclusive of taxes) submitted by the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 35 of 125\n\nOpen Ne\n\nSection 3 - Change Management Process\n\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC\nand Registry MSP recognize that changes may be required during the project. ONDC also\nrecognizes that these changes may require modification to the manpower requirements and/or\ntools and may thus have a financial impact. The MSP will endeavour, wherever reasonably\npracticable, to effect change without an increase in the contract value, and ONDC or its\nnominated agencies will work with the MSP to ensure that all changes are discussed and\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions\nwhich will apply to changes to the agreement.\n\n1. Conditions for Change Order\n\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP\nrequests to carry out the following changes in relation to the services rendered by MSP:\n\n.1.__ Request for changes to the infrastructure\n\n.2. Request for change in manpower requirements because of change in scope of\nwork as set out in Section 4 - Terms of reference or due to changes in the\nservice level agreements.\n\n1.3. | Request for enhancement of features of a particular component of registry\n\narchitecture.\n\n1.4... Request for rendering services of third party software/hardware tools to\n\nenhance Registry functionality, such as a CRM tool for managing participants\u2019\n\ngrievances.\n\n1\n1\n\n2. | Change Management Process\n\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to\nperform the effort estimation for application related changes, as mentioned in\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA)\nor T-Shirt sizing or any other industry defined model for effort estimation. MSP\nshall develop the estimation model in consultation with ONDC. Post approval\nfrom ONDC, for every type of change request, this model shall be used for\nestimation purposes by MSP and ONDC shall review/approve the effort basis\nof this model.\n\n2.2. | Change Request in respect of the Agreement will emanate from the ONDC or\nMSP. MSP\u2019s Program Manager will be responsible for obtaining approval for\nthe change and will initiate the Change Request by completing Change Control\nNote (CCN) (refer Change Control Note Form). CCNs will be submitted to the\nClient, who will acknowledge receipt of the CCN.\n\n2.3. The MSP and ONDC or its nominated agencies, during the term of the\nAgreement and while preparing the CCN, shall determine whether the change\nis beyond the scope of services as detailed in Section 4-Terms of reference.\n\n2.4. The total value of all change orders to be issued under this contract shall not\nexceed 50% of the total contract value. It is hereby also clarified that any\nchange control suggested beyond 50 % (fifty percent) of the total contract value\nwill be beyond the scope of the change control process. It is hereby clarified\nthat the 50% (fifty percent) of the total contract value as stated in herein above\nis calculated on the basis of bid value (exclusive of taxes) submitted by the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 35 of 125\n\nONG C\n\nOpen Ne\n\nMSP and accepted by the ONDC or its nominated agencies or as decided and\napproved by ONDC or its Nominated Agencies.\n\n3. Quotation\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide\nas a minimum:\n\n3.1.1. a description of the change;\n\n3.1.2. a list of deliverables required for implementing the change;\n\n3.1.3. a time table for implementation;\n\n3.1.4. an estimate of effort (using the estimation model, approved by ONDC)\nfor the proposed change;\n\n3.1.5. any relevant acceptance criteria;\n\n3.1.6. | an assessment of the value of the proposed change;\n\n3.1.7. Profiles of Resources to be added to the team to effect the change.\n\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake\nits own internal review of the proposal and obtain all necessary internal\napprovals. As a part of this internal review process, the MSP shall consider the\nmateriality of the proposed change in the context of the agreement and the total\neffect that may arise from implementation of the change.\n\n4. Cost\n\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in\nthe quotation, preparation of CCNs and in the completion of its obligations\ndescribed in the change management process, provided the MSP meets the\nobligations as set out in the CCN. In the event the MSP is unable to meet the\nobligations as defined in the CCN then the cost of getting it done by a third\nparty by ONDC shall be borne by the MSP.\n\n4.2. Cost for Change Order:\n\n4.2.1. For the purpose of estimating the value with respect to staff costs and\ntools associated with change order approved by ONDC, the rates\n(exclusive of taxes) submitted by the MSP in their commercial bid shall\nbe used. Taxes will be applicable as per the prevailing laws and rates\nspecified therein.\n\n4.2.2. If anewskill set is required, the cost of such resource(s) should not be\nmore than an equivalent resource in terms of number of years of\nexperience for the resource for another skill set deployed during that\nparticular time period.\n\n4.2.3. If a new infrastructure component or tool is required to implement the\nchange, the cost of such a tool or infrastructure component should not\nbe more than the prevailing market rate or the unit cost submitted by\nthe Bidder in their commercial proposal, whichever is lower.\n\n5. | Change order and SLAs\n\n5.1. For activities carried out against change orders, the applicability of existing\nSLAs shall be evaluated by the ONDC and if found applicable, the same shall\ncontinue to be in force.\n\n5.2. For activities to be performed in a time bound manner against change orders,\nONDC may define additional milestone SLAs which will have an appropriate\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs\nshall be agreed upon between ONDC and MSP prior to submission of\nquotation by the MSP.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 36 of 125\n\nONC C\n\nOpen Ne\n\nMSP and accepted by the ONDC or its nominated agencies or as decided and\napproved by ONDC or its Nominated Agencies.\n\n3. Quotation\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide\nas a minimum:\n\n3.1.1. a description of the change;\n\n3.1.2. a list of deliverables required for implementing the change;\n\n3.1.3. a time table for implementation;\n\n3.1.4. an estimate of effort (using the estimation model, approved by ONDC)\nfor the proposed change;\n\n3.1.5. any relevant acceptance criteria;\n\n3.1.6. | an assessment of the value of the proposed change;\n\n3.1.7. Profiles of Resources to be added to the team to effect the change.\n\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake\nits own internal review of the proposal and obtain all necessary internal\napprovals. As a part of this internal review process, the MSP shall consider the\nmateriality of the proposed change in the context of the agreement and the total\neffect that may arise from implementation of the change.\n\n4. Cost\n\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in\nthe quotation, preparation of CCNs and in the completion of its obligations\ndescribed in the change management process, provided the MSP meets the\nobligations as set out in the CCN. In the event the MSP is unable to meet the\nobligations as defined in the CCN then the cost of getting it done by a third\nparty by ONDC shall be borne by the MSP.\n\n4.2. Cost for Change Order:\n\n4.2.1. For the purpose of estimating the value with respect to staff costs and\ntools associated with change order approved by ONDC, the rates\n(exclusive of taxes) submitted by the MSP in their commercial bid shall\nbe used. Taxes will be applicable as per the prevailing laws and rates\nspecified therein.\n\n4.2.2. If anewskill set is required, the cost of such resource(s) should not be\nmore than an equivalent resource in terms of number of years of\nexperience for the resource for another skill set deployed during that\nparticular time period.\n\n4.2.3. If a new infrastructure component or tool is required to implement the\nchange, the cost of such a tool or infrastructure component should not\nbe more than the prevailing market rate or the unit cost submitted by\nthe Bidder in their commercial proposal, whichever is lower.\n\n5. | Change order and SLAs\n\n5.1. For activities carried out against change orders, the applicability of existing\nSLAs shall be evaluated by the ONDC and if found applicable, the same shall\ncontinue to be in force.\n\n5.2. For activities to be performed in a time bound manner against change orders,\nONDC may define additional milestone SLAs which will have an appropriate\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs\nshall be agreed upon between ONDC and MSP prior to submission of\nquotation by the MSP.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 36 of 125\n\nONG C\n\nOpen Ne\n\n5.3. In the event that any of the change orders requires definition of new SLAs,\nClient may add additional SLAs to cover the additional scope of activities as\ndefined in the change orders. Such milestone SLAs shall be agreed upon\nbetween ONDC and MSP prior to submission of quotation by the MSP.\n\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP\nand communicated by the ONDC in writing as part of the change order issued\n\nto the MSP.\n6. Obligations\n6.1. It shall be binding on MSP to implement any proposed changes as per the\n\nterms and conditions of the change order, once approval in accordance with\nabove provisions has been given.\n\n6.2. The acceptance criteria for any such \u2018Change\u2019 will remain the same as\ndescribed in the Agreement with respect to the performance and quality\nparameters.\n\n6.3. The MSP\u2019s obligations with respect to such change order shall remain in\naccordance with the Agreement.\n\n6.4. Agreed manpower requirements for additional scope of work through a change\norder process will not be revised during the implementation of the change\nrequest.\n\nChange control note Form\n\nPART A: INITIATION\n\nChange Request Number:\n\nTitle:\n\nInitiator:\n\nBrief Description of Proposed\nChange:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 37 of 125\n\nOpen Ne\n\n5.3. In the event that any of the change orders requires definition of new SLAs,\nClient may add additional SLAs to cover the additional scope of activities as\ndefined in the change orders. Such milestone SLAs shall be agreed upon\nbetween ONDC and MSP prior to submission of quotation by the MSP.\n\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP\nand communicated by the ONDC in writing as part of the change order issued\n\nto the MSP.\n6. Obligations\n6.1. It shall be binding on MSP to implement any proposed changes as per the\n\nterms and conditions of the change order, once approval in accordance with\nabove provisions has been given.\n\n6.2. The acceptance criteria for any such \u2018Change\u2019 will remain the same as\ndescribed in the Agreement with respect to the performance and quality\nparameters.\n\n6.3. The MSP\u2019s obligations with respect to such change order shall remain in\naccordance with the Agreement.\n\n6.4. Agreed manpower requirements for additional scope of work through a change\norder process will not be revised during the implementation of the change\nrequest.\n\nChange control note Form\n\nPART A: INITIATION\n\nChange Request Number:\n\nTitle:\n\nInitiator:\n\nBrief Description of Proposed\nChange:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 37 of 125\n\nChange Submitted to\n\nPart B: EVALUATION\n\nChange Request Number:\n\nDate:\n\nDetailed Description of Change:\n\nImpact:\n\nCost\n\nRisk\n\nOn Overall Project\n\nDeliverables Involved:\n\nDetailed Timelines:\n\nAvailable alternatives (if any):\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 38 of 125\n\nOpen Net\n\nChange Submitted to\n\nPart B: EVALUATION\n\nChange Request Number:\n\nDate:\n\nDetailed Description of Change:\n\nImpact:\n\nCost\n\nRisk\n\nOn Overall Project\n\nDeliverables Involved:\n\nDetailed Timelines:\n\nAvailable alternatives (if any):\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 38 of 125\n\nAny Other Relevant Information: Payment Terms:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nSignature:\n\nAuthority to Proceed (YES/NO):\n\nApproved Rejected\nComments: Comments:\nFor ONDC For MSP\nSignature: Signature:\nName:\n\nDesignation:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 39 of 125\n\nAny Other Relevant Information: Payment Terms:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nSignature:\n\nAuthority to Proceed (YES/NO):\n\nApproved Rejected\nComments: Comments:\nFor ONDC For MSP\nSignature: Signature:\nName:\n\nDesignation:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 39 of 125\n\nOpen Network for Digital Commerce\n\nDate:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 40 of 125\n\nOpen Network for Digital Commerce\n\nDate:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 40 of 125\n\nOpen Ne\n\nSection 4 - Terms of Reference\n\n1. Introduction\n\nOpen Network for Digital Commerce (ONDC) is Govt. of India\u2019s initiative which enables e-\ncommerce networks based on open protocols which will enable commerce across different\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications\nin the network and they will communicate using open protocols. For enabling this broadly there\nare two infrastructure components that are essential to the network namely Gateway and\nRegistry. Incumbent agency (M/s Protean) has been supporting both of these integral\ncomponents as per the requirements of ONDC.\n\nThe Gateway enables discovery in the network. When a buyer (seeker) application wants to\nsearch the network for goods/services it sends the search intent to the Gateway which\nbroadcasts it to all the eligible sellers through seller applications (provider applications) who\nmay service this request. The seller applications in turn send their catalogues back to the\nbuyer applications asynchronously against the same intent as broadcast by the Gateway. The\nresponse to search intent is directly cascaded by seller apps to buyer apps, on end points\ndefined by buyer apps as part of the intent.\n\nThe Registry is a repository for storing the details of the network participants including seller\napp, buyer app and gateways. It is the meta data repository for all entities in the network, that\nincludes end point URLs, Public Keys etc.. All the network participants use the Registry to get\ndetails of other entities in the network. Registry has four main features:\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the\ncredentials of the existing NP on to the network\n2. Provide meta data details of onboarded entities to other authenticated network\nparticipants.\n3. Respond to gateway resolving the discovery intent from buyer apps.\n4. Host and provide authentication information for respective network participants to\nthe requester.\n\nIt is responsible for registering the network participants on the ONDC network . This involves\nverifying the identity and credentials of the participant, and adding them to a list of approved\nentities that are allowed to access and operate on the network. It ensures that only authorised\nentities are able to access the network and participate in transactions on the ONDC network.\nAll the transactions on the registry are authenticated using a state of an art key based signing\nalgorithm.\n\nThe Registry plays a pivotal role in discovering Network Participants (\u201cNP\u201d) on ONDC network\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up-to-\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying\npost authentication of their signatures.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 41 of 125\n\nONC C\n\nOpen Ne\n\nSection 4 - Terms of Reference\n\n1. Introduction\n\nOpen Network for Digital Commerce (ONDC) is Govt. of India\u2019s initiative which enables e-\ncommerce networks based on open protocols which will enable commerce across different\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications\nin the network and they will communicate using open protocols. For enabling this broadly there\nare two infrastructure components that are essential to the network namely Gateway and\nRegistry. Incumbent agency (M/s Protean) has been supporting both of these integral\ncomponents as per the requirements of ONDC.\n\nThe Gateway enables discovery in the network. When a buyer (seeker) application wants to\nsearch the network for goods/services it sends the search intent to the Gateway which\nbroadcasts it to all the eligible sellers through seller applications (provider applications) who\nmay service this request. The seller applications in turn send their catalogues back to the\nbuyer applications asynchronously against the same intent as broadcast by the Gateway. The\nresponse to search intent is directly cascaded by seller apps to buyer apps, on end points\ndefined by buyer apps as part of the intent.\n\nThe Registry is a repository for storing the details of the network participants including seller\napp, buyer app and gateways. It is the meta data repository for all entities in the network, that\nincludes end point URLs, Public Keys etc.. All the network participants use the Registry to get\ndetails of other entities in the network. Registry has four main features:\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the\ncredentials of the existing NP on to the network\n2. Provide meta data details of onboarded entities to other authenticated network\nparticipants.\n3. Respond to gateway resolving the discovery intent from buyer apps.\n4. Host and provide authentication information for respective network participants to\nthe requester.\n\nIt is responsible for registering the network participants on the ONDC network . This involves\nverifying the identity and credentials of the participant, and adding them to a list of approved\nentities that are allowed to access and operate on the network. It ensures that only authorised\nentities are able to access the network and participate in transactions on the ONDC network.\nAll the transactions on the registry are authenticated using a state of an art key based signing\nalgorithm.\n\nThe Registry plays a pivotal role in discovering Network Participants (\u201cNP\u201d) on ONDC network\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up-to-\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying\npost authentication of their signatures.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 41 of 125\n\nONG C\n\nOpen Ne\n\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to\nthe expected growth in NPs. As of Nov, 2024, the number of monthly transactions being\nenabled on the ONDC network has reached 15 Million across various domains including\nconsumer goods, logistics, mobility, financial services, among others. The peak TPS of\nregistry that we have observed so far, is of the tune 1500.\n\nAt present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance\nthe design of the Registry based on the design principles and functional requirements\nspecified in this document and select a service provider to manage and maintain the Registry\non an ongoing basis.\n\nAn overview of the current design of Registry is provided in Annexure - 3 of the RFP.\n\n2. Design principles of Registry\n\n2.1. Open source and avoidance of vendor lock-in: The Registry shall be\ndesigned and implemented using open source components and avoid usage\nof proprietary components that may result in vendor lock-in(s).\n\n2.2. Multi-tiered architecture: The Registry shall be designed as a multi-tiered\narchitecture with independently scalable layers as depicted in the logical\narchitecture provided below in Figure 1.\n\n2.2.1. API layer - The Registry will follow an API first design philosophy. It\nprovides three APIs - the Subscribe, Lookup and Admin APIs at present\nwhich enable Network Participants to be added to the Registry and\nquerying of Network Participant data. The API layer shall expose the\nend points to be accessed via the API Gateway(s) after due\nauthentication of incoming requests. The existing APIs may be\nenhanced further and new APIs may also be added during the course\nof this contract based on emerging business requirements of ONDC.\n\n2.2.2. Application layer - The application layer will perform the necessary\nrequest processing which can be an update to Registry or a Registry\ndata lookup.\n\n2.2.3. Data layer - The data layer will host the core Registry database and\nobject store along with a data cache. All data access of the Registry\ndatabase will include a writeback to the cache.\n\nThe core Registry database can be a denormalized, key-value pair\n\ndatabase. The solution may incorporate any contemporary consistent\ndata architecture using any database technology.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 42 of 125\n\nONC C\n\nOpen Ne\n\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to\nthe expected growth in NPs. As of Nov, 2024, the number of monthly transactions being\nenabled on the ONDC network has reached 15 Million across various domains including\nconsumer goods, logistics, mobility, financial services, among others. The peak TPS of\nregistry that we have observed so far, is of the tune 1500.\n\nAt present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance\nthe design of the Registry based on the design principles and functional requirements\nspecified in this document and select a service provider to manage and maintain the Registry\non an ongoing basis.\n\nAn overview of the current design of Registry is provided in Annexure - 3 of the RFP.\n\n2. Design principles of Registry\n\n2.1. Open source and avoidance of vendor lock-in: The Registry shall be\ndesigned and implemented using open source components and avoid usage\nof proprietary components that may result in vendor lock-in(s).\n\n2.2. Multi-tiered architecture: The Registry shall be designed as a multi-tiered\narchitecture with independently scalable layers as depicted in the logical\narchitecture provided below in Figure 1.\n\n2.2.1. API layer - The Registry will follow an API first design philosophy. It\nprovides three APIs - the Subscribe, Lookup and Admin APIs at present\nwhich enable Network Participants to be added to the Registry and\nquerying of Network Participant data. The API layer shall expose the\nend points to be accessed via the API Gateway(s) after due\nauthentication of incoming requests. The existing APIs may be\nenhanced further and new APIs may also be added during the course\nof this contract based on emerging business requirements of ONDC.\n\n2.2.2. Application layer - The application layer will perform the necessary\nrequest processing which can be an update to Registry or a Registry\ndata lookup.\n\n2.2.3. Data layer - The data layer will host the core Registry database and\nobject store along with a data cache. All data access of the Registry\ndatabase will include a writeback to the cache.\n\nThe core Registry database can be a denormalized, key-value pair\n\ndatabase. The solution may incorporate any contemporary consistent\ndata architecture using any database technology.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 42 of 125\n\nONC\n\nOpen Network for Digital Commerce\n\n2.2.4.\n\n2.2.5.\n\n2.2.6.\n\nThis layer shall also have features to classify and manage core Registry\nand log data based on frequency of access as well as recency of data\nas Hot, Warm and Cold and retaining data for up to 7 years based on\nbusiness and regulatory requirements. Correspondingly, different\nstorage technologies shall be utilised in the infrastructure layer for\nefficient and cost effective management of Registry data.\n\nLogical architecture - Registry\n\nBuyer App\nSeller App\n\nGateway\n\nAPi Layer Subscription Services Lookup/Admin Services \u2018\nCore Components Subscription Services Lookup/Admin Services '\n\naa Go Lo | :\n\nMonitoring & Management Services '\n\n' \u2018astructure layer (Physical machines, Hot/Warm/Cold storage layers, Automatic DR cutove '\n\nFigure - 1: Indicative Logical architecture of Registry\n\nAuthentication and Authorization - This layer will authenticate and\nauthorise incoming requests from the NPs through the ONDC Network\nGateway(s) or directly as the case may be and enable secure access\nto the Registry.\n\nThe authentication and authorization layer must cater to API\nauthentication and user authentication as the case may be.\n\nPerimeter security layer - This layer will contain perimeter security\ndevices that will include Web Application Firewall, L3 firewalls,\nAdvanced Threat Protection and DDoS protection.\n\nMonitoring and management services - This will comprise a set of\ncomponents to monitor the performance and availability of the entire\nRegistry stack on a real time basis. This will also report data to the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 43 of 125\n\nOpen Network for Digital Commerce\n\n2.2.4.\n\n2.2.5.\n\n2.2.6.\n\nThis layer shall also have features to classify and manage core Registry\nand log data based on frequency of access as well as recency of data\nas Hot, Warm and Cold and retaining data for up to 7 years based on\nbusiness and regulatory requirements. Correspondingly, different\nstorage technologies shall be utilised in the infrastructure layer for\nefficient and cost effective management of Registry data.\n\nLogical architecture - Registry\n\nBuyer App\nSeller App\n\nGateway\n\nPerimeter Security (WAF, Firewall, Advanced Threat Protection, DDoS)\nAuthentication & Authorization\nAPI Layer\nCore Components bscription Ser /Admin Servi i '\n\nData Access\n\nData Layer\n\nMonitoring & Management Services !\n\nture layer (Physical machines, Hot/War \u2018old storage layers, Automatic DR cutover) '\n\nFigure - 1: Indicative Logical architecture of Registry\n\nAuthentication and Authorization - This layer will authenticate and\nauthorise incoming requests from the NPs through the ONDC Network\nGateway(s) or directly as the case may be and enable secure access\nto the Registry.\n\nThe authentication and authorization layer must cater to API\nauthentication and user authentication as the case may be.\n\nPerimeter security layer - This layer will contain perimeter security\ndevices that will include Web Application Firewall, L3 firewalls,\nAdvanced Threat Protection and DDoS protection.\n\nMonitoring and management services - This will comprise a set of\ncomponents to monitor the performance and availability of the entire\nRegistry stack on a real time basis. This will also report data to the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 43 of 125\n\nONG C\n\nOpen Ne\n\nONDC Network Health Monitoring dashboard which will be accessible\nto the public at large. Such monitoring data of Registry shall be made\navailable through APIs or any other mechanism determined by ONDC\nas part of the design of the Network Health Monitoring system.\n\nAs part of monitoring and measurement of performance and availability\nmetrics of the Registry at overall data center level and at application\nlevel, the MSP should create a \u201c/health\u201d API which may simulate\nsynthetic transactions of the nature expected to be performed on\nRegistry.\n\n2.2.7. Infrastructure layer - This layer will include the cloud hosting\ninfrastructure along with the automated disaster recovery and business\ncontinuity cutovers. The system integrator may implement the solution\neither on bare metal or virtualized or containerized infrastructure\nkeeping in view the performance and availability requirements of the\nRegistry.\n\n2.3. Zero data loss: The Registry shall be designed to be a zero data loss.\n\n2.4. Data security: Considering that the Registry will be primarily sharing data over\nthe internet with Network Participants, the minimum encryption standard for the\nRegistry shall be ECDH (Elliptic-curve Diffie-Hellman) using X25519 or better\nencryption curves.\n\nThe Registry communication can be either peer-to-peer or in a broadcast\nmode. For all Registry broadcasts the minimum encryption standard shall be\nECDH X25519.\n\nFor peer to peer communications, given that different network participants may\nbe following different encryption methods, the Registry must hold the details of\nthe encryptions standards followed by each NP. In such cases, the Registry will\nneed to support look up of the relevant encryption standard of a NP and adopt\nthe corresponding standard for peer to peer communication with the NP. The\nMSP is required to propose a suitable architecture for supporting multiple\nencryption keys in the Registry. Requirements for implementing data vaults\nmay be evaluated and proposed by the MSP if needed and Registry shall be\ndesigned to support the same.\n\n2.5. Data residency: The Registry shall be hosted on public cloud infrastructure.\nRegistry data of entities registered or incorporated in India shall be stored on\npublic cloud infrastructure within India.\n\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner\n\nwith 99.99% availability. It shall have an optimum usage of infrastructure as\npart of disaster recovery design across the two data centers. It is pertinent to\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 44 of 125\n\nONC C\n\nOpen Ne\n\nONDC Network Health Monitoring dashboard which will be accessible\nto the public at large. Such monitoring data of Registry shall be made\navailable through APIs or any other mechanism determined by ONDC\nas part of the design of the Network Health Monitoring system.\n\nAs part of monitoring and measurement of performance and availability\nmetrics of the Registry at overall data center level and at application\nlevel, the MSP should create a \u201c/health\u201d API which may simulate\nsynthetic transactions of the nature expected to be performed on\nRegistry.\n\n2.2.7. Infrastructure layer - This layer will include the cloud hosting\ninfrastructure along with the automated disaster recovery and business\ncontinuity cutovers. The system integrator may implement the solution\neither on bare metal or virtualized or containerized infrastructure\nkeeping in view the performance and availability requirements of the\nRegistry.\n\n2.3. Zero data loss: The Registry shall be designed to be a zero data loss.\n\n2.4. Data security: Considering that the Registry will be primarily sharing data over\nthe internet with Network Participants, the minimum encryption standard for the\nRegistry shall be ECDH (Elliptic-curve Diffie-Hellman) using X25519 or better\nencryption curves.\n\nThe Registry communication can be either peer-to-peer or in a broadcast\nmode. For all Registry broadcasts the minimum encryption standard shall be\nECDH X25519.\n\nFor peer to peer communications, given that different network participants may\nbe following different encryption methods, the Registry must hold the details of\nthe encryptions standards followed by each NP. In such cases, the Registry will\nneed to support look up of the relevant encryption standard of a NP and adopt\nthe corresponding standard for peer to peer communication with the NP. The\nMSP is required to propose a suitable architecture for supporting multiple\nencryption keys in the Registry. Requirements for implementing data vaults\nmay be evaluated and proposed by the MSP if needed and Registry shall be\ndesigned to support the same.\n\n2.5. Data residency: The Registry shall be hosted on public cloud infrastructure.\nRegistry data of entities registered or incorporated in India shall be stored on\npublic cloud infrastructure within India.\n\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner\n\nwith 99.99% availability. It shall have an optimum usage of infrastructure as\npart of disaster recovery design across the two data centers. It is pertinent to\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 44 of 125\n\nONG C\n\nOpen Ne\n\nEvery participant will have certain contact coordinates in the form of SPOCs or support or\nother specific contact persons details that need to be published in the registry so that it is\naccessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer\n\nKey Record\n\nThe Registry plays a vital role in developing a trust on the network as it remains the source of\ntruth for any authentication mechanism as it houses in the public keys for signing and\nencryption for each participant hence allowing other participants to access it and perform\nrelevant security measures.\n\nLocation Record\n\nGeographical transactability presence of a participant is vital for optimal broadcast of a\ndemand on the network. To meet this requirement each participant would define their\ngeographical presence in the registry which can be accessed by other participants to evaluate\ntheir presence and ability to transact in a given location. The definition of location can range\nfrom being a Country, Clty, Pincode, Geo Json supported as well.\n\nURI Record\n\nThe endpoint at which the participants exposed APIs are hosted where the transacting and\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached\nout to which usage in the mapping record.\n\nMapping Record\n\nCertain configurations of the participant and association to other records found in the mapping\nrecord will be crucial to address the filtration and policy executing information to be available\nfor the participants.\n\nPolicy Record\n\nEvery network would adhere to a policy and agreements that are linked between networks\nand these needs to be stored at a common source of truth which would lead to enforcement\nat the receiving end. These records will be the place holders of these policies but the execution\nof them is not a responsibility of the registry or the record itself.\n\nFuture Record\nThis is a place holder or making sure that the design enables or allows storing newer records\nthat may emerge with the network requirements and functionalities in the future\n\n6.2 Data to be captured in Registry\n\nBelow is the list of data fields for the proposed structure\n\nParticipant Id Unique Participant Id provided by the registry\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 49 of 125\n\nONC C\n\nOpen Ne\n\nEvery participant will have certain contact coordinates in the form of SPOCs or support or\nother specific contact persons details that need to be published in the registry so that it is\naccessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer\n\nKey Record\n\nThe Registry plays a vital role in developing a trust on the network as it remains the source of\ntruth for any authentication mechanism as it houses in the public keys for signing and\nencryption for each participant hence allowing other participants to access it and perform\nrelevant security measures.\n\nLocation Record\n\nGeographical transactability presence of a participant is vital for optimal broadcast of a\ndemand on the network. To meet this requirement each participant would define their\ngeographical presence in the registry which can be accessed by other participants to evaluate\ntheir presence and ability to transact in a given location. The definition of location can range\nfrom being a Country, Clty, Pincode, Geo Json supported as well.\n\nURI Record\n\nThe endpoint at which the participants exposed APIs are hosted where the transacting and\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached\nout to which usage in the mapping record.\n\nMapping Record\n\nCertain configurations of the participant and association to other records found in the mapping\nrecord will be crucial to address the filtration and policy executing information to be available\nfor the participants.\n\nPolicy Record\n\nEvery network would adhere to a policy and agreements that are linked between networks\nand these needs to be stored at a common source of truth which would lead to enforcement\nat the receiving end. These records will be the place holders of these policies but the execution\nof them is not a responsibility of the registry or the record itself.\n\nFuture Record\nThis is a place holder or making sure that the design enables or allows storing newer records\nthat may emerge with the network requirements and functionalities in the future\n\n6.2 Data to be captured in Registry\n\nBelow is the list of data fields for the proposed structure\n\nParticipant Id Unique Participant Id provided by the registry\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 49 of 125\n\n2| Cred Participant credential records\n3] Cred.id Credential record unique id\n4| Cred.type Credential type\n5] Cred.key_1 Place holder field purposed based on type\n22] URL.id participant unique uri id\n23} URI.url url of the participant\n24] Location Participant location records\n25] Location.id Location record unique id\n26] Location.city Array of city reference identifiers\n27| Location.country Array of country reference identifiers\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 50 of 125\n\nONC C\n\n2| Cred Participant credential records\n3] Cred.id Credential record unique id\n4| Cred.type Credential type\n5] Cred.key_1 Place holder field purposed based on type\n22] URL.id participant unique uri id\n23} URI.url url of the participant\n24] Location Participant location records\n25] Location.id Location record unique id\n26] Location.city Array of city reference identifiers\n27| Location.country Array of country reference identifiers\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 50 of 125\n\nOpen Ne\n\n28) Location.geojson geo json format definition of location\n\n29) Mapping Mapping Records\n\n30] Mapping.id Mapping record unique identifier\n\n31] Mapping.domain Participant transactional domain\n\n32] Mapping.type Participant transactional type\n\n33] Mapping.uri_id URI record reference id\n\n34] Mapping.location_id Location record reference id\n\n35 Request ID unique request id, generated by participant for\neach request\n\n36 callback_uri Participant callback uri for validation &\nverification on each request\n\n6.3 APIs\n\nAll APIs of registry are authenticated and can only be accessed by participants/prospective\nparticipants of the registry. The Authentication will follow the same signature pattern as\nproposed by the base commerce protocol i.e. beckn\n\nQuery API - /lookup\n\nQuery APIs are to query the registry for records. The query shall have various formats and\nstructure and will result in appropriate responses. A few possible queries are listed below\nthese are projected but not the entire list.\n\ne Query for Participant Records - Single Record\nAny participant can query for a single participant record this encompasses of all the\nsub records of the participant to name a few : Creds, Contact, URI, Keys, Location,\nMapping Records\n\ne Query for Key Records - Single Record\nAny participant can query for a particular or all key records associated with a particular\nparticipant\n\ne Query for URI Records - Single Record\nAny participant can query for a particular or all URI records associated with a particular\nparticipant\n\ne Query for Participant List - Multiple Records\nSome designated participants can query for a complete dump or a filtered dump of\nparticipant records based on the lookup query.\n\nParticipant Registration/Management API - /subscribe\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 51 of 125\n\nOpen Ne\n\n28) Location.geojson geo json format definition of location\n\n29) Mapping Mapping Records\n\n30] Mapping.id Mapping record unique identifier\n\n31] Mapping.domain Participant transactional domain\n\n32] Mapping.type Participant transactional type\n\n33] Mapping.uri_id URI record reference id\n\n34] Mapping.location_id Location record reference id\n\n35 Request ID unique request id, generated by participant for\neach request\n\n36 callback_uri Participant callback uri for validation &\nverification on each request\n\n6.3 APIs\n\nAll APIs of registry are authenticated and can only be accessed by participants/prospective\nparticipants of the registry. The Authentication will follow the same signature pattern as\nproposed by the base commerce protocol i.e. beckn\n\nQuery API - /lookup\n\nQuery APIs are to query the registry for records. The query shall have various formats and\nstructure and will result in appropriate responses. A few possible queries are listed below\nthese are projected but not the entire list.\n\ne Query for Participant Records - Single Record\nAny participant can query for a single participant record this encompasses of all the\nsub records of the participant to name a few : Creds, Contact, URI, Keys, Location,\nMapping Records\n\ne Query for Key Records - Single Record\nAny participant can query for a particular or all key records associated with a particular\nparticipant\n\ne Query for URI Records - Single Record\nAny participant can query for a particular or all URI records associated with a particular\nparticipant\n\ne Query for Participant List - Multiple Records\nSome designated participants can query for a complete dump or a filtered dump of\nparticipant records based on the lookup query.\n\nParticipant Registration/Management API - /subscribe\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 51 of 125\n\nONG C\n\nOpen Ne\n\nRegistration APIs are to register/subscribe a participant to the registry with their records. The\nregistration process will adhere to adequate validation against the information shared during\nthe process. Along the life-cycle of a participant there will be multiple phases or milestones\nand management activities where they need to manage their records. These APIs in its\nentirety and different shapes will address the needs to support it with adequate validation and\nauthorization needed. A few possible usages are listed below; these are projected but not the\nentire list.\ne New Registration - /subscribe - POST\nA post request created to make a new entry of a participant with all the adequate\ninformation and records that needs to be added to the registry this would be preceded\nby a whitelisting action from Admin.\ne Update Record - /subscribe - PUT & PATCH\nEvery network participant would require to modify, update and add records in the\nregistry during the tenure in the network these APIs would help supporting such\nfunctionalities\nAdmin APIs - /admin/domains, /admin/subscribe\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to\nadmins:\ne Enable/Disable Domains\ne Whitelist & Un-subscribe participants\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these\nfunctions of the registry\nThe Authentication and Authorization of an Admin and its associated workflows are managed\nby an external system to the core registry function and these APIs will be secured via MTLS\nand other secure tunnel communication between the identified such registry management\nservice/s.\n\n6.3.1 Existing Registry APIs\n6.3.1.1 lookup API\nlookup API is used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases of lookup API and being used:\n\ne By gateways and/or adaptors for search details about network participants\ne By network participants to querying existing details\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.2. vlookup API [TO BE DEPRECATED]\n\\vlookup API is used by the network participants to get details about other network participants\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more\nadvanced and secure version of lookup API, as it contains the signature parameter of the\nsender as one of the input parameters.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 52 of 125\n\nONC C\n\nOpen Ne\n\nRegistration APIs are to register/subscribe a participant to the registry with their records. The\nregistration process will adhere to adequate validation against the information shared during\nthe process. Along the life-cycle of a participant there will be multiple phases or milestones\nand management activities where they need to manage their records. These APIs in its\nentirety and different shapes will address the needs to support it with adequate validation and\nauthorization needed. A few possible usages are listed below; these are projected but not the\nentire list.\ne New Registration - /subscribe - POST\nA post request created to make a new entry of a participant with all the adequate\ninformation and records that needs to be added to the registry this would be preceded\nby a whitelisting action from Admin.\ne Update Record - /subscribe - PUT & PATCH\nEvery network participant would require to modify, update and add records in the\nregistry during the tenure in the network these APIs would help supporting such\nfunctionalities\nAdmin APIs - /admin/domains, /admin/subscribe\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to\nadmins:\ne Enable/Disable Domains\ne Whitelist & Un-subscribe participants\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these\nfunctions of the registry\nThe Authentication and Authorization of an Admin and its associated workflows are managed\nby an external system to the core registry function and these APIs will be secured via MTLS\nand other secure tunnel communication between the identified such registry management\nservice/s.\n\n6.3.1 Existing Registry APIs\n6.3.1.1 lookup API\nlookup API is used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases of lookup API and being used:\n\ne By gateways and/or adaptors for search details about network participants\ne By network participants to querying existing details\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.2. vlookup API [TO BE DEPRECATED]\n\\vlookup API is used by the network participants to get details about other network participants\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more\nadvanced and secure version of lookup API, as it contains the signature parameter of the\nsender as one of the input parameters.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 52 of 125\n\nONG C\n\nOpen Ne\n\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled\nthrough lookup API.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.3 subscribe API\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently\nthe registry is supporting the following types of registrations. Same needs to be enabled in the\nupdated Registry.\n\nBuyer App New entity Registration\n\nNon-MSN Seller New entity registration\n\nMSN Seller new entity registration\n\nBuyer App and Non-MSN Seller new registration\n\nBuyer App and MSN Seller new registration\n\nRSP new entity registration and record updates\n\nSA new entity registration and record updates\n\nODRSP new entity registration and record updates\n\nSSP new entity registration and record updates\n\nCA new entity registration and record updates\n\nAdding new seller on records\n\nUpdating records of buyer app, seller app and seller on records\nValidation of GSTIN\n\nValidation of PAN\n\nValidation of Bank Account number\n\nDeduplication of all types of participants, ukld, signing key and encryption key\n\nThe subscribe API should only be carried out for the NPs that are whitelisted.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.4 Dashboard\n\n6.3.2. The admin dashboard is to be developed for ONDC internal teams, ONDC\nofficials and MSP. The dashboard will have the following features:\n\n6.3.3 Admin dashboard should have the functionality of Registration and login for\nusers\n\n6.3.4 Dashboard need to have two-factor authentication enabled for every user\n\n6.3.5 Dashboard content should support the English language.\n\n6.3.6 Dashboard should not allow concurrent sessions for the same user. The\nsystem should automatically log out a user in case of session breakdowns\n(e.g., communication failure, high inactivity period - these should be\nparameterized)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 53 of 125\n\nOpen Ne\n\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled\nthrough lookup API.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.3 subscribe API\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently\nthe registry is supporting the following types of registrations. Same needs to be enabled in the\nupdated Registry.\n\nBuyer App New entity Registration\n\nNon-MSN Seller New entity registration\n\nMSN Seller new entity registration\n\nBuyer App and Non-MSN Seller new registration\n\nBuyer App and MSN Seller new registration\n\nRSP new entity registration and record updates\n\nSA new entity registration and record updates\n\nODRSP new entity registration and record updates\n\nSSP new entity registration and record updates\n\nCA new entity registration and record updates\n\nAdding new seller on records\n\nUpdating records of buyer app, seller app and seller on records\nValidation of GSTIN\n\nValidation of PAN\n\nValidation of Bank Account number\n\nDeduplication of all types of participants, ukld, signing key and encryption key\n\nThe subscribe API should only be carried out for the NPs that are whitelisted.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.4 Dashboard\n\n6.3.2. The admin dashboard is to be developed for ONDC internal teams, ONDC\nofficials and MSP. The dashboard will have the following features:\n\n6.3.3 Admin dashboard should have the functionality of Registration and login for\nusers\n\n6.3.4 Dashboard need to have two-factor authentication enabled for every user\n\n6.3.5 Dashboard content should support the English language.\n\n6.3.6 Dashboard should not allow concurrent sessions for the same user. The\nsystem should automatically log out a user in case of session breakdowns\n(e.g., communication failure, high inactivity period - these should be\nparameterized)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 53 of 125\n\nONG C\n\nOpen Ne\n\n6.3.7 Dashboard should have Role based access control (RBAC) enabled. This\nfunctionality will enable ONDC admin to authorize users by assigning\nprivileges to roles and assigning roles to users or group\n\n6.3.8 Dashboard should implement security features such as captcha, password\ncomplexity, automatic blocking (temporary/permanent) of user logins after\na given number of unsuccessful attempts.\n\n6.3.9 Dashboard must be developed as per Guidelines for Indian Government\nWebsites (GIGW) guidelines\n\n6.3.10 Portal should support HTTPS protocol on Secure Socket Layer (SSL)\n\n6.3.11 Graphical representation of the current status of their subscription,\nregistration across all environments (Sandbox, Pre-prod & production)\n\n6.3.12 Dashboard shall be built on 3-tier architecture with separate presentation,\nbusiness and database layer\n\n6.3.13 Dashboard must have the capability to integrate issue management system\nof ONDC\n\n6.3.14 It must support configuration of customizable workflows to define the flow\nof issues\n\n6.3.15 Dashboard shall have the ability to send email and SMS notifications to\nusers regarding issue status or any other information\n\n6.3.16 It should be able to support user access management, user control and\ncreating customized pages or dashboards for different set of users\n\n6.3.17 Dashboard should have responsive UX design supporting different screen\nsizes\n\n6.3.18 The Dashboard should have the capability to monitor Registry related\nmetrics/parameters. The monitoring module should have the following\ncapabilities:\n\n6.3.18.1 The below required parameters need to be displayed on the\ndashboard. Dashboard shall have and not limited to the following\nfunctionalities. Below API calls latency along with Response time:\n6.3.18.1.1 Subscriber API\n6.3.18.1.2 Lookup API\n6.3.18.2 Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on\nRecords, Gateways, RSPs, ODRSP, SSP, and others)\n6.3.18.3 Throughput\n6.3.18.4 Availability - Uptime & Downtime of Registry\n6.3.18.5 Concurrent Users\n6.3.18.6 CPU, RAM and Storage Usage\n6.3.18.7 Volume of API calls\n6.3.18.8 Seller App and Buyer App Wise number of serving categories and\nproducts\n\n6.3.19 Dashboard should have the capability to project data on Daily, Weekly and\nMonthly basis\n\n6.3.20 Registry monitoring dashboard should have the capability to show graphical\nrepresentation of the data available\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 54 of 125\n\nONC C\n\nOpen Ne\n\n6.3.7 Dashboard should have Role based access control (RBAC) enabled. This\nfunctionality will enable ONDC admin to authorize users by assigning\nprivileges to roles and assigning roles to users or group\n\n6.3.8 Dashboard should implement security features such as captcha, password\ncomplexity, automatic blocking (temporary/permanent) of user logins after\na given number of unsuccessful attempts.\n\n6.3.9 Dashboard must be developed as per Guidelines for Indian Government\nWebsites (GIGW) guidelines\n\n6.3.10 Portal should support HTTPS protocol on Secure Socket Layer (SSL)\n\n6.3.11 Graphical representation of the current status of their subscription,\nregistration across all environments (Sandbox, Pre-prod & production)\n\n6.3.12 Dashboard shall be built on 3-tier architecture with separate presentation,\nbusiness and database layer\n\n6.3.13 Dashboard must have the capability to integrate issue management system\nof ONDC\n\n6.3.14 It must support configuration of customizable workflows to define the flow\nof issues\n\n6.3.15 Dashboard shall have the ability to send email and SMS notifications to\nusers regarding issue status or any other information\n\n6.3.16 It should be able to support user access management, user control and\ncreating customized pages or dashboards for different set of users\n\n6.3.17 Dashboard should have responsive UX design supporting different screen\nsizes\n\n6.3.18 The Dashboard should have the capability to monitor Registry related\nmetrics/parameters. The monitoring module should have the following\ncapabilities:\n\n6.3.18.1 The below required parameters need to be displayed on the\ndashboard. Dashboard shall have and not limited to the following\nfunctionalities. Below API calls latency along with Response time:\n6.3.18.1.1 Subscriber API\n6.3.18.1.2 Lookup API\n6.3.18.2 Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on\nRecords, Gateways, RSPs, ODRSP, SSP, and others)\n6.3.18.3 Throughput\n6.3.18.4 Availability - Uptime & Downtime of Registry\n6.3.18.5 Concurrent Users\n6.3.18.6 CPU, RAM and Storage Usage\n6.3.18.7 Volume of API calls\n6.3.18.8 Seller App and Buyer App Wise number of serving categories and\nproducts\n\n6.3.19 Dashboard should have the capability to project data on Daily, Weekly and\nMonthly basis\n\n6.3.20 Registry monitoring dashboard should have the capability to show graphical\nrepresentation of the data available\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 54 of 125\n\nOpen Ne\n\nONG C\n\n6.3.21 Dashboard should have the capability to generate reports required by\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats.\nFurther, if any other format is required by ONDC\n\n6.3.22 Dashboard should have the capability to send alerts and notifications to\nrespective admins, MSP SPOCs on any change\n\n6.5 Infrastructure\n\nFollowing are the infrastructure requirement for the various environments:\n\nRequirement Type Sandbox\n\nPre Production\n\nProduction\n\n>=99.99%\n\nApplication response\ntime(except subscribe\nAPI)\n\nTime as\nmeasured at data\ncenter edge(except\nsubscribe API)\n\nResponse\n\n<100 milli-sec\n\n<1000 milli-sec\n\n0\n\n10 mins\n\n<100 milli-sec <10 milli-sec\n\n<1000 milli-sec <200 milli-sec\n\nThroughput 10 TPS 50 TPS 5000 TPS\n\nConcurrent users (live | 100 500 1000. Scalable to\nnetwork participants) 5,000\n\nHigh Availability NA NA DC and DR in Active-\n\nactive mode on the\nbidder selected cloud\nplatform\n\n6.5 Migration\n\nThe MSP shall migrate the data from the existing registry for all the three environments -\nstaging (sandbox), pre-production and production to the new registry application.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 55 of 125\n\n\nOpen Ne\n\n6.3.21 Dashboard should have the capability to generate reports required by\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats.\nFurther, if any other format is required by ONDC\n\n6.3.22 Dashboard should have the capability to send alerts and notifications to\nrespective admins, MSP SPOCs on any change\n\n6.5 Infrastructure\n\nFollowing are the infrastructure requirement for the various environments:\n\nRequirement Type Sandbox\n\nPre Production\n\nProduction\n\n>=99.99%\n\nApplication response\ntime(except subscribe\nAPI)\n\nTime as\nmeasured at data\ncenter edge(except\nsubscribe API)\n\nResponse\n\n<100 milli-sec\n\n<1000 milli-sec\n\n0\n\n10 mins\n\n<100 milli-sec <10 milli-sec\n\n<1000 milli-sec <200 milli-sec\n\nThroughput 10 TPS 50 TPS 5000 TPS\n\nConcurrent users (live | 100 500 1000. Scalable to\nnetwork participants) 5,000\n\nHigh Availability NA NA DC and DR in Active-\n\nactive mode on the\nbidder selected cloud\nplatform\n\n6.5 Migration\n\nThe MSP shall migrate the data from the existing registry for all the three environments -\nstaging (sandbox), pre-production and production to the new registry application.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 55 of 125\n\n\nSs. Type of Unit of Number | Uni | Sub- | Taxe | Total\nNo. | component / measure of units t Total s incl.\nproduct / rate taxes\nservice\n\n2 Cost of | Per-month 36\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS\n\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily\npeak TPS for a given month. The callbacks to the API will not be included in the computation of the\nnumber of API calls.\n\nTPS for a month = X Peak TPS for each day + Number of days ina month\n\nNote: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this\nmeans that TPS greater than the 99th percentile reading will be discarded and not considered for the\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have\noccurred due to longer service start up times or some exception scenarios.\n\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:\n\nTPS for a month (P) = 2,306\n\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN-5 #1 Cost of secure cloud infrastructure meeting\nall the technical specifications capable of processing 1,000 TPS]\n\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN-5 #2 Cost of secure cloud infrastructure\nmeeting all the technical specifications capable of processing additional 1,000 TPS]\n\nAmount payable during the month for cloud infrastructure (A) = Q + (P/1000 \u20141)*R = 1,00,000 +\n1.3*50,000 = INR 1,65,000/-\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 70 of 125\n\nSs. Type of Unit of Number | Uni | Sub- | Taxe | Total\nNo. | component / measure of units t Total s incl.\nproduct / rate taxes\nservice\n\n2 Cost of | Per-month 36\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS\n\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily\npeak TPS for a given month. The callbacks to the API will not be included in the computation of the\nnumber of API calls.\n\nTPS for a month = X Peak TPS for each day + Number of days ina month\n\nNote: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this\nmeans that TPS greater than the 99th percentile reading will be discarded and not considered for the\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have\noccurred due to longer service start up times or some exception scenarios.\n\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:\n\nTPS for a month (P) = 2,306\n\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN-5 #1 Cost of secure cloud infrastructure meeting\nall the technical specifications capable of processing 1,000 TPS]\n\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN-5 #2 Cost of secure cloud infrastructure\nmeeting all the technical specifications capable of processing additional 1,000 TPS]\n\nAmount payable during the month for cloud infrastructure (A) = Q + (P/1000 \u20141)*R = 1,00,000 +\n1.3*50,000 = INR 1,65,000/-\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 70 of 125\n\nONG C\n\nOpen Ne\n\nB. Service Level Agreements\n\n1. Introduction\n\na. The Service Level Agreements (SLA) defined for the project specify the\nexpected levels of baseline service to be provided by the MSP to ONDC. The\nobjectives of SLA governance model are to:\n\ni. Provide clear reference to service ownership, accountability, roles and\nresponsibilities.\n\nii. Present a clear, concise and measurable description of service\nprovisioning at each level.\n\niii. | Bridge the gap between perceptions of expected service provisioning\nand actual service support and delivery.\n\nb. The SLAs are intended to:\n\ni. | Make explicit and strict expectations that ONDC has for performance\nand availability of business services.\n\nii. | Help ONDC control and ensure the planned level and performance of\nbusiness services.\n\niii. | Trigger a process that brings ONDC and MSP\u2019s management attention\nto situations when any aspect drops below an agreed upon threshold,\nor target.\n\nc. The performance of the MSP services shall be measured against the SLAs\ndetailed below. The service level targets define the levels of service to be\nprovided by the MSP to ONDC for the applicability period or duration of this\ncontract, whichever is earlier, or until the stated SLA targets are amended.\n\nd. Any degradation in the performance of the services undertaken by the MSP\nproject team during the contract duration, will be subject to levy of liquidated\ndamages. The liquidated damages mentioned in this RFP are a pre-estimate\nof damages likely to flow from the breach of timelines and service levels. In\ncase of breach of multiple SLAs:\n\ni. the cumulative liquidated damages applicable on the MSP for\ntimeline/milestone linked SLAs shall not exceed 10% of the total amount\npayable against the respective milestone.\n\nii. the cumulative liquidated damages applicable on the MSP for\noperational SLAs computed on a quarterly basis shall not exceed 10%\nof the total amount payable for the quarter.\n\ne. MSP shall not be relieved from any obligations under this contract by virtue of\npayment of such liquidated damages.\n\nf. MSP shall implementa SLA reporting tool to provide live status of conformance\nto various SLAs to ONDC.\n\ng. Any change in the SLAs during the term of Project [in terms of addition,\nalteration or deletion of certain parameters], would be initiated at the discretion\nof ONDC, which would be subsequently discussed and agreed with the MSP\nbefore putting the amended SLAs into effect.\n\n2. Definitions of measurement and reporting intervals\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 72 of 125\n\nONC C\n\nOpen Ne\n\nB. Service Level Agreements\n\n1. Introduction\n\na. The Service Level Agreements (SLA) defined for the project specify the\nexpected levels of baseline service to be provided by the MSP to ONDC. The\nobjectives of SLA governance model are to:\n\ni. Provide clear reference to service ownership, accountability, roles and\nresponsibilities.\n\nii. Present a clear, concise and measurable description of service\nprovisioning at each level.\n\niii. | Bridge the gap between perceptions of expected service provisioning\nand actual service support and delivery.\n\nb. The SLAs are intended to:\n\ni. | Make explicit and strict expectations that ONDC has for performance\nand availability of business services.\n\nii. | Help ONDC control and ensure the planned level and performance of\nbusiness services.\n\niii. | Trigger a process that brings ONDC and MSP\u2019s management attention\nto situations when any aspect drops below an agreed upon threshold,\nor target.\n\nc. The performance of the MSP services shall be measured against the SLAs\ndetailed below. The service level targets define the levels of service to be\nprovided by the MSP to ONDC for the applicability period or duration of this\ncontract, whichever is earlier, or until the stated SLA targets are amended.\n\nd. Any degradation in the performance of the services undertaken by the MSP\nproject team during the contract duration, will be subject to levy of liquidated\ndamages. The liquidated damages mentioned in this RFP are a pre-estimate\nof damages likely to flow from the breach of timelines and service levels. In\ncase of breach of multiple SLAs:\n\ni. the cumulative liquidated damages applicable on the MSP for\ntimeline/milestone linked SLAs shall not exceed 10% of the total amount\npayable against the respective milestone.\n\nii. the cumulative liquidated damages applicable on the MSP for\noperational SLAs computed on a quarterly basis shall not exceed 10%\nof the total amount payable for the quarter.\n\ne. MSP shall not be relieved from any obligations under this contract by virtue of\npayment of such liquidated damages.\n\nf. MSP shall implementa SLA reporting tool to provide live status of conformance\nto various SLAs to ONDC.\n\ng. Any change in the SLAs during the term of Project [in terms of addition,\nalteration or deletion of certain parameters], would be initiated at the discretion\nof ONDC, which would be subsequently discussed and agreed with the MSP\nbefore putting the amended SLAs into effect.\n\n2. Definitions of measurement and reporting intervals\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 72 of 125\n\na. Measurement interval - For some of the SLAs, the Reporting interval has been\nbroken down into multiple Measurement intervals. This has been done to\nprovide the MSP an opportunity to rectify any SLA non-compliance during a\nparticular measurement interval in the remaining measurement intervals\navailable in the Reporting interval.\n\ni. | For example, during a quarter, a SLA could be measured every month\nand even if there was a certain non-compliance during one of the three\nmonths, the MSP would have an opportunity to rectify the non-\ncompliance in the other two months.\n\nii. | For each of the SLAs, all observations regarding the SLA recorded will\nbe aggregated and the SLA will be computed for every measurement\ninterval. The applicable percentage of liquidated damages will be the\nsimple average of the liquidated damages computed for each\nmeasurement interval.\n\niii. | For example, for availability of solutions, all \"system up check\" data\ngathered, all planned and unplanned downtimes during the\nmeasurement interval (i.e., a given month) will be aggregated and the\nSLA will be computed. Accordingly, as per the LD computation\nguidelines defined in this document, the percentage of LD applicable\nfor the measurement interval will be computed.\n\nb. Reporting interval: Reporting interval for all SLAs is quarterly. The\npercentage of LD to be applied for a Reporting interval is computed as an\naverage of the LD percentages computed for each of the Measurement\nintervals.\n\n3. Timelines and associated liquidated damages, if any\n\nS. No.\n\nMilestone / Deliverable Timeline\n\nSigning of the contract\n\nSubmission of detailed | T+6 weeks 1% of cost head (A) as\ndesign document mentioned in commercial bid\ncontract for every week of delay\n\nLiquidated damages,\napplicable\n\nif any,\n\nNot applicable\n\nSubmission of the UAT | T+12 weeks 1% of cost head (A) as\nplan with detailed test mentioned in commercial bid\ncases and test data contract for every week of delay\n\nSecurity testing (VAPT | T+18 weeks 1% of cost head (A) as\nand App scan by a CERT- mentioned in commercial bid\nIn empanelled agency), contract for every week of delay\nPerformance testing and\n\nbenchmarking of system\n\nprior to go-live and\n\nnecessary fine-tuning\n\nCompletion of UAT and | 1T+18 weeks (=| 1% of cost head (A) as\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 73 of 125\n\nONC C\n\na. Measurement interval - For some of the SLAs, the Reporting interval has been\nbroken down into multiple Measurement intervals. This has been done to\nprovide the MSP an opportunity to rectify any SLA non-compliance during a\nparticular measurement interval in the remaining measurement intervals\navailable in the Reporting interval.\n\ni. | For example, during a quarter, a SLA could be measured every month\nand even if there was a certain non-compliance during one of the three\nmonths, the MSP would have an opportunity to rectify the non-\ncompliance in the other two months.\n\nii. | For each of the SLAs, all observations regarding the SLA recorded will\nbe aggregated and the SLA will be computed for every measurement\ninterval. The applicable percentage of liquidated damages will be the\nsimple average of the liquidated damages computed for each\nmeasurement interval.\n\niii. | For example, for availability of solutions, all \"system up check\" data\ngathered, all planned and unplanned downtimes during the\nmeasurement interval (i.e., a given month) will be aggregated and the\nSLA will be computed. Accordingly, as per the LD computation\nguidelines defined in this document, the percentage of LD applicable\nfor the measurement interval will be computed.\n\nb. Reporting interval: Reporting interval for all SLAs is quarterly. The\npercentage of LD to be applied for a Reporting interval is computed as an\naverage of the LD percentages computed for each of the Measurement\nintervals.\n\n3. Timelines and associated liquidated damages, if any\n\nS. No.\n\nMilestone / Deliverable Timeline\n\nSigning of the contract\n\nSubmission of detailed | T+6 weeks 1% of cost head (A) as\ndesign document mentioned in commercial bid\ncontract for every week of delay\n\nLiquidated damages,\napplicable\n\nif any,\n\nNot applicable\n\nSubmission of the UAT | T+12 weeks 1% of cost head (A) as\nplan with detailed test mentioned in commercial bid\ncases and test data contract for every week of delay\n\nSecurity testing (VAPT | T+18 weeks 1% of cost head (A) as\nand App scan by a CERT- mentioned in commercial bid\nIn empanelled agency), contract for every week of delay\nPerformance testing and\n\nbenchmarking of system\n\nprior to go-live and\n\nnecessary fine-tuning\n\nCompletion of UAT and | 1T+18 weeks (=| 1% of cost head (A) as\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 73 of 125\n\nMilestone / Deliverable Timeline Liquidated damages, if any,\napplicable\n\nsolution Go-Live along\nwith replication of the\nexisting data in the\nRegistry database\n\nmentioned in commercial bid\ncontract for every week of delay\n\n6 Submission of quarterly | Before 15th of | 1% of quarterly amount payable\nSLA compliance report next month | for every week of delay\nafter end of\nquarter\n7 Submission of the | T1+ 12 | 1% of quarterly amount payable\n\nKnowledge transition\nreport and complete\nregistry documentation\n\nquarters for every week of delay\n\n4. Solution SLAs and associated liquidated damages\na. Availability of Registry\n\nSLA Availability of Registry as a solution\nDescription\n\nScope of SLA {Applies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\n\nTools, methods | Healthcheck service to be implemented by MSP \u2014 a custom monitoring\nor scripts to be|script shall be executed once every minute from the SLA monitoring\nused to| server.\n\nmeasure SLA\n\nProcess to| The availability of registry shall be measured as follows:\n\ncapture data or} i. From the SLA monitoring server(s) invoke the service under\nmeasure the measurement. In the case of Registry, each API shall be\nparameter considered as a separate service.\n\nii. | Based to the response obtained from each API, availability shall\nbe computed.\n\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\n\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\n\nSLA calculation | Will be calculated using the below formula.\n\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2014 Planned Downtime)]}} *100\n\nPlanned Downtime permissible for each API = 15 minutes per quarter\n\nTotal Time = 24 X 7 measured over a period of one calendar month.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 74 of 125\n\nMilestone / Deliverable Timeline Liquidated damages, if any,\n\nwith\n\nsolution\nreplication of the\nexisting data in the\nRegistry database\n\napplicable\n\nGo-Live along mentioned in commercial bid\n\ncontract for every week of delay\n\nreport\n\n6 Submission of quarterly | Before 15th of | 1% of quarterly amount payable\nSLA compliance report next month | for every week of delay\nafter end of\nquarter\n7 Submission of the | T1+ 12 | 1% of quarterly amount payable\n\nKnowledge transition\n\nregistry documentation\n\nquarters for every week of delay\n\nand complete\n\n4. Solution SLAs and associated liquidated damages\na. Availability of Registry\n\nSLA\nDescription\n\nAvailability of Registry as a solution\n\nScope of SLA\n\nApplies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\n\nTools, methods\nor scripts to be\nused to\nmeasure SLA\n\nHealthcheck service to be implemented by MSP \u2014 a custom monitoring\nscript shall be executed once every minute from the SLA monitoring\nserver.\n\nProcess to\ncapture data or\nmeasure the\nparameter\n\nThe availability of registry shall be measured as follows:\n\ni. From the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nii. | Based to the response obtained from each API, availability shall\nbe computed.\n\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\n\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2014 Planned Downtime)]}} *100\n\nPlanned Downtime permissible for each API = 15 minutes per quarter\n\nTotal Time = 24 X 7 measured over a period of one calendar month.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 74 of 125\n\nOpen Ne\n\n[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\n\nOverall Availability % of Registry = ROUND (2[Availability % for each\nAPI]/Number of APIs, 2)\n\nSLA target and\nSeverity level\n\nfor computation SLA Level Applicable LD as % of quarter!\nof Liquidated of quarterly payment due\nDamages _for|| s=99 99% None\nProduction\nenvironment <99.99% and >= 99.9% 1%\n<99.9% and >= 99% 2%\n<99% and >=98% 3%\n<98% and >=97% 4%\n<97% 5%\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages _for|| s=99. 9% None\nPre-\nProduction <99.9% 0.5%\nenvironment\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages __for|| s=99% None\nSandbox\nenvironment <99% 0.5%\n\nAssumptions, if\nany\n\nThe MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.\n\nMeasurement | Monthly\n\ninterval\n\nReporting Quarterly\n\ninterval\n\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 75 of 125\n\nOpen Ne\n\n[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\n\nOverall Availability % of Registry = ROUND (2[Availability % for each\nAPI]/Number of APIs, 2)\n\nSLA target and\nSeverity level\n\nfor computation SLA Level Applicable LD as % of quarter!\nof Liquidated of quarterly payment due\nDamages _for|| s=99 99% None\nProduction\nenvironment <99.99% and >= 99.9% 1%\n<99.9% and >= 99% 2%\n<99% and >=98% 3%\n<98% and >=97% 4%\n<97% 5%\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages _for|| s=99. 9% None\nPre-\nProduction <99.9% 0.5%\nenvironment\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages __for|| s=99% None\nSandbox\nenvironment <99% 0.5%\n\nAssumptions, if\nany\n\nThe MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.\n\nMeasurement | Monthly\n\ninterval\n\nReporting Quarterly\n\ninterval\n\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 75 of 125\n\nOpen Ne\n\nONG C\n\nb. Response time of Registry\n\nSLA Description\n\nResponse time of Registry as a solution\n\nScope of SLA\n\nApplies to response time of Registry as a_ solution,\nspecifically the APIs through which Network Participants\naccess the Registry.\n\nTools, methods or scripts\nto be used to measure\nSLA\n\nTool to be implemented by MSP \u2014 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API.\n\nProcess to capture data or\nmeasure the parameter\n\nThe response time of registry shall be measured as follows:\n\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Average response time of Registry\nROUND(simple average of response times of each API\n\nexcluding outliers,2)\n\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.\n\nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment\n\nSLA Level Applicable LD\nas % of\nquarterly\npayment\n\nAverage response time of Registry | None\n\napplication <= 10 millisecond\n\nAverage response time of Registry | 3%\n\napplication > 10 millisecond\n\nAverage response time of Registry | None\n\nas measured from data center\n\nedge <= 200 millisecond\n\nAverage response time of Registry | 3%\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 76 of 125\n\n\nOpen Ne\n\nONC C\n\nb. Response time of Registry\n\nSLA Description\n\nResponse time of Registry as a solution\n\nScope of SLA\n\nApplies to response time of Registry as a_ solution,\nspecifically the APIs through which Network Participants\naccess the Registry.\n\nTools, methods or scripts\nto be used to measure\nSLA\n\nTool to be implemented by MSP \u2014 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API.\n\nProcess to capture data or\nmeasure the parameter\n\nThe response time of registry shall be measured as follows:\n\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Average response time of Registry\nROUND(simple average of response times of each API\n\nexcluding outliers,2)\n\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.\n\nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment\n\nSLA Level Applicable LD\nas % of\nquarterly\npayment\n\nAverage response time of Registry | None\n\napplication <= 10 millisecond\n\nAverage response time of Registry | 3%\n\napplication > 10 millisecond\n\nAverage response time of Registry | None\n\nas measured from data center\n\nedge <= 200 millisecond\n\nAverage response time of Registry | 3%\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 76 of 125\n\n\nONG C\n\nOpen Ne\n\napplication > 200 millisecond\n\nSLA target and Severity\n\nlevel for computation of :\nLiquidated Damages for SLA Level Applicable LD\n\nas % of\nPre-Production quarterly\nenvironmen payment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 1%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 1%\napplication > 1000 millisecond\n\nSLA target and Severity\nlevel for computation of\n\nLiquidated Damages for SLA Level applicadle So\n\nPn \u00e9 f as % of\n\nandbox environmen quarterly\npayment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 1000 millisecond\n\nAssumptions, if any The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\n\ntools.\nMeasurement interval Monthly\nReporting interval Quarterly\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 77 of 125\n\nONC C\n\nOpen Ne\n\napplication > 200 millisecond\n\nSLA target and Severity\n\nlevel for computation of :\nLiquidated Damages for SLA Level Applicable LD\n\nas % of\nPre-Production quarterly\nenvironmen payment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 1%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 1%\napplication > 1000 millisecond\n\nSLA target and Severity\nlevel for computation of\n\nLiquidated Damages for SLA Level applicadle So\n\nPn \u00e9 f as % of\n\nandbox environmen quarterly\npayment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 1000 millisecond\n\nAssumptions, if any The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\n\ntools.\nMeasurement interval Monthly\nReporting interval Quarterly\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 77 of 125\n\nOpen Ne\n\n5. Support SLAs and associated liquidated damages\n\na.\n\nIncident response\n\nSLA Description\n\nIncident Response Time\n\nScope of SLA\n\nApplies to all Incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by MSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 15 minutes\n\nP2 60 minutes\n\nP3 2 hours\n\nProcess to capture\ndata or measure the\n\nparameter for\nSandbox and Pre-\nProduction\n\nenvironments\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours\nSLA calculation Formula:\n\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\n\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\n\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 78 of 125\n\nOpen Ne\n\nONC C\n\n5. Support SLAs and associated liquidated damages\n\na.\n\nIncident response\n\nSLA Description\n\nIncident Response Time\n\nScope of SLA\n\nApplies to all Incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by MSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 15 minutes\n\nP2 60 minutes\n\nP3 2 hours\n\nProcess to capture\ndata or measure the\n\nparameter for\nSandbox and Pre-\nProduction\n\nenvironments\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours\nSLA calculation Formula:\n\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\n\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\n\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 78 of 125\n\nONG C\n\nOpen Ne\n\nSLA Description Incident Response Time\n\ntimelines during the period / Number of P3 incidents opened during the\n\nperiod\nSLA target Response Time compliance =100%\nLiquidated 2% of quarterly payment if SLA target is not met\nDamages\nMeasurement Monthly\ninterval\nReporting interval | Quarterly\n\nReporting Using SLA reporting tool\nb. Incident resolution\nSLA Description Incident Resolution Time\nScope of SLA Applies to all incidents\nTools, methods or|Incident and Service Desk Management tool to be implemented by\n\nscripts to be used to\nmeasure SLA\n\nMSP\n\nProcess to capture|Measurement of SLA\ndata or measure the|Response time is the time from incident creation until the \"Work in\nparameter for|Progress\" status update with assignment by MSP.\nProduction Resolution Time is the time from incident creation until the \"Resolved\"\nenvironment status update.\n\nPriority Resolution time\n\nP1 8 Hours\n\nP2 2 Days\n\nP3 5 days\n\nP4 - Service Request 15 days\n\nProcess to capture|Measurement of SLA\ndata or measure the|Response time is the time from incident creation until the \"Work in\nparameter for|Progress\" status update with assignment by MSP.\nSandbox and Pre-|Resolution Time is the time from incident creation until the \"Resolved\"\nProduction status update.\nenvironments Priority Resolution time\n\nP1 15 Hours\n\nP2 3 Days\n\nRequest for Proposa\n\ns for upgrade and maintenance of ONDC Registry | Page 79 of 125\n\n\nOpen Ne\n\nONC C\n\nSLA Description\n\nIncident Response Time\n\ntimelines during the period / Number of P3 incidents opened during the\n\nperiod\nSLA target Response Time compliance =100%\nLiquidated 2% of quarterly payment if SLA target is not met\nDamages\nMeasurement Monthly\ninterval\nReporting interval | Quarterly\n\nReporting\n\nUsing SLA reporting tool\n\nb. Incident resolution\n\nSLA Description\n\nIncident Resolution Time\n\nScope of SLA\n\nApplies to all incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by\nMSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nMeasurement of SLA\n\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\n\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\n\nPriority Resolution time\nP1 8 Hours\n\nP2 2 Days\n\nP3 5 days\n\nP4 - Service Request 15 days\n\nProcess to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments\n\nMeasurement of SLA\n\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\n\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\n\nPriority Resolution time\nP1 15 Hours\nP2 3 Days\n\nRequest for Proposa\n\ns for upgrade and maintenance of ONDC Registry | Page 79 of 125\n\nOpen Ne\n\nONG C\n\nP3 6 days\n\nP4 - Service Request 15 days\n\nSLA calculation\n\nFormulae:\n\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\n\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\n\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\n\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period\n\nSLA target Resolution Time % = 100%\nSeverity level for|2% of quarterly payment due\ncomputation of\n\nLiquidated Damages\n\nMeasurement interval | Monthly\n\nReporting interval Quarterly\n\nReports or Data to be\nsubmitted, if any\n\nAutomated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n\nIncident Resolution Report\n\nIncident Request Work \u201cIn Progress\u201d Report\n\nIncident average resolution report\n\nIncident number of duplicates\n\n% of incidents converted as Problem\n\n% repeat unknown cause of/incident\n\nNumber of incidents with priorities modified during their course\nof resolution report\n\nRCA of P1 and P2 resolved.\n\nNOaARWN>\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 80 of 125\n\nOpen Ne\n\nP3 6 days\n\nP4 - Service Request 15 days\n\nSLA calculation\n\nFormulae:\n\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\n\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\n\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\n\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period\n\nSLA target Resolution Time % = 100%\nSeverity level for|2% of quarterly payment due\ncomputation of\n\nLiquidated Damages\n\nMeasurement interval | Monthly\n\nReporting interval Quarterly\n\nReports or Data to be\nsubmitted, if any\n\nAutomated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n\nIncident Resolution Report\n\nIncident Request Work \u201cIn Progress\u201d Report\n\nIncident average resolution report\n\nIncident number of duplicates\n\n% of incidents converted as Problem\n\n% repeat unknown cause of/incident\n\nNumber of incidents with priorities modified during their course\nof resolution report\n\nRCA of P1 and P2 resolved.\n\nNOaARWN>\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 80 of 125\n\nOpen Network for Digital Commerce\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 81 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 81 of 125\n\nONG C\n\nOpen Ne\n\n- The dependency injection feature allows you to define the dependencies that your\napplication needs in configuration classes, and the framework will automatically create\nand inject the required beans at runtime. This can make it easier to manage\ndependencies and keep your code modular and maintainable.\n\n- It also provides CRUD (create, read, update, delete) services that can be used to\nsimplify the implementation of common persistence tasks. These services are built on\ntop of the Spring Data project, which provides a consistent interface for interacting with\na variety of data stores.\n\nRepository Class Extending CRUD\nservices\n\nDependency\ninjection\n\ni Domain | |\n\nhttps, Controller fg ce | | Verification | | Audit/Logging i\n\nClient (lookup/viookup H\n/subscribe)\n\nValidate Network\nParticipant\n\ni | Validation Unique |\n\nlookup /viookup i\nKey\n\nsubscribe/\n\nJPA/\nHibernate\n\nFigure 1 Registry Software Architecture\n\nAt a high level, application consists of the following components:\n- Controller:\n\n-  Vlookup: An API that handles requests related to retrieving subscriber information and\nnetwork participant information would require an authentication mechanism to ensure\nthat only authorised users are able to access this information.\n\n- LookUp: An API that retrieves subscriber information but does not have any\nauthentication mechanism in place.\n\n- Subscribe: An API mentioned here is a way for entities such as buyers, sellers, or\nnetwork participants to register with ONDC registry.\n\n- Service:\n\n- Validation Keys: This logic is used to verify the signing_public_key and\nencryption_public_key that are provided at the time of subscription through the\nsubscribe API. The validation keys are used to ensure that the keys provided by the\nentity are authentic and have not been tampered with.\n\n- Domain Verification: The subscriber's URL is verified as part of the subscription\nprocess. This process can ensure that the subscriber_id corresponds to a specific\ndomain, and that the subscriber has control over that domain. It also provides a way\nfor the system to confirm that the subscriber is who they claim to be, and that the\ndomain is being used for legitimate purposes.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 83 of 125\n\nOpen Ne\n\n- The dependency injection feature allows you to define the dependencies that your\napplication needs in configuration classes, and the framework will automatically create\nand inject the required beans at runtime. This can make it easier to manage\ndependencies and keep your code modular and maintainable.\n\n- It also provides CRUD (create, read, update, delete) services that can be used to\nsimplify the implementation of common persistence tasks. These services are built on\ntop of the Spring Data project, which provides a consistent interface for interacting with\na variety of data stores.\n\nRepository Class Extending CRUD\nservices\n\nDependency\ninjection\n\nDomain\nVerification\n\n| Audit/Logging F\n\nhttps, Controller\nClient I (lookup/viookup\n/subscribe)\n\nValidation Unique | Validate Network\n\nlookup /viookup i\nKey Participant \u2018\n\nsubscribe/\n\nJPA/\nHibernate\n\nFigure 1 Registry Software Architecture\n\nAt a high level, application consists of the following components:\n- Controller:\n\n-  Vlookup: An API that handles requests related to retrieving subscriber information and\nnetwork participant information would require an authentication mechanism to ensure\nthat only authorised users are able to access this information.\n\n- LookUp: An API that retrieves subscriber information but does not have any\nauthentication mechanism in place.\n\n- Subscribe: An API mentioned here is a way for entities such as buyers, sellers, or\nnetwork participants to register with ONDC registry.\n\n- Service:\n\n- Validation Keys: This logic is used to verify the signing_public_key and\nencryption_public_key that are provided at the time of subscription through the\nsubscribe API. The validation keys are used to ensure that the keys provided by the\nentity are authentic and have not been tampered with.\n\n- Domain Verification: The subscriber's URL is verified as part of the subscription\nprocess. This process can ensure that the subscriber_id corresponds to a specific\ndomain, and that the subscriber has control over that domain. It also provides a way\nfor the system to confirm that the subscriber is who they claim to be, and that the\ndomain is being used for legitimate purposes.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 83 of 125\n\nONG C\n\nOpen Ne\n\n- Audit/Logging: The application allows for the logging and storage of information\nrelated to certain events that occur within a system. This information can include details\nsuch as who performed an action, when it was performed, and what the action was.\n\n- Validate Network Participant:\n\n- One level of validation is JSON Schema validation, it is a way to ensure that the\ndata received from the network participant conforms to a specific schema, this\nschema could contain certain rules for the message structure, data types, and\nformat. This step of validation helps to ensure that the data received from the\nnetwork participant is well-formed and can be processed correctly by the system.\n\n- Another level of validation is city code validation, This can be used to confirm that\nthe network participant is physically located in a specific city, this information can\nbe used to determine the correct time zone, currency, or other data relevant to the\napplication.\n\n- Another level of validation is domain validation, which is used to confirm that the\nnetwork participant has ownership of a specific domain name. This can help to\nprevent spoofing or phishing attempts.\n\n- The subscriber URL validation is a way to verify that the network participant is\nauthorised to access specific resources or services, by checking that the network\nparticipant's URL matches a whitelisted or trusted domain.\n\n- It's important to note that these methods of validation can be used together or\nindividually depending on the security requirements and the complexity of the\nnetwork.\n\nC. High Level Architecture\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 84 of 125\n\nOpen Ne\n\n- Audit/Logging: The application allows for the logging and storage of information\nrelated to certain events that occur within a system. This information can include details\nsuch as who performed an action, when it was performed, and what the action was.\n\n- Validate Network Participant:\n\n- One level of validation is JSON Schema validation, it is a way to ensure that the\ndata received from the network participant conforms to a specific schema, this\nschema could contain certain rules for the message structure, data types, and\nformat. This step of validation helps to ensure that the data received from the\nnetwork participant is well-formed and can be processed correctly by the system.\n\n- Another level of validation is city code validation, This can be used to confirm that\nthe network participant is physically located in a specific city, this information can\nbe used to determine the correct time zone, currency, or other data relevant to the\napplication.\n\n- Another level of validation is domain validation, which is used to confirm that the\nnetwork participant has ownership of a specific domain name. This can help to\nprevent spoofing or phishing attempts.\n\n- The subscriber URL validation is a way to verify that the network participant is\nauthorised to access specific resources or services, by checking that the network\nparticipant's URL matches a whitelisted or trusted domain.\n\n- It's important to note that these methods of validation can be used together or\nindividually depending on the security requirements and the complexity of the\nnetwork.\n\nC. High Level Architecture\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 84 of 125\n\nONG C\n\nValidation of Request Structure\n\nPresentation Layer (Schema)\n\nfo 5 2 oN\nDomain Verification\nValidation of Keys\nin Validate Entity\nBusi ess Layer Validate Network Participant\nValidate Seller on Record\n\nae\nV7\n\nPersistence Layer Storage Logic\ne ZS\nve\nDatabase pci of sca on\nia )\n\nFigure 2 Registry High Level Architecture\n\nPresentation Layer:\n\n- The presentation layer is the interface through which users interact with the registry. It\nis responsible for presenting the information stored in the registry to the user, as well\nas receiving and validating requests from the user.\n\n- The presentation layer would receive requests from the user, validate them to ensure\nthat they are properly structured and contain all necessary information, and then pass\nthem on to the registry. The registry would then process the request and return the\nrequested information to the presentation layer, which would in turn present it to the\nuser.\n\n- The presentation layer can also include additional functionality, such as authentication\nand authorisation, to ensure that only authorised users are able to access the registry\nand that they are only able to perform actions that they are permitted to perform.\n\nBusiness Layer:\n\n- The business layer sits between the presentation layer and the database layer. It is\nresponsible for implementing the business logic of the registry, including verifying\ndomain names, validating keys, and verifying the identity and credentials of network\nparticipants and sellers.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 85 of 125\n\nOpen Network for Digital Commerce\n\nValidation of Request Structure\n(Schema)\n\nDomain Verification\nValidation of Keys\nValidate Entity\nValidate Network Participant\nValidate Seller on Record\n\nPersistence Layer Storage Logic\n\\ ZN\n(- Ad\nDatabase \u201cabissof ey sai\n3S\n\nFigure 2 Registry High Level Architecture\n\nPresentation Layer:\n\n- The presentation layer is the interface through which users interact with the registry. It\nis responsible for presenting the information stored in the registry to the user, as well\nas receiving and validating requests from the user.\n\n- The presentation layer would receive requests from the user, validate them to ensure\nthat they are properly structured and contain all necessary information, and then pass\nthem on to the registry. The registry would then process the request and return the\nrequested information to the presentation layer, which would in turn present it to the\nuser.\n\n- The presentation layer can also include additional functionality, such as authentication\nand authorisation, to ensure that only authorised users are able to access the registry\nand that they are only able to perform actions that they are permitted to perform.\n\nBusiness Layer:\n\n- The business layer sits between the presentation layer and the database layer. It is\nresponsible for implementing the business logic of the registry, including verifying\ndomain names, validating keys, and verifying the identity and credentials of network\nparticipants and sellers.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 85 of 125\n\nONG C\n\nOpen Ne\n\n- The business layer can also include additional functionality, such as data\ntransformation and mapping, to ensure that the data is properly formatted and\nstructured for use by the presentation layer and the database.\n\nPersistence Layer:\n\n- It is responsible for storing and retrieving information from the registry's database. It\nimplements the logic for storing and organizing the data in the database, as well as for\nexecuting requests from the business layer to retrieve or update the data.\n\n- The persistence layer can include a variety of different components, such as database\nmanagement systems, data storage systems, and data access and retrieval\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.\n\nDatabase:\n- The database is responsible for storing the data that is managed by the registry.\n\n- The database stores the data in tables, with each table representing a different entity\nor type of information. For example, there might be tables for storing information about\nnetwork participants, sellers, and transactions.\n\n- Refer to Section 2 [Database Design] for more details.\n\nD. Deployment Architecture\n\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application,\nand it routes incoming requests to the appropriate location backend based on the configured\nrules.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 86 of 125\n\nOpen Ne\n\n- The business layer can also include additional functionality, such as data\ntransformation and mapping, to ensure that the data is properly formatted and\nstructured for use by the presentation layer and the database.\n\nPersistence Layer:\n\n- It is responsible for storing and retrieving information from the registry's database. It\nimplements the logic for storing and organizing the data in the database, as well as for\nexecuting requests from the business layer to retrieve or update the data.\n\n- The persistence layer can include a variety of different components, such as database\nmanagement systems, data storage systems, and data access and retrieval\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.\n\nDatabase:\n- The database is responsible for storing the data that is managed by the registry.\n\n- The database stores the data in tables, with each table representing a different entity\nor type of information. For example, there might be tables for storing information about\nnetwork participants, sellers, and transactions.\n\n- Refer to Section 2 [Database Design] for more details.\n\nD. Deployment Architecture\n\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application,\nand it routes incoming requests to the appropriate location backend based on the configured\nrules.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 86 of 125\n\nONC\n\nOpen Net\n\n* Application Instances\n' Database\n\nInternet\n\nGlobal Load Balancer HTTP\nFigure 3 Deployment Architecture\n\nThe HTTP(S) Load Balancer provides below features:\n- Deploy multiple instances of the application to different servers / virtual machines.\n\n- Create an HTTP(S) Load Balancer and configure it to route traffic to the different\nlocations where your application is deployed.\n\nAuthentication and authorization:\n\n- Having a white list of authorised network participants can help to ensure the security\nand integrity of the registry by limiting access to only those participants that have been\nvetted and deemed trustworthy.\n\n- By exposing a URL and public key information, network participants can demonstrate\ntheir identity and authenticity to the registry, which helps to ensure that only authorised\nparticipants are granted access.\n\nE. Registry Class Diagrams\n\nClass Diagrams: Com.nsdl.beckn.np.model.request :\n1) Ack.java:\n\nStatus: ACK for success, NACK for unsuccess. Delivers the message for the\nstatus. The status should be represented in string format.\n\n\u00a9 ack\n\nO status: String\n\n\u00a9 getStatus(): String\n\ne setStatus(status: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 Ack()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 87 of 125\n\n==\nInternet\n\nGlobal Load Balancer HTTP\nFigure 3 Deployment Architecture\n\nThe HTTP(S) Load Balancer provides below features:\n- Deploy multiple instances of the application to different servers / virtual machines.\n\n- Create an HTTP(S) Load Balancer and configure it to route traffic to the different\nlocations where your application is deployed.\n\nAuthentication and authorization:\n\n- Having a white list of authorised network participants can help to ensure the security\nand integrity of the registry by limiting access to only those participants that have been\nvetted and deemed trustworthy.\n\n- By exposing a URL and public key information, network participants can demonstrate\ntheir identity and authenticity to the registry, which helps to ensure that only authorised\nparticipants are granted access.\n\nE. Registry Class Diagrams\n\nClass Diagrams: Com.nsdl.beckn.np.model.request :\n1) Ack.java:\n\nStatus: ACK for success, NACK for unsuccess. Delivers the message for the\nstatus. The status should be represented in string format.\n\n\u00a9 ack\n\nO status: String\n\n\u00a9 getStatus(): String\n\ne setStatus(status: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Ack()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 87 of 125\n\n2) Context.java :\n\nIn this class it should give the details of operation number, whereas operation\nnumber should be represented in integer format.\n\n\u00a9 Context\n\n4 opsNo: Integer\n\n\u00a9 getOpsNo(): Integer\n\ne setOpsNo(opsNo: Integer): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne Context()\n\n3) Entity java:\nIn this Entity class it should contain the details such as GST number, PAN number,\n\nName and Address of Authorised Signatory, email id, Mobile number, country. And also,\nshould give the details of effective date of registration.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 88 of 125\n\nOpen Network for Digital Commerce\n\n2) Context.java :\n\nIn this class it should give the details of operation number, whereas operation\nnumber should be represented in integer format.\n\n\u00a9 Context\n\n4 opsNo: Integer\n\n\u00a9 getOpsNo(): Integer\n\ne@ setOpsNo(opsNo: Integer): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Context()\n\n3) Entity java:\nIn this Entity class it should contain the details such as GST number, PAN number,\nName and Address of Authorised Signatory, email id, Mobile number, country. And also,\nshould give the details of effective date of registration.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 88 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entity\n\nO gst: EntityGst\n\n0 pan: EntityPan\n\n0 nameOfAuthorisedSignatory: String\noO addressOfAuthorisedSignatory: String\nOo emailld: String\n\nO mobileNo: String\n\nO subscriberld: String\n\nOo keyPair: KeyPair\n\no effectiveDateOfRegistration: String\n& country: String\n\n4 callbackUrl: String\n\n4 uniqueKeyld: String\n\n\u00a9 getGst(): EntityGst\n\ne getPan(): EntityPan\n\n\u00a9 getNameOfAuthorisedSignatory(): String\n\ne getAddressOfAuthorisedSignatory(): String\n\ne getEmailld(): String\n\n\u00a9 getMobileNo(): String\n\ne@ getSubscriberld(): String\n\n@ getKeyPair(): KeyPair\n\ne@ getEffectiveDateOfRedgistration(): String\n\ne getCountry(): String\n\n\u00a9 getCallbackUrl(): String\n\n\u00a9 getUniqueKeyld(): String\n\ne setGst(gst: EntityGst): void\n\nsetPan(pan: EntityPan): void\nsetNameOfAuthorisedSignatory(nameOfAuthorisedSignatory: String): void\nsetAddressOfAuthorisedSignatory(addressOfAuthorisedSignatory: String): void\nsetEmailld(emailld: String): void\n\nsetMobileNo(mobileNo: String): void\n\nsetSubscriberld(subscriberld: String): void\n\nsetKeyPair(keyPair: KeyPair): void\nsetEffectiveDateOfRegistration(effectiveDateOfRegistration: String): void\nsetCountry(country: String): void\n\nsetCallbackUrl(callbackUrl: String): void\n\nsetUniqueKeyld(uniquekKeyld: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n Entity()\n\n4)EntityGst java:\nThis EntityGst class contains the values such as Legal entity name, Business address, city\ncode, GST number.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 89 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 Entity\n\noO gst: EntityGst\n\n0 pan: EntityPan\n\nOo nameOfAuthorisedSignatory: String\noO addressOfAuthorisedSignatory: String\n5 emailld: String\n\nO mobileNo: String\n\nO subscriberld: String\n\nOo keyPair: KeyPair\n\no effectiveDateOfRegistration: String\n4 country: String\n\n4 callbackUrl: String\n\n4 uniqueKeyld: String\n\n\u00a9 getGst(): EntityGst\n\ne getPan(): EntityPan\n\ne@ getNameOfAuthorisedSignatory(): String\n\ne@ getAddressOfAuthorisedSignatory(): String\n\ne@ getEmailld(): String\n\n\u00a9 getMobileNo(): String\n\ne@ getSubscriberld(): String\n\n@ getKeyPair(): KeyPair\n\ne@ getEffectiveDateOfRedgistration(): String\n\ne getCountry(): String\n\n\u00a9 getCallbackUrl(): String\n\n@ getUniqueKeyld(): String\n\ne setGst(gst: EntityGst): void\n\ne setPan(pan: EntityPan): void\n\ne setNameOfAuthorisedSignatory(nameOfAuthorisedSignatory: String): void\ne setAddressOfAuthorisedSignatory(addressOfAuthorisedSignatory: String): void\ne@ setEmailld(emailld: String): void\n\n@ setMobileNo(mobileNo: String): void\n\ne setSubscriberld(subscriberld: String): void\n\ne setKeyPair(keyPair: KeyPair): void\n\ne setEffectiveDateOfRegistration(effectiveDateOfRegistration: String): void\n@ setCountry(country: String): void\n\ne setCallbackUrl(callbackUrl: String): void\n\n@ setUniqueKeyld(uniqueKeyld: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne Entity()\n\n4)EntityGst java:\nThis EntityGst class contains the values such as Legal entity name, Business address, city\ncode, GST number.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 89 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entitycst\n\nO legalEntityName: String\nO businessAddress: String\nO cityCode: List<String>\n\no gstNo: String\n\n\u00a9 getLegalEntityName(): String\n\n\u00a9 getBusinessAddress(): String\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getGstNo(): String\n\ne setLegalEntityName(legalEntityName: String): void\n\u00a9 setBusinessAddress(businessAddress: String): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 setGstNo(gstNo: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\n toString(): String\n\ne EntityGst()\n\n5) EntityPan.java:\nThis EntityPan class contains name as per PAN, pan number, and date of\nincorporation description.\n\n\u00a9 eEntityran\n\nOo nameAsPerPan: String\nO panNo: String\no dateOfincorporation: String\n\ne getNameAsPerPan(): String\n\n\u00a9 getPanNo(): String\n\n\u00a9 getDateOfincorporation(): String\n\ne setNameAsPerPan(nameAsPerPan: String): void\ne setPanNo(panNo: String): void\n\ne setDateOfincorporation(dateOfincorporation: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne EntityPan()\n\n6) Error.java:\nIn case of any failure scenarios this model gives the necessary\ninformation.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 90 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entitycst\n\nO legalEntityName: String\nO businessAddress: String\nO cityCode: List<String>\n\no gstNo: String\n\ne getLegalEntityName(): String\n\n\u00a9 getBusinessAddress(): String\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getGstNa(): String\n\ne setLegalEntityName(legalEntityName: String): void\ne setBusinessAddress(businessAddress: String): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setGstNo(gstNo: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne EntityGst()\n\n5) EntityPan.java:\nThis EntityPan class contains name as per PAN, pan number, and date of\nincorporation description.\n\n\u00a9 eEntitypan\n\nOo nameAsPerPan: String\nO panNo: String\no dateOfincorporation: String\n\ne getNameAsPerPan(): String\n\ne getPanNo(): String\n\n\u00a9 getDateOfincorporation(): String\n\ne setNameAsPerPan(nameAsPerPan: String): void\ne setPanNo(panNo: String): void\n\ne setDateOfincorporation(dateOfincorporation: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne EntityPan()\n\n6) Error.java:\nIn case of any failure scenarios this model gives the necessary\ninformation.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 90 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9) Error\n\nO type: String\nO code: String\n0 path: String\nOo message: String\n\n\u00a9 getType(): String\n\n\u00a9 getCode(): String\n\ne getPath(): String\n\n\u00a9 getMessage(): String\n\ne setType(type: String): void\n\n\u00a9 setCode(code: String): void\n\ne setPath(path: String): void\n\no setMessage(message: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Error()\n\n7) ErrorResponse.java :\nThis class show the Error Response Acknowledgement, like example\nSubscriber id already exists/Subscribe id does not exist.\n\n\u00a9 ErrorResponse\n\noO message: ErrorResponseACK\nOo error: Error\n\n\u00a9 getMessage(): ErrorResponseACK\n\ne getError(): Error\n\ne setMessage(message: ErrorResponseACk): void\ne setError(error: Error): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ErrorResponse()\n\n8) ErrorResponseACK java :\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is\nunsuccess it gives NACK.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 91 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9) Error\n\nO type: String\nO code: String\n0 path: String\nOo message: String\n\n\u00a9 getType(): String\n\n\u00a9 getCode(): String\n\ne getPath(): String\n\n\u00a9 getMessage(): String\n\ne setType(type: String): void\n\ne setCode(code: String): void\n\ne setPath(path: String): void\n\ne setMessage(message: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne Error()\n\n7) ErrorResponse.java :\nThis class show the Error Response Acknowledgement, like example\nSubscriber id already exists/Subscribe id does not exist.\n\n\u00a9 ErrorResponse\n\noO message: ErrorResponseACK\nOo error: Error\n\n\u00a9 getMessage(): ErrorResponseACK\n\ne getError(): Error\n\ne setMessage(message: ErrorResponseACk): void\ne setError(error: Error): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ErrorResponse()\n\n8) ErrorResponseACK java :\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is\nunsuccess it gives NACK.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 91 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ErrorResponseack\nO ack: Ack\n\n\u00a9 equals(o: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ng tolndentedString(o: Object): String\n\u00a9 getAck(): Ack\n\ne setAck(ack: Ack): void\n\ne ErrorResponseACk()\n\n9) KarzaGstRequest.java :\nThis class contains the information of GST and Consent .\n\n\u00a9 KarzaGstRequest\n\n4 gstin: String\n4 consent: String\n\n\u00a9 getGstin(): String\n\ne getConsent(): String\n\ne setGstin(gstin: String): void\n\n\u00a9 setConsent(consent: String): void\n\u00a9 equals(a: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne KarzaGstRequest()\n\n10) KarzaPanRequest.java:\n\nThis Class contains the values of PAN number, Name, Date of birth,\nConsent.\n\n\u00a9 KarzaPanRequest\n\n4 pan: String\n\n4 name: String\n4 dob: String\n\n4 consent: String\n\ne getPan(): String\n\ne getName(): String\n\ne getDob(): String\n\ne getConsent(): String\n\ne setPan(pan: String): void\n\ne setName(name: String): void\n\ne setDob(dob: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne KarzaPanRequest()\n\n11) KeyPair.java:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 92 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 ErrorResponseack\nO ack: Ack\n\n\u00a9 equals(o: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ng tolndentedString(o: Object): String\n\u00a9 getAck(): Ack\n\ne setAck(ack: Ack): void\n\ne ErrorResponseACk()\n\n9) KarzaGstRequest.java :\nThis class contains the information of GST and Consent .\n\n\u00a9 KarzaGstRequest\n\n4 gstin: String\n4 consent: String\n\ne getGstin(): String\n\ne getConsent(): String\n\ne setGstin(gstin: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne KarzaGstRequest()\n\n10) KarzaPanRequest.java:\n\nThis Class contains the values of PAN number, Name, Date of birth,\nConsent.\n\n\u00a9 KarzaPanRequest\n\n4 pan: String\n\n4 name: String\n4 dob: String\n\n4 consent: String\n\ne getPan(): String\n\ne@ getName(): String\n\ne getDob(): String\n\n@ getConsent(): String\n\ne setPan(pan: String): void\n\ne setName(name: String): void\n\ne setDob(dob: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne KarzaPanRequest()\n\n11) KeyPair.java:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 92 of 125\n\nOpen Network for Digital Commerce\n\nThis Class contains the information about Signing public key, encryption public key, valid from\nand valid until which are in string format.\n\n\u00a9 KeyPair\n\nO signingPublickey: String\n\nO encryptionPublickey: String\nO validFrom: String\n\na validUntil: String\n\ne KeyPair(signingPublickey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\ne KeyPair(signingPublickey: String, encryptionPublicKey: String)\n\u00a9 KeyPair()\n\n\u00a9 getSigningPublickey(): String\n\ne getEncryptionPublickey(): String\n\n\u00a9 getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\ne setSigningPublickey(signingPublickey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\n12) Logs.java: This class contains Server Name and request id.\n\n\u00a9 Lous\n\nO requestid: String\n\n4 request: String\n\n4 type: String\n\n4 priority: String\n\n4 exception: String\n\n4 javaStackTrace: String\n+ serverName: String\n\n4 Logs(requestid: String, request: String, type: String, priority: String, exception: String, javaStackTrace: String, serverName: String)\n builder(): Logs. LogsBuilder\n\n@ getRequestid(): String\n\n\u00a9 getRequest(): Sting\n\n getType(): String\n\n\u00a9 getPriority(): String\n\ne getException(). String\n\n\u00a9 getJavaStackTrace(): String\n\n\u00a9 getServerName(): String\n\ne setRequestid(requestid: String): void\n\ne setRequest(request: String): void\n\n@ setType(type: String): void\n\n\u00a9 setPriority(priority: String): void\n setException(exception: String): void\n\ne setJavaStackTrace(javaStackTrace: String): void\n\u00a9 setServerName(serverName: String): void\n equals(o: Object): boolean\n\n\u00a9 canEqual(otner: Object): boolean\n\n@ hashCode(): int\n\n\u00a9 taString(): String\n\n13) NetworkParticipant java:\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And\nalso seller on record, city code list.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 93 of 125\n\nOpen Network for Digital Commerce\n\nThis Class contains the information about Signing public key, encryption public key, valid from\nand valid until which are in string format.\n\nKeyPair\n\nO signingPublickey: String\n\n\u00a9 encryptionPublickey: String\nO validFrom: String\n\no validUntil: String\n\ne KeyPair(signingPublickey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\ne KeyPair(signingPublickey: String, encryptionPublicKey: String)\n\u00a9 KeyPair()\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncryptionPublickey(): String\n\n\u00a9 getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\ne setSigningPublickey(signingPublickey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\n12) Logs.java: This class contains Server Name and request id.\n\n\u00a9 Lous\n\nco requestid: String\n\n4 request: String\n\n4 type: String\n\n4 priority: String\n\n4 exception: String\n\n4 javaStackTrace: String\n4 serverName: String\n\n4 Logs(requestid: String, request: String, type: String, priority: String, exception: String, javaStackTrace: String, serverName: String)\n builder(): Logs. LogsBuilder\n\n@ getRequestid(): String\n\n\u00a9 getRequest(): Sting\n\n getType(): String\n\n\u00a9 getPriority(): String\n\ne getException(). String\n\n\u00a9 getJavaStackTrace(): String\n\n\u00a9 getServerName(): String\n\ne setRequestid(requestid: String): void\n\n@ setRequest(request: String): void\n\n@ setType(type: String): void\n\n\u00a9 setPriority(priority: String): void\n\ne setException(exception: String): void\n\ne setJavaStackTrace(javaStackTrace: String): void\n\u00a9 setServerName(serverName: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(otner: Object): boolean\n\n@ hashCode(): int\n\ne taString(): String\n\n13) NetworkParticipant java:\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And\nalso seller on record, city code list.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 93 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 NetworkParticipant\n\nO subscriberUrl: String\n\n0 domain: String\n\n0 type: String\n\no msn: boolean\n\n0 cityCode: List<String>\n\nO sellerOnRecord: List<SellerOnRecord>\n\ne getKey(subscriberld: String): String\n\n\u00a9 getSubscriberUrl(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne isMsn(): boolean\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getSellerOnRecord(): List<SellerOnRecord>\ne setSubscriberUrl(subscriberUri: String): void\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecord(sellerOnRecord: List<SellerOnRecord>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 NetworkParticipant()\n\n14) ReqLookup.java:\nThis Class contains the information such as Subscribe id, city, country, domain, type.\n\n\u00a9 ReqLookup\n\nO subscriberld: String\nO city: String\n\nO country: String\n\nOo domain: String\n\nO type: String\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne setSubscriberld(subscriberld: String): void\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\n\u00a9 setType(type: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne@ ReqLookup()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 94 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 NetworkParticipant\n\n0 subscriberUri: String\n\n0 domain: String\n\nO type: String\n\no msn: boolean\n\nO cityCode: List<String>\n\nO sellerOnRecord: List<SellerOnRecord>\n\ne getKey(subscriberld: String): String\n\ne getSubscriberUri(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecord(): List<SellerOnRecord>\ne setSubscriberUrl(subscriberUrl: String): void\ne@ setDomain(domain: String): void\n\ne setType(type: String): void\n\ne setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 setSellerOnRecord(sellerOnRecord: List<SellerOnRecord>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode): int\n\ne toString(): String\n\n@ NetworkParticipant()\n\n14) ReqLookup.java:\nThis Class contains the information such as Subscribe id, city, country, domain, type.\n\n\u00a9 ReqLookup\n\nO subscriberld: String\nO city: String\n\nO country: String\n\nOo domain: String\n\nO type: String\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): String\n\ne getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne setSubscriberld(subscriberld: String): void\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne setType(type: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ ReqLookup()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 94 of 125\n\nOpen Network for Digital Commerce\n\n15) ReqOnSubscribe.java:\nThis Class shows Subscriber ID and challenge.\n\n\u00a9 Regonsubsribe\n\nO subscriberld: String\nO challenge: String\n\n\u00a9 getSubscriberld(): String\n\ne getChallenge(): String\n\ne setSubscriberld(subscriberld: String): void\ne setChallenge(challenge: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ReqOnSubsribe()\n\n14) RequestOldSearch.java:\nThis class contains the values city name, country name, domain, type, subscriber id, unique\nkey id, message.\n\n\u00a9 RequestOldSearch\n\nO city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4ukld: String\n\n4 statusCode: String\n4 msg: String\n\ne getCity(): String\n\ne getCountry(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne getSubscriberld(): String\n\ne getUkld(): String\n\n\u00a9 getStatusCode(): String\n\n\u00a9 getMsg(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\n\u00a9 setType(type: String): void\n\ne setSubscriberld(subscriberld: String): void\ne setUKid(ukld: String): void\n\n\u00a9 setStatusCode(statusCode: String): void\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestOldSearch()\n\n15) RequestSearch.java:\nThis class contains the values such as Sender subscriber id, request id, time stamp, search,\nparameters, signature, status code and message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 95 of 125\n\nOpen Network for Digital Commerce\n\n15) ReqOnSubscribe.java:\nThis Class shows Subscriber ID and challenge.\n\n\u00a9 Regonsubsribe\n\nO subscriberld: String\nOo challenge: String\n\ne getSubscriberld(): String\n\ne getChallenge(): String\n\ne setSubscriberld(subscriberld: String): void\n\u00a9 setChallenge(challenge: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne@ ReqOnSubsribe()\n\n14) RequestOldSearch.java:\nThis class contains the values city name, country name, domain, type, subscriber id, unique\nkey id, message.\n\n\u00a9 RequestOldSearch\n\nO city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4. ukld: String\n\n4 statusCode: String\n4 msg: String\n\ne getCity(): String\n\ne getCountry(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne getSubscriberld(): String\n\ne getUkKld(): String\n\n\u00a9 getStatusCode(): String\n\n\u00a9 getMsg(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne@ setDomain(domain: String): void\n@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): void\ne setUKld(ukld: String): void\n\n\u00a9 setStatusCode(statusCode: String): void\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestOldSearch()\n\n15) RequestSearch.java:\nThis class contains the values such as Sender subscriber id, request id, time stamp, search,\nparameters, signature, status code and message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 95 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestSearch\n\n4 sender_subscriber_id: String\n\nA requestid: String\n\n4 timestamp: String\n\n4 searchParameters: RequestSearchParam\n4 signature: String\n\n4 statusCode: String\n\n4 msg: String\n\ne getSender_subscriber_id(): String\n\ne getRequestlid(): String\n\n\u00a9 getTimestamp(): String\n\n\u00a9 getSearchParameters(): RequestSearchParam\n\ne getSignature(): String\n\n\u00a9 getStatusCode(): String\n\ne getMsg(): String\n\ne setSender_subscriber_id(sender_subscriber_id: String): void\ne setRequestid(requestid: String): void\n\ne setTimestamp(timestamp: String): void\n\ne setSearchParameters(searchParameters: RequestSearchParam): void\ne setSignature(signature: String): void\n\ne setStatusCode(statusCode: String): void\n\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearch()\n\n16)RequestSearchParam java:\nThis class contains the values such as city, country, domain, type, subscriber id, data.\n\n\u00a9 RequestSearchParam\n\n0 city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4 data: String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\n\u00a9 getSubscriberld(): String\n\ne getData(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): vaid\n\u00a9 setData(data: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearchParam()\n\n17) RequestText java:\nThis class contains the values such as client public key, challenge,\nclient private key\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 96 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestSearch\n\n4 sender_subscriber_id: String\n\nA requestid: String\n\n4 timestamp: String\n\n4 searchParameters: RequestSearchParam\n4 signature: String\n\n4 statusCode: String\n\n4 msg: String\n\ne getSender_subscriber_id(): String\n\ne getRequestid(): String\n\n\u00a9 getTimestamp(): String\n\n\u00a9 getSearchParameters(): RequestSearchParam\n\ne getSignature(): String\n\n\u00a9 getStatusCode(): String\n\ne getMsg(): String\n\ne setSender_subscriber_id(sender_subscriber_id: String): void\ne setRequestid(requestid: String): void\n\ne setTimestamp(timestamp: String): void\n\ne setSearchParameters(searchParameters: RequestSearchParam): void\ne setSignature(signature: String): void\n\ne setStatusCode(statusCode: String): void\n\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearch()\n\n16)RequestSearchParam java:\nThis class contains the values such as city, country, domain, type, subscriber id, data.\n\n\u00a9 RequestSearchParam\n\n0 city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4 data: String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n@ getType(): String\n\ne getSubscriberld(): String\n\ne getData(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): vaid\n\u00a9 setData(data: String): void\n\n@ equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestSearchParam()\n\n17) RequestText java:\nThis class contains the values such as client public key, challenge,\nclient private key\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 96 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestText\n\n4 clientPublickey: String\n4 challenge: String\n4 clientPrivateKey: String\n\ne getClientPublicKey(): String\n\n\u00a9 getChallenge(): String\n\n\u00a9 getClientPrivateKey(): String\n\n@ setClientPublickey(clientPublicKey: String): void\ne setChallenge(challenge: String): void\n\ne setClientPrivateKey(clientPrivateKey: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne RequestText()\n\n18) SellerOnRecord.java :\nThis entity contains the values such as unique key id, key pair, city code.\n\n\u00a9 selleronRecord\n\nO uniqueKeyld: String\nOo keyPair: KeyPair\nO cityCode: List<String>\n\ne getKey(subscriberld: String): String\n\n\u00a9 getUniquekKeyld(): String\n\n\u00a9 getKeyPair(): KeyPair\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 setUniqueKeyld(uniqueKeyld: String): void\ne setKeyPair(keyPair: KeyPair): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 SellerOnRecord()\n\n19) SubscribeBody.java :\n\nThis class contains the values such as subscribe context details, subscribe\nmessages. Gives error message details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 97 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestText\n\n4 clientPublicKey: String\n4 challenge: String\n4 clientPrivateKey: String\n\ne getClientPublicKey(): String\n\n\u00a9 getChallenge(): String\n\n\u00a9 getClientPrivateKey(): String\n\ne setClientPublickey(clientPublicKey: String): void\ne setChallenge(challenge: String): void\n\ne setClientPrivateKey(clientPrivateKey: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne RequestText()\n\n18) SellerOnRecord.java :\nThis entity contains the values such as unique key id, key pair, city code.\n\n\u00a9 selleronRecord\n\nO uniqueKeyld: String\nOo keyPair: KeyPair\nO cityCode: List<String>\n\ne getKey(subscriberld: String): String\n\n@ getUniqueKeyld(): String\n\n\u00a9 getKeyPair(): KeyPair\n\n\u00a9 getCityCode(): List<String>\n\ne setUniqueKeyld(uniqueKeyld: String): void\ne setKeyPair(keyPair: KeyPair): void\n\ne setCityCode(cityCode: List<String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n@ SellerOnRecord()\n\n19) SubscribeBody.java :\nThis class contains the values such as subscribe context details, subscribe\nmessages. Gives error message details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 97 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscriveBody\n\nO context: SubscribeContext\n\nOo message: SubscribeMessage\n4 edit: boolean\n\n4 msgError: Map<String,String>\n\n\u00a9 getContext(): SubscribeContext\n\n\u00a9 getMessage(): SubscribeMessage\n\ne isEdit(): boolean\n\n\u00a9 getMsgError(): Map<String,String>\n\ne setContext(context: SubscribeContext): void\n\n\u00a9 setMessage(message: SubscribeMessage): void\ne setEdit(edit: boolean): void\n\ne setMsgError(msgError: Map<String,String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeBody()\n\n20) SubscribeContext.java :\nThis class contains the values of subscribe context details. shows the operation details.\n\n\u00a9 SubscribeContext\n\n0 operation: Context\n\n\u00a9 getOperation(): Context\n\n\u00a9 setOperation(operation: Context): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 SubscribeContext()\n\n21) SubscribeMessage.java:\nThis class contains the values of entity, network participant, time stamp, request id.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 98 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscriveBody\n\n0 context: SubscribeContext\n\nOo message: SubscribeMessage\n4 edit: boolean\n\n4 msgError: Map<String,String>\n\ne getContext(): SubscribeContext\n\ne getMessage(): SubscribeMessage\n\ne isEdit(): boolean\n\ne getMsgError(): Map<String,String>\n\ne setContext(context: SubscribeContext): void\n\ne setMessage(message: SubscribeMessage): void\ne setEdit(edit: boolean): void\n\ne setMsgError(msgError: Map<String, String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne SubscribeBody()\n\n20) SubscribeContext.java :\nThis class contains the values of subscribe context details. shows the operation details.\n\n\u00a9 SubscribeContext\n\n0 operation: Context\n\n@ getOperation(): Context\n\ne setOperation(operation: Context): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne@ SubscribeContext()\n\n21) SubscribeMessage.java:\nThis class contains the values of entity, network participant, time stamp, request id.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 98 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscrivemessage\n\n0 entity: Entity\n\n0 networkParticipant: List<NetworkParticipant>\nOo timestamp: String\n\noreqid: String\n\n\u00a9 getEntity(): Entity\n\ne getNetworkParticipant(): List<NetworkParticipant>\n\u00a9 getTimestamp(): String\n\n\u00a9 getReqid(): String\n\ne setEntity(entity: Entity): void\n\ne setNetworkParticipant(networkParticipant: List<NetworkParticipant>): void\ne setTimestamp(timestamp: String): void\n\ne setReqid(reqld: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeMessage()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 99 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscrivemessage\n\n0 entity: Entity\n\n0 networkParticipant: List<NetworkParticipant>\nOo timestamp: String\n\noreqid: String\n\n\u00a9 getEntity(): Entity\n\n\u00a9 getNetworkParticipant(): List<NetworkParticipant>\ne getTimestamp(): String\n\ne getReqid(): String\n\ne setEntity(entity: Entity): void\n\ne setNetworkParticipant(networkParticipant: List<NetworkParticipant>): void\ne setTimestamp(timestamp: String): void\n\ne setReqid(reqld: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeMessage()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 99 of 125\n\nOpen Network for Digital Commerc\n\nCom.nsdl.beckn.np.model.response:\n\n1)ApiEntityMasterProjection.java:\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption,\nvalid from and valid until details, Subscriber URL.\n\n\u00a9@ ApientitymasterProjection\n\ngetiID(): UUID\n\ngetCREATED(): Timestamp\ngetUPDATED(): Timestamp\ngetCALLBACK(): String\ngetCITYCODE(): String\ngetECITYCODE(): String\ngetCOUNTRY(): String\ngetENCRYPT(): String\ngetSIGNING(): String\ngetSTATUS(): String\ngetSUBSCRIBERID(): String\ngetUNIQUEKEYID(): String\ngetVALIDFROM(): Timestamp\ngetVALIDUNTIL(): Timestamp\ngetDOMAIN(): String\n\ngetTYPE(): String\ngetSELLERENCRYPTION(): String\ngetSELLERSIGNING(): String\ngetSELLERCITYCODE(): String\ngetSELLERUNIQUEKEYID(): String\ngetSELLERVALIDFROM(): Timestamp\ngetSELLERVALIDUNTIL(): Timestamp\ngetSUBSCRIBERURL(): String\ngetMSN(): boolean\n\n2) MessageCustomeResponse.java:\nIn this class there is a relationship between Message Customer response and message\nresponse.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 100 of 125\n\nOpen Network for Digital Commerce\n\nCom.nsdl.beckn.np.model.response:\n\n1)ApiEntityMasterProjection.java:\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption,\nvalid from and valid until details, Subscriber URL.\n\n\u00a9@ ApientitymasterProjection\n\ngetiID(): UUID\n\ngetCREATED(): Timestamp\ngetUPDATED(): Timestamp\ngetCALLBACK(): String\ngetCITYCODE(): String\ngetECITYCODE(): String\ngetCOUNTRY(): String\ngetENCRYPT(): String\ngetSIGNING(): String\ngetSTATUS(): String\ngetSUBSCRIBERID(): String\ngetUNIQUEKEYID(): String\ngetVALIDFROM(): Timestamp\ngetVALIDUNTIL(): Timestamp\ngetDOMAIN(): String\n\ngetTYPE(): String\ngetSELLERENCRYPTION(): String\ngetSELLERSIGNING(): String\ngetSELLERCITYCODE(): String\ngetSELLERUNIQUEKEYID(): String\ngetSELLERVALIDFROM(): Timestamp\ngetSELLERVALIDUNTIL(): Timestamp\ngetSUBSCRIBERURL(): String\ngetMSN(): boolean\n\n2) MessageCustomeResponse.java:\nIn this class there is a relationship between Message Customer response and message\nresponse.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 100 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9essageResponse\n\n\u00a9 MessageCustomeResponse\n\nA list: T\n\n\u00a9 MessageCustomeResponse(message: T)\n\u00a9 getList(): T\n\ne setList(list: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n3) MessageResponse.java:\n\n\u00a9 MessageResponse\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\u00a9 hashCode(): int\n\ne toString(): String\n\n\u00a9 MessageResponse()\n\n4) Response.java:\nThis class contains the response of the status message.\n\n\u00a9 Response \u201cy\n\nO status: String\nOo message: T\n\ne Response(status: String, message: T)\n\ne ok(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<T>\n\u00a9 error(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<Response<T>>\n\u00a9 getStatus(): String\n\n\u00a9 getMessage(): T\n\ne setStatus(status: String): void\n\ne setMessage(message: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n5) ResponseKeyPair.java:\n\nThis class contains the details of signing public key, encryption public key, valid from and valid\nuntil.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 101 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n@\u00a9essageResponse\n\n\u00a9 MessageCustomeResponse\n\n4 list: T\n\n\u00a9 MessageCustomeResponse(message: T)\n\u00a9 getList(): T\n\ne setList(list: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n3) MessageResponse.java:\n\n\u00a9 MessageResponse\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 MessageResponse()\n\n4) Response.java:\nThis class contains the response of the status message.\n\nResponse mn\n\nO status: String\noO message: T\n\ne Response(status: String, message: T)\n\ne ok(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<T>\n\u00a9 error(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<Response<T>>\n\u00a9 getStatus(): String\n\n\u00a9 getMessage(): T\n\ne setStatus(status: String): void\n\ne setMessage(message: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n5) ResponseKeyPair.java:\n\nThis class contains the details of signing public key, encryption public key, valid from and valid\nuntil.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 101 of 125\n\nOpen Network for Digital Commerc\n\n\u00a9 ResponseKeyPair\n\nO signingPublicKey: String\n\n5 encryptionPublickey: String\nO validFrom: String\n\no validUntil: String\n\n\u00a9 ResponseKeyPair(signingPublicKey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\n\u00a9 getSigningPublickey(): String\n\n\u00a9 getEncryptionPublickey(): String\n\ne getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): void\n\ne setEncryptionPublicKkey(encryptionPublicKey: String): void\n\u00a9 setValidFrom(validFrom: String): void\n\n\u00a9 setValidUntil(validuntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n hashCode(): int\n\n\u00a9 toString(): String\n\ne ResponseKeyPair(signingPublickey: String, encryptionPublickey: String, validFrom: OffsetDateTime, validUntil: OffsetDateTime)\n\n6) ResponseNetworkParticipant.java:\n\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or\n\nSellerApp, MSN value, city code and seller on record details and map seller details.\n\n\u00a9 ResponseNetworkParticipant\n\n4 subscriberUrl: String\n\n4 domain: String\n\n4 type: String\n\nmsn: boolean\n\n4 cityCode: List<String>\n\n4 sellerOnRecordMasters: ListcResponseSellerOnRecord>\n4 mapSeller: Map<String Integer>\n\ne ResponseNetworkParticipant(obj: ApiEntityMasterProjection)\ne addSeller(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberUrl(): String\n\n\u00a9 getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecordMasters(): ListsResponseSellerOnRecord>\n\u00a9 getMapSeller(): Map<String Integer>\n\ne setSubscriberUrl(subscriberUrl: String): void\n\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne@ setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecordMasters(sellerOnRecordMasters: List<ResponseSellerOnRecord>): void\n\u00a9 setMapSeller(mapSeller: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n7) ResponsEntityMaster.java:\n\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing\npublic key, encryption public key, created updated, unique key id, and network participant\n\ndetails.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 102 of 125\n\nOpen Network for Digital Commerc\n\n\u00a9 ResponsekeyPair\n\nO signingPublicKey: String\n\n\u00a9 encryptionPublickey: String\nO validFrom: String\n\noO validUntil: String\n\ne ResponseKeyPair(signingPublicKey: String, encryptionPublicKey: String, validFrom: OffsetDateTime, validUntil: OffsetDateTime)\n\u00a9 ResponseKeyPair(signingPublickey: String, encryptionPublickey: String, validFrom: String, validUntil: String)\n\u00a9 getSigningPublickey(): String\n\ne getEncryptionPublicKey(): String\n\n\u00a9 getValidFrom(): String\n\ne getValidUntil(): String\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\n\u00a9 setValidFrom(validFrom: String): void\n\n\u00a9 setValidUntil(validuntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n hashCode(): int\n\n\u00a9 toString(): String\n\n6) ResponseNetworkParticipant.java:\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or\nSellerApp, MSN value, city code and seller on record details and map seller details.\n\n\u00a9 ResponseNetworkParticipant\n\n4 subscriberUrli: String\n\n4 domain: String\n\n4 type: String\n\nmsn: boolean\n\n4 cityCode: List<String>\n\n4 sellerOnRecordMasters: List<ResponseSellerOnRecord>\n4 mapSeller: Map<String Integer>\n\n\u00a9 ResponseNetworkParticipant(obj: ApiEntityMasterProjection)\ne addSeller(obj: ApiEntityMasterProjection): void\n\ne getSubscriberUrl(): String\n\ne getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecordMasters(): ListsResponseSellerOnRecord>\n\u00a9 getMapSeller(): Map<String Integer>\n\ne setSubscriberUrl(subscriberUri: String): void\n\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne@ setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecordMasters(sellerOnRecordMasters: List<ResponseSellerOnRecord>): void\n\u00a9 setMapSeller(mapSeller: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode\u2018): int\n\ne toString(): String\n\n7) ResponsEntityMaster.java:\n\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing\npublic key, encryption public key, created updated, unique key id, and network participant\ndetails.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 102 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ResponsentityMaster\n\n0 subscriberld: String\n\nO city: List<String>\n\n\u00a9 country: String\n\nOo validFrom: String\n\nO validUntil: String\n\nO signingPublickey: String\n\nO encrPublickey: String\n\nO created: String\n\n0 updated: String\n\n0 uniqueKeyld: String\n\n4 networkParticipantMasters: ListsResponseNetworkParticipant>\n4 mapNP: Map<String,Integer>\n\n\u00a9 ResponsEntityMaster()\n\ne ResponsEntityMaster(obj: ApiEntityMasterProjection)\n\u00a9 addNp(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): List<String>\n\n\u00a9 getCountry(): String\n\n\u00a9 getValidFram(): String\n\n\u00a9 getValidUntil(): String\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncrPublicKey(): String\n\n\u00a9 getCreated(): String\n\n\u00a9 getUpdated(): String\n\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getNetworkParticipantMasters(): ListsResponseNetworkParticipant>\ne getMapNP(): Map<String,Integer>\n\ne setSubscriberld(subscriberld: String): void\n\n\u00a9 setCity(city: List<String>): void\n\ne setCountry(country: String): void\n\n\u00a9 setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 setSigningPublickey(signingPublickey: String): vaid\ne setEncrPublickey(encrPublickey: String): void\n\ne setCreated(created: String): void\n\n\u00a9 setUpdated(updated: String): void\n\ne setUniquekeyld(uniquekeyld: String): void\n\n\u00a9 setNetworkParticipantMasters(networkParticipantMasters: List<ResponseNetworkParticipant>): void\n\u00a9 setMapNP(mapNP: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n8) ResponseOnSubscribe.java :\nThis class contains the answers of the response.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 103 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n(\u00a9) ResponsEntityMaster\n\nO subscriberld: String\n\nO city: List<String>\n\nO country: String\n\na validFrom: String\n\n0 validUntil: String\n\nO signingPublickey: String\n\nO encrPublickey: String\n\nO created: String\n\noO updated: String\n\nO uniquekeyld: String\n\n4 networkParticipantMasters: ListsResponseNetworkParticipant>\n4 mapNP: Map<String,Integer>\n\n\u00a9 ResponsEntityMaster()\n\ne ResponsEntityMaster(obj: ApiEntityMasterProjection)\n\u00a9 addNp(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): List<String>\n\n\u00a9 getCountry(): String\n\n\u00a9 getValidFram(): String\n\n@ getValidUntil(): String\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncrPublicKey(): String\n\n\u00a9 getCreated(): String\n\n\u00a9 getUpdated(): String\n\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getNetworkParticipantMasters(): ListsResponseNetworkParticipant>\ne getMapNP(): Map<String,Integer>\n\ne setSubscriberld(subscriberld: String): void\n\n\u00a9 setCity(city: List<String>): void\n\ne setCountry(country: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): vaid\ne setEncrPublickey(encrPublicKey: String): void\n\ne setCreated(created: String): void\n\n\u00a9 setUpdated(updated: String): void\n\ne setUniquekeyld(uniquekeyld: String): void\n\n\u00a9 setNetworkParticipantMasters(networkParticipantMasters: List<ResponseNetworkParticipant>): void\n\u00a9 setMapNP(mapNP: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\n toString(): String\n\n8) ResponseOnSubscribe.java :\nThis class contains the answers of the response.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 103 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 Responseonsubsribe\n\nO answer: String\n\n\u00a9 getAnswer(): String\n\ne setAnswer(answer: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne ResponseOnSubsribe()\n\n9) ResponseSellerOnRecord.java:\n\nThis class contains the details of unique key id, key pair value, and city code. Gives the\nresponse of seller on record details.\n\n\u00a9 ResponseSellerOnRecord\n\n4 uniqueKeyld: String\n4 keyPair: ResponsekKeyPair\n4 cityCode: List<String>\n\ne ResponseSellerOnRecord(obj: ApiEntityMasterProjection)\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getKeyPair(): ResponsekeyPair\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 setUniquekKeyld(uniquekKeyld: String): void\n\ne setKeyPair(keyPair: ResponseKeyPair): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n10) ResponseText.java:\nThis class contains the details answer of response text.\n\n\u00a9 ResponseText\n4 answer: String\n\ne ResponseText(answer: String)\n\ne getAnswer(): String\n\ne setAnswer(answer: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n11) ResponsOldCityArrayEntityMaster java:\nThis class contains the details of city, here there is a relation with response old entity parent\nmaster and response old city array entity master.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 104 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 Responseonsubsribe\n\nO answer: String\n\n@ getAnswer(): String\n\ne setAnswer(answer: String): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne@ ResponseOnSubsribe()\n\n9) ResponseSellerOnRecord.java:\n\nThis class contains the details of unique key id, key pair value, and city code. Gives the\nresponse of seller on record details.\n\n\u00a9 ResponseSellerOnRecord\n\n4 uniqueKeyld: String\n4 keyPair. ResponseKeyPair\nA cityCode: List<String>\n\ne ResponseSellerOnRecord(obj: ApiEntityMasterProjection)\n\u00a9 getUniqueKeyld(): String\n\ne getKeyPair(): ResponsekKeyPair\n\n\u00a9 getCityCode(): List<String>\n\ne setUniqueKeyld(uniqueKeyld: String): void\n\ne setKeyPair(keyPair: ResponseKeyPair): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n10) ResponseText.java:\nThis class contains the details answer of response text.\n\n\u00a9 ResponseText\n4 answer: String\n\ne ResponseText(answer: String)\n\ne getAnswer(): String\n\ne setAnswer(answer: String): void\n@ equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n11) ResponsOldCityArrayEntityMaster java:\nThis class contains the details of city, here there is a relation with response old entity parent\nmaster and response old city array entity master.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 104 of 125\n\nOpen Network for Digital Co\n\n12) ResponsOldCityEntityMaster java:\n\n|@esponscntyParentastr\n\nI\n\n\u00a9 ResponsolacityarrayEntityMaster\n\nO city: String\n\ne ResponsOldCityArrayEntityMaster(master: ResponsEntityMaster, np: ResponseNetworkParticipant)\n\ne initValue(master: ResponsEntityMaster, np: ResponseNetworkParticipant): void\n\ne ResponsOldCityArrayEntityMaster(item: ResponsEntityMaster, np: ResponseNetworkParticipant, seller: ResponseSellerOnRecord)\n\u00a9 toStringCity(city: List<String>): String\n\n\u00a9 getCity(): String\n\ne setCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nThis class contains the details of city and there is relation between response old entity parent\nmaster and response old city entity master.\n\n\u00a9 responsoraent ParentMaster\n\n\u00a9 ResponsOldCityEntityMaster\nOciy: String\n\n ResponsOldCityEntityMaster(abj: ResponsOldEntityParentMaster, city. String)\n\u00a9 getCtty(): String\n\n\u00a9 setCity(city: String): void\n\n equals(o: Gbject): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\n\u00a9 hashCode(): int\n\n toString|): String\n\n13) ResponsOldEntityParentMaster.java:\n\nThis class contains the details of subscriber id, status information, unique key\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption\npublic key, created, updated, brid, and city details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 105 of 125\n\nOpen Network for Digital Commerc\n\n12) ResponsOldCityEntityMaster java:\n\n|@esponscntyParentaster\n\nI\n\n\u00a9 ResponsolacityarrayEntityMaster\n\no city: String\n\n\u00a9 ResponsOldCityArrayEntityMaster(master: ResponsEntityMaster, np: ResponseNetworkParticipant)\n\ne initValue(master: ResponsEntityMaster, np: ResponseNetworkParticipant): void\n\ne ResponsOldCityArrayEntityMaster(item: ResponsEntityMaster, np: ResponseNetworkParticipant, seller: ResponseSellerOnRecord)\n\u00a9 toStringCity(city: List<String>): String\n\n\u00a9 getCity(): String\n\ne setCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nThis class contains the details of city and there is relation between response old entity parent\nmaster and response old city entity master.\n\n\u00a9 ResponsOldEntityParentMaster\n\n\u00a9 ResponsOldCityEntityMaster\n\nO city: String\n\n\u00a9 ResponsOldCityEntityMaster(abj: ResponsOldEntityParentMaster, city. String)\n\u00a9 getCity(): String\n\n\u00a9 setCity(city: String): void\n\n\u00a9 equals(a: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\n\u00a9 hashCode(): int\n\n\u00a9 toString(): String\n\n13) ResponsOldEntityParentMaster.java:\n\nThis class contains the details of subscriber id, status information, unique key\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption\npublic key, created, updated, brid, and city details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 105 of 125\n\nn Network for Digital Commerce\n\n\u00a9 ResponsoldentityParentmaster\n\nsubscriberld: String\n\nstatus: String\n\nuklid: String\n\nsubscriberUrl: String\n\ncountry: String\n\ndomain: String\n\nvalidFrom: String\n\nvalidUntil: String\n\ntype: String\n\nsigningPublickey: String\nencrPublickey: String\n\ncreated: String\n\nupdated: String\n\nbrid: String\n\ncity: String\nResponsOldEntityParentMaster()\nResponsOldEntityParentMaster(obj: ApiEntityMasterProjection, type: String, city: String)\ntoStringCity(city: List<String>): String\ngetSubscriberld(): String\n\ngetStatus(): String\n\ngetUkid(): String\n\ngetSubscriberUr|(): String\ngetCountry(): String\n\ngetDomain(): String\n\ngetValidFrom(): String\ngetValidUntil(): String\n\ngetType(): String\ngetSigningPublickey(): String\ngetEncrPublickey(): String\ngetCreated(): String\n\ngetUpdated(): String\n\ngetBrid(): String\n\ngetCity(): String\nsetSubscriberld(subscriberld: String): void\nsetStatus(status: String): void\nsetUkld(ukld: String): void\nsetSubscriberUrl(subscriberUrl: String): void\nsetCountry(country: String): void\nsetDomain(domain: String): void\nsetValidFrom(validFrom: String): void\nsetValidUntil(validUntil: String): void\nsetType(type: String): void\nsetSigningPublickey(signingPublickey: String): void\nsetEncrPublickey(encrPublickey: String): void\nsetCreated(created: String): void\nsetUpdated(updated: String): void\nsetBrid(brid: String): void\n\nsetCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nC@oovovevevoevoeoenoeoeoeoevoeoeoeoeoeoeoe0000000000000/000000000000000\n\nF. Sequence diagrams\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 106 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ResponsoldentityParentmaster\n\nsubscriberld: String\nstatus: String\n\nuklid: String\nsubscriberUrl: String\ncountry: String\ndomain: String\nvalidFrom: String\nvalidUntil: String\ntype: String\nsigningPublickey: String\nencrPublickey: String\ncreated: String\nupdated: String\n\nbrid: String\n\ncity: String\n\nResponsOldEntityParentMaster()\nResponsOldEntityParentMaster(obj: ApiEntityMasterProjection, type: String, city: String)\ntoStringCity(city: List<String>): String\ngetSubscriberld(): String\n\ngetStatus(): String\n\ngetUkId(): String\n\ngetSubscriberUr|(): String\n\ngetCountry(): String\n\ngetDomain(): String\n\ngetValidFrom(): String\n\ngetValidUntil(): String\n\ngetType(): String\n\ngetSigningPublickey(): String\ngetEncrPublickey(): String\n\ngetCreated(): String\n\ngetUpdated(): String\n\ngetBrid(): String\n\ngetCity(): String\nsetSubscriberld(subscriberld: String): void\nsetStatus(status: String): void\n\nsetUkld(ukld: String): void\nsetSubscriberUrl(subscriberUrl: String): void\nsetCountry(country: String): void\nsetDomain(domain: String): void\nsetValidFrom(validFrom: String): void\nsetValidUntil(validUntil: String): void\nsetType(type: String): void\nsetSigningPublickey(signingPublickey: String): void\nsetEncrPublickey(encrPublickey: String): void\nsetCreated(created: String): void\nsetUpdated(updated: String): void\nsetBrid(brid: String): void\n\nsetCity(city: String): void\n\nequals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n@\u00a9000000000000000000000000000000000/000000000000000\n\nF. Sequence diagrams\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 106 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Controller\n\nController | Service |\n\nSending an Invalid Entity\n\n1g. 102 Please provide valid Entity: \"entity\nSending an Invalid Pan details\n\npa an Invalid Subscriber ID\n\n\u201c14 Pease provide valid Subscriber ID-\u201centity |\nseu an Invalid Pan Number\n\n~4--\n\n\u201csevtings an Invalid Network Parga\n108 Please provide valid Network Participant- \u201cnt\n\n| Sending an Invalid City code\n\n_ Sending an Invalid City code\n1g 500 Application failed to process the request- \u201centity |\n\nending an Invalid Country code\n\n1.133 Please provide a valid Country code- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 107 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Controller\n\n\u201cContraler | Senice\n\nrr T\n| Sending an Invalid Entity '\n1.102 Please provide valid Eritity: \"entity sunt\n' Sending an Invalid Pan details '\n1.103 Please provide valid Pan Detalls \"entity\n| Sending an Invalid Subscriber ID '\na\n\\e 104 Please provide valid Subscriber ID- \u201centity !\n\n\u00ab106 Please provide valid GST Number \"entity\n' Sending an Invalid Network Participant '\n37a\n1.108 Please provide valid Network Participant: \"entity |\n\n| Sending an Subscriber id already exists\n1.125 Please provide valid Subscriber identity\n\n| Sending an Invalid City code\n\n\u00ab\u00a300 Application failed to process the request. \"entity\n| Sending an Invalid Country code\n1<_133 Please provide a valid Country code- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 107 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Service\n\n1\n' '\n| Save Logs Response '\n' '\n'\n\n\u00ab10s response is saved \u2014 emtty a eeeeeeeeeeeeeee\n\n'\n| Save NApi Logs '\n\n! !\nwwe NADI logs SAVE. \"OMtity a csassccccssnseessesnnseessensseeneeson\n'\n' Save LogsResponse time\n!\n\nae Logs Response time is saved - \u201centity\n\n!\n\n' cahe Refresh\n\nit >\n'\n\n'\n\nae Cahe Refreshed- \"entity '\n\nsend validate entity\n\nentity validated- \"entity\n\nverify Authenticator header\n\n.Vetified Authenticator header-\"entity\nVerify Domain Value\nDomain Value Verified- \"entity\nverify unique key id\nunique key id is verified- \"entity\n\nvalidate city code\n\ncity code is verified- \"entity\n\nValidate Network Participant\n\nNetwork Participant is validated- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 108 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Service\n\n1\n\n' 1\n| Save Logs Response '\ner\n\n! '\n1\n\n\u00ab10s response is saved \u2014 emtty a eeeeeeeeeeeeeee\n\n'\n| Save NApi Logs '\n\n! !\nwwe NADI logs SAVE. \"OMtity a csassccccssnseessesnnseessensseeneeson\n'\n\n' Save LogsResponse time\n\n!\n\nae Logs Response time is saved - \u201centity\n\n!\n\n' cahe Refresh '\nit >\n'\n'\n\nae Cahe Refreshed- \"entity '\n\nsend validate entity\n\nentity validated- \"entity\n\nverify Authenticator header\n\nverified Authenticator header- \"entity\n\nVerify Domain Value\n\nDomain Value Verified- \"entity\n\nverify unique key id\nunique key id is verified- \"entity\n\nvalidate city code\n\ncity code is verified- \"entity\n\nValidate Network Participant\n\nNetwork Participant is validated- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 108 of 125\n\nOpen Network for Digital Commerce\n\n<\n| Validate No seller On Record ;\n\n\\\n\\\u201cg No seller on Record is validated- \"entity\n\ncere seacuattesvetantescantasstesnsvsssencnrsnstenrsseed ceseaseaceaceeseaseaceacease |\n' Validate No Network participant\n\\< No Network Participants validated -\"entity\nGet operational number\n\u201cOperational number is verified: \"entity a caasecccseeeens !\nValidate Seller On Record >\n\u201cSeller on record is Validated: \"entity a csssssssesesecesssssees !\nValidate schema >\n\u00a2 sohema is verified: \"emtity oc cccssesnnesseneee !\n\n' Valid OCSP '\n$A\n4 \"\niat OCSP is validated- \"entity '\n\neelese anes neetsnserscsscetneencenuedecueceesceeeeeeeseeesseneeeesseeeseeeeeeessees 4\nValidate data entity\nLe. data entity is validated: \"entity\nConvert Body to entity master ,!\n\u201cConverted o entity master \u201centity a cscsscsosssssseeeeeeeeed !\nenter Response text get encrypt text >\n\n| give initRkey\na -?\u00bb SS\n\nverified initRkey- \"entity\n\ncheck Authorization\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 109 of 125\n\nOpen Network for Digital Commerce\n\n<\n| Validate No seller On Record ;\n\n\\\n\\\u201cg No seller on Record is validated- \"entity\n\ncere seacuattesvetantescantasstesnsvsssencnrsnstenrsseed ceseaseaceaceeseaseaceacease |\n' Validate No Network participant\n\\< No Network Participants validated -\"entity\nGet operational number\n\u201cOperational Sumber is verified: \"entity a cassscccccecnnns !\nValidate Seller On Record >\n\u201cSeller on record is Validated: \"entity a csssssssesesecesssssees !\nValidate schema >\n\u00a2 sohema is verified: \"emtity oc cccssesnnesseneee !\n\n' Valid OCSP '\n>\n4 \"\niat OCSP is validated- \"entity '\n\nValidate data entity\nLe. data entity is validated: \"entity\nConvert Body to entity master\n\u201cConverted to entity master: \"entity, sssssssssseseeeseeeenee !\nenter Response text get encrypt text >\n\n| give initRkey\na -?\u00bb SS\n\nverified initRkey- \"entity\n\ncheck Authorization\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 109 of 125\n\nONG C\n\nOpen Ne\n\nG. Database Design\nThe registry component describes the following data models:\n\n- domain_master: This data model likely stores information about the various domains\nthat are supported by the registry. A domain could represent a specific business\ncontext, such as a particular industry or market segment, and the domain_master data\nmodel would store details about each domain, such as its name and any relevant\nmetadata.\n\n-  entity_master: This data model likely stores information about the various entities that\nare registered with the registry. An entity could represent a person, company, or other\ntype of organisation, and the entity_master data model would store details about each\nentity, such as its name, address, and contact information.\n\n- network_participant_master: This data model likely stores information about the\nvarious network participants that are registered with the registry. A network participant\ncould represent a user, device, or other type of entity that is participating in the network,\nand the network_participant_master data model would store details about each\nparticipant, such as its domain, status, and subscriber.\n\n-  registry_keys: This data model likely stores information about the various keys that are\nused to secure communications between the registry and other components. These\nkeys could include public and private keys, as well as any other types of keys that are\nused to encrypt or decrypt data.\n\n-  seller_on_record_master: This data model likely stores information about the various\nsellers that are registered with the registry. A seller could represent an individual or\ncompany that is offering products or services for sale, and_ the\nseller_on_record_master data model would store details about each seller, such as\nunique id, subscriber id and keys.\n\nH. ER Diagram\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 110 of 125\n\nOpen Ne\n\nG. Database Design\nThe registry component describes the following data models:\n\n- domain_master: This data model likely stores information about the various domains\nthat are supported by the registry. A domain could represent a specific business\ncontext, such as a particular industry or market segment, and the domain_master data\nmodel would store details about each domain, such as its name and any relevant\nmetadata.\n\n-  entity_master: This data model likely stores information about the various entities that\nare registered with the registry. An entity could represent a person, company, or other\ntype of organisation, and the entity_master data model would store details about each\nentity, such as its name, address, and contact information.\n\n- network_participant_master: This data model likely stores information about the\nvarious network participants that are registered with the registry. A network participant\ncould represent a user, device, or other type of entity that is participating in the network,\nand the network_participant_master data model would store details about each\nparticipant, such as its domain, status, and subscriber.\n\n-  registry_keys: This data model likely stores information about the various keys that are\nused to secure communications between the registry and other components. These\nkeys could include public and private keys, as well as any other types of keys that are\nused to encrypt or decrypt data.\n\n-  seller_on_record_master: This data model likely stores information about the various\nsellers that are registered with the registry. A seller could represent an individual or\ncompany that is offering products or services for sale, and_ the\nseller_on_record_master data model would store details about each seller, such as\nunique id, subscriber id and keys.\n\nH. ER Diagram\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 110 of 125\n\nONG C Sa\n\nOpen Network for Digital Commerce\n\nnetwork_participant_master ntity_master\nsoller_on_record_master\nid character ia character\nid character\n\n1\nentity_master_id character =a spi_version integer *\nentity, master_id character\napi_version integer dby character\napi_version integer\nd_by character dion timestamp\naby character\ndon timestamp cxt_tm_stmp umestamp\ndon timestamp\nort_tm_stmp timestamp source_ip character\ncxt_tm_simp timestamp\nsoutce_ip character updated_by character\nsource_ip character\nupdated_by character updated_on timestamp\nupdated_by character\nupdated_on timestamp updated_source_ip character\nupdated_on umestamp\nupdated_source_ip character version integer\nupdated_souroe_ip character\nversion integer address_cf_authorised_signatory character\nversion integer\ncity_code json business_address character\ncity_code jsonb\ndomain character callback_urt character\nencryption _public_key character\nmsn boolean city_code jsonb\nsigning_public_key character\nstatus character country character\nstatus character\n\u2018subscriber_id character date_of_incorporation date\nsubscriber_id character\n\u2018subsoniber_urt character effective_date_ot_registration timestamp\nunique_hay_id character\ntype character email_id character\nvalid_from fimestamp\nencryption_public_key character\nvalid_unfi fimestamp\npee soca al\nnetwork_participant_master_i\u00a2 character\nid character tegal_entty_name character\n@pi_varsion integer mobile_no. character\nd_by character name_as_per_pan character np_apl_logs\ndon timestamp name_of_authonsed_signatory character be chesecter\noti ae fimeataenp pan_number character So integer\nsource _ip character signing: public_key pe by character\nupdated _by character status character LE are\nupdated_on timestamp eubectber:32 eae ert_tm_stmp timestamp\nupdated_source_ip character unique_key_id character mate a \u2014-_\nversion integer valid_from timestamp tipdatedt_by =\nallow boolean valid _until timestamp hysgcseoa perce:\nupdated_source_ip character\nregistry_keys version integer\nid character\ngraph_analysis jsn_rqst jon\na api_version integer jsn_repns jsonb\nharacter\nkey character aa oe Les ne ed iin ad\ndon timestamp imeanaiees sere\nupdated_date timestamp pemyrncar ai rasta\ncxt_tm_strm umestam\npanne, Jeon aemiadl e typ character\nsource_ip character\nupdated_by character\nupdated_on timestamp\nupdated_source_ip character\nversion intoger\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 111 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\ncharacter\n> {_version Integer\naby character\ndion timestamp\ncat_tm_stmp timestamp\nsource_ip character\ncrt_tm_simp timestamp\nupdated_by character\nsource_ip character\ntt updated_by character\ncharacter\nupdated_source_ip Pa\ncharacter\nUpdated_source_ip version Integer pitas ae\nversion integer address_ot_authorised_signatory character\nversion integer\ncity_code json\u2019: business address character\ncity_code jsonb\ndomain character callback _url character\n\u2018encryption _public_key character\nboole: sede b\nmsn an city. \u00a2 json! ae abiae\nstatus character country character\nstatus character\n\u2018subsoriber_id character date_of_incorporation date\nsubscriber_id character\nsubscriber_urt character effective_date_ot_ragisiration timestamp\nunique_key_id character\ntype character \u2018email_id character\nvalid_from timestamp\nke charactor\nencryption_public_key misinn\neats pa =\nnetwork _participant_master_id character\nid character legal_entity_name character\napi_varsion integer mobile_na character\naby character Sass charactor\ndon timestamp name_of_authorised_signatory character\nShiau stop Sno pan_number character\nsource_ip character signing_public_key character ity character\nupdated_by character status character don betes\nupdated_on timestamp subscriber_id character bre soar heainoaarn\ntupdated_source_ip character unique_key_id character source_ip character\nversion integer valid_from umestamp hiarazst cgseaieine\nalow Seni updated_on timestamp:\nupdated_source_ip character\nversion integer\nid character pied jonb\napl_version mteger pee pas\ndby character fae joie\ndon Seer: subscriber_id character\ncat_tm_simp timestamp typ character\nsource_ip character\nupdated_by character\nupdated_on timestamp\nupdated_source_ip character\nversion integer\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 111 of 125\n\nOpen Net\n\nI. Registration Scenarios\n\nNetwork participants can register as Buyer App, Seller App or both.\n\nTo register as either, almost same steps are to be followed as shown in the next section barring\nthe following differences:\n\na. Register as Buyer App\n- ops_no=1\n- \"type \": \"buyerApp\u201d,\u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App alone.\n\nb. Register as Seller (Non-MSN)\n- ops _no=2\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a seller App alone that\n\nhas their own inventory.\n\nc. Register as Multi-Seller Node (MSN) Seller\n- ops_no=3\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a seller App that has\nmultiple merchants on boarded to their application.\n\nd. Register as Buyer and Non-MSN Seller\n- ops _no=4\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App and a seller\n\napp that has their own inventory.\n\ne. Register as Buyer and MSN Seller\n- ops _no=5\n- \"type\": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has multiple merchants on boarded to their application.\n\nJ. User Flow to create subscribe request (Aud: Network Participant)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 112 of 125\n\nOpen Net\n\nI. Registration Scenarios\n\nNetwork participants can register as Buyer App, Seller App or both.\n\nTo register as either, almost same steps are to be followed as shown in the next section barring\nthe following differences:\n\na. Register as Buyer App\n- ops_no=1\n- \"type\": \"buyerApp\u201d,\u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App alone.\n\nb. Register as Seller (Non-MSN)\n- ops _no=2\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a seller App alone that\n\nhas their own inventory.\n\nc. Register as Multi-Seller Node (MSN) Seller\n- ops_no=3\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a seller App that has\nmultiple merchants on boarded to their application.\n\nd. Register as Buyer and Non-MSN Seller\n- ops _no=4\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App and a seller\n\napp that has their own inventory.\n\ne. Register as Buyer and MSN Seller\n- ops no=5\n- \"type\": \"buyerApp\u2019\u201d , \u201cmsn\u201d: false\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has multiple merchants on boarded to their application.\n\nJ. User Flow to create subscribe request (Aud: Network Participant)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 112 of 125\n\nNetwork for Digital Commerce\n\nStart\n\nPurchase valid\ndomain name\n\nMap domain with\nSSL. TI is\nsubscriber id\n\nCreate signed\npublic and private\nkeys\n\nGet subscriber _id\nwhitelisted from ONDC\n(manual process)\n\nCreate enc_dec\n\npublic private keys request_id using a\n\nUUID generator\n\nCreate ukid or\nCreate html page\n\nPre-requisites\n\nPlace created html at\nsubscriber_id. this is\nthe call back url.\n\nGenerate signature\nsigned_unique_req_id)\n\nAdd created signature\nto call back html\n\nDevelop and host\n/on_subscribe\n\nCongfigure\nJion_subscribe to use\nenc_dec_private key\nand ONDC public key\n\nHit the /subscribe\napi, pass required\nparameters\n\nReceive encrypted\nchallenge_string\nfrom registry\n\nDecrypt using\nlenc_dec private key\n\n\u2018Send back\n\nldecrypted challenge|\n\nstring as reponse to\nJon_subscribe\n\nReceive subscription\n\nacknowledgement\nfrom registry\n\nEnd\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 113 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nStart\n\nPurchase valid\ndomain name\n\nPurchase SSL\ncettificate\n\nMap domain with\nSSL. This is\nsubscriber id\n\nGet subscriber _id Create ukid or Create signed\nwhitelisted from ONDC request_id using a public and private\n(manual process) UUID generator keys\n\nCreate enc_dec\npublic private keys\n\nPlace created html at .\n\u2018subscriber_id. this is Generate signature\nthe call Back url. signed_unique_req_id)\n\nAdd created signature\nto call back htm!\n\nCongfigure\nJion_subscribe to use\nenc_dec_private key\nand ONDC public key\n\nHit the /subscribe\napi, pass required\n\nReceive encrypted\nchallenge_string\nfrom re\n\nDecrypt using\nJenc_dec private key|\n\nback\n\nldecrypted challenge|\n\nstring as reponse to\nJon_subscribe\n\nEnd\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 113 of 125\n\nSteps to be followed by Network Participant for getting onboarded on ONDC\n\n1. Gather all pre-requisites\na. Create Subscriber ID\ni. | Purchase a domain name \u2014 Eg. - ondc.example.com.\ni. Purchase SSL certificate\nii. Map it with purchased domain. Eg. \u2014 https://ondc.example.com\niii. subscriber_Id = SSL + Domain Name\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual\nprocess.\nv. Configure your system with the domain name and SSL. All\ncommunication with the ONDC network will happen through this domain.\nb. Generate Signing key pair\ni. | Method name: generateSigningKeyPair()\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/signature/key\nVv Pre-prod - https://preprod.registry.ondc.org/generate-sign-keys or\n\nv. Input (body) with example: No input needed\nvi. xpected output with example: signing_public key and\nsigning_private_key\n\n\"publicKey\": \"SSh8gLhvW1AWP8k5spsGGSWXIIOpAL6Z78bHpDF\n1SbE=\",\n\n\"privateKey\": \"vIk+FxxD5n8LcGOmgR6qL0SIn+Qo/AUQdZGzpeoU\nUno=\"\n\n}\n\nc. Generate request_Id or unique key id (ukld)\n\ni. | Method name: NA\n\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing. It should be unique for each network\nparticipant.\n\niii. | URL - https://www.uuidgenerator.net/\n\niv. Input (body) with example \u2014 No input needed\n\nv. Expected output with example - 64963e85-47c4-41b1-94ab-\n6f3acc490f4d\n\nd. Create an html page. Eg - ondc-site-verification.html\n\ne. Generate encryption-decryption key pair\ni. Method name: generateEncDecKey()\nii. | Description: Generate encryption decryption key pair using x25519 key\nexchange algorithm.\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/encrypt/decrypt/key\nVv Preprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key\n\nv. Input (body) with example: No input needed\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 114 of 125\n\nSteps to be followed by Network Participant for getting onboarded on ONDC\n\n1. Gather all pre-requisites\na. Create Subscriber ID\ni. | Purchase a domain name \u2014 Eg. - ondc.example.com.\ni. Purchase SSL certificate\nii. Map it with purchased domain. Eg. \u2014 https://ondc.example.com\niii. subscriber_Id = SSL + Domain Name\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual\nprocess.\nv. Configure your system with the domain name and SSL. All\ncommunication with the ONDC network will happen through this domain.\nb. Generate Signing key pair\ni. | Method name: generateSigningKeyPair()\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/signature/key\nVv Pre-prod - https://preprod.registry.ondc.org/generate-sign-keys or\n\nv. Input (body) with example: No input needed\nvi. xpected output with example: signing_public key and\nsigning_private_key\n\n\"publicKey\": \"SSh8gLhvW1AWP8k5spsGGSWXIIOpAL6Z78bHpDF\n1SbE=\",\n\n\"privateKey\": \"vIk+FxxD5n8LcGOmgR6qLOSIn+Qo/AUQdZGzpeoU\nUn0d=\"\n\n}\n\nc. Generate request_Id or unique key id (ukld)\n\ni. | Method name: NA\n\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing. It should be unique for each network\nparticipant.\n\niii. | URL - https://www.uuidgenerator.net/\n\niv. Input (body) with example \u2014 No input needed\n\nv. Expected output with example - 64963e85-47c4-41b1-94ab-\n6f3acc490f4d\n\nd. Create an html page. Eg - ondc-site-verification.html\n\ne. Generate encryption-decryption key pair\ni. Method name: generateEncDecKey()\nii. | Description: Generate encryption decryption key pair using x25519 key\nexchange algorithm.\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/encrypt/decrypt/key\nVv Preprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key\n\nv. Input (body) with example: No input needed\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 114 of 125\n\nvi. Expected output with example (enc_dec_private_key and\nenc_dec_public_key)\n\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dxX2amsNb1zyq\nBiLLT+e2+mzJ2QHO=\",\n\n\"privateKey\": \"MFECAQEwWBQYDK2VuBCIEINhPuAXdILHJvfhngONl0alQ8\nlJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dxX2amsNb1zyqBiLLT+e2\n+mzJ2QHO0=\"\n\n}\n\nf. Set-up for key verification via HTML\ni. Place the created HTML at subscriber_Id. The new url to access the\nHTML will be in the format: https//<subscriber_Id>/<html page title>.\nRegistry shall check existence of this url in later stages. And will be\nreferred as callback_url.\nEg. https://ondc.example.com/ ondc-site-verification.html\n\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate\nwhat is termed as signed_unique_req_id or signature.\ni. Method name: sign(byte[] privateKey, byte[] message)\nii. | Description: This method generates signature using given ED25519 32\nbyte/ 256 bits Private key.\niii. | API: post/signature/generate\n\niv. URL:\nVv Generic - {{pilot_url}}/crypto/signature/generate\nVv Preprod -\n\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\n\ngq\nv. Input with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"CcDWjNpLHYFFF8zFXBQoBlirmsXezndSj1JZRzZSZZoKB\n4=\"\n}\nvi. | Expected output with example\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP\nX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\nh. Add created signature (5.2.2, signed_unique_req_id) to callback html (5.2.1).\nEg:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 115 of 125\n\nvi. Expected output with example (enc_dec_private_key and\nenc_dec_public_key)\n\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dxX2amsNb1zyq\nBiLLT+e2+mzJ2QHO=\",\n\n\"privateKey\": \"MFECAQEwWBQYDK2VuBCIEINhPuAXxXdILHJvfhngONl0alQ8\nlJ1 pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2\n+mzJ2QHO0=\"\n\n}\n\nf. Set-up for key verification via HTML\ni. Place the created HTML at subscriber_Id. The new url to access the\nHTML will be in the format: https//<subscriber_Id>/<html page title>.\nRegistry shall check existence of this url in later stages. And will be\nreferred as callback_url.\nEg. https://ondc.example.com/ ondc-site-verification.html\n\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate\nwhat is termed as signed_unique_req_id or signature.\ni. Method name: sign(byte[] privateKey, byte[] message)\nii. | Description: This method generates signature using given ED25519 32\nbyte/ 256 bits Private key.\niii. | API: post/signature/generate\n\niv. URL:\nVv Generic - {{pilot_url}}/crypto/signature/generate\nVv Preprod -\n\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\n\ng\nv. Input with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"CcDWjNpLHYFFF8zFXBQoBirmsXezndSj1JZRZSZZoKB\n4=\"\n}\nvi. | Expected output with example\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+10LUInOkk43g/SpzVAP\nX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\nh. Add created signature (5.2.2, signed_unique_req_id) to callback html (5.2.1).\nEg:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 115 of 125\n\nOpen Net\n\n<!--Contents of ondc-site-verification.html. -->\n<!--Please replace SIGNED UNIQUE REO ID with actual value-->\n<html>\n\n<head>\n\n<metaname='ondc-site-verification'\ncontent='SIGNED UNIQUE REQ ID' />\n</head>\nondc-site-verification.html\n<body>\nONDC Site Verification Page\n</body>\n</html>\n\ni. Configure /on_subscribe implementation to decrypt encrypted\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi).\nONDC registry public key will available publically.\n\ni. Click here for reference link\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[]\nprivateKey, byte[] publicKey (to be confirmed)\niii. | API name: crypto/decrypt/text\niv. URL: {{pilot_url}}/crypto/decrypt/text\nv. Input:\n\n\"value\": \"CNK5xU6tKn2VJ47AKL6cQQCOgnbpnByqvEXboCJPnbA=\",\n\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iIMHx0Zo\ndBnOP9UTHcOkeczDmeOVkKU=\",\n\n\"Subscriber_PrivateKey\": \"MFECAQEwWBQYDK2VuBCIEIAj5U1DVAX5eGI\n\nAjllcj mZWgPQIlg/T1Q6A3pZOAIWp6gSEAJGnKRTAEcSvpgDOmw9gBHv94E\n3w8sTtmPlszuXIEAFO=\"\n\n}\nvi. | Expected Output: decrypted challenge_string\n\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback\nhtml (5.2.3).\n\nSend decrypted \u2018challenge_string\u2019 as a response to /on_subscribe.\n\nj. Create /subscribe request\nPlease refer to Github (ONDC_ official) for more information.\nMethod: Following items must be kept ready\n\n- ops_no: based on which registration / amendment scenario is applicable, pass\n1,2,3,4,5 as ops_no parameter (refer 3.5)\n\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile\nNo., Country, Subscriber ID, Signing and Enc-Dec Keys (all parameters are either\nexistence proofs or generated pre-requisites)\n\n- Network Participant Details (Domain Name, Subscriber Type)\n\nURL: {{pilot_url}}/ondc/subscribe\nSample Input with example:\n\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 116 of 125\n\nOpen Net\n\n<!--Contents of ondc-site-verification.html. -->\n<!--Please replace SIGNED UNIQUE REO ID with actual value-->\n<html>\n\n<head>\n\n<metaname='ondc-site-verification'\ncontent='SIGNED UNIQUE REQ ID' />\n</head>\nondc-site-verification.html\n<body>\nONDC Site Verification Page\n</body>\n</html>\n\ni. Configure /on_subscribe implementation to decrypt encrypted\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi).\nONDC registry public key will available publically.\n\ni. Click here for reference link\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[]\nprivateKey, byte[] publicKey (to be confirmed)\niii. | API name: crypto/decrypt/text\niv. URL: {{pilot_url}}/crypto/decrypt/text\nv. Input:\n\n\"value\": \"CNK5xU6tKn2VJ47AKL6cQQCOgnbpnByqvEXboCJPnbA=\",\n\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iIMHx0Zo\ndBn0OP9UTHcOkeczDmeOVkKU=\",\n\n\"Subscriber_PrivateKey\": \"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI\n\nAjllcj mZWgPQIlg/T1Q6A3pZOAIWp6gSEAJGnKRTAEcSvpgDOmw9gBHv94E\n3w8sTtmPlszuXIEAFO=\"\n\n}\nvi. | Expected Output: decrypted challenge_string\n\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback\nhtml (5.2.3).\n\nSend decrypted \u2018challenge_string\u2019 as a response to /on_subscribe.\n\nj. Create /subscribe request\nPlease refer to Github (ONDC_ official) for more information.\nMethod: Following items must be kept ready\n\nops_no: based on which registration / amendment scenario is applicable, pass\n\n1,2,3,4,5 as ops_no parameter (refer 3.5)\n\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile\nNo., Country, Subscriber ID, Signing and Enc-Dec Keys (all parameters are either\nexistence proofs or generated pre-requisites)\n\n- Network Participant Details (Domain Name, Subscriber Type)\n\nURL: {{pilot_url}}/ondc/subscribe\nSample Input with example:\n\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 116 of 125\n\nOpen Network for Digital Commerce\n\n\"message\": {\n\"entity\": {\n\"gst\": {\n\"legal_entity_name\": \"Protean E-Gov\",\n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati\n\nBapat Marg, Lower Parel, Mumbai 013.\",\n\n\"city_code\": [\n\"std:080\"\n1\n\"gst_no\": \"27AAECF8760H1ZC\"\n},\n\"pan\": {\n\"name_as_per_pan\": \"Protean E-Gov\",\n\n\"pan_no\":\"AAECF8760H\",\n\"date_of_incorporation\": \"05/01/2022\"\n\n}\n\"callback_url\": \"/test\",\n\"name_of_authorised_signatory\": \"NSDL\",\n\"address_of_authorised Signatory\": \"Lower Parel,\",\n\n\"email_id\": \"contact@nsdl.co.in\",\n\n\"country\": \"IND\",\n\"mobile_no\": \"8734598345\",\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",\n\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\n\ncy5Zzul0inWWf5fGZBs=\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.1012Z\"\n\n}\n}\n// change type and msn input depending on registration scenario\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\n\"type\": \"buyerApp\",\n\n\"msn\":false,\n\n\"city_code\": [\n\"std:080\"\n\niF\n\n// change input depending on registration scenario; the second network participant block only\nused in registration scenarios 4 and 5.\n\"network_participant\u201d: [\n\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 117 of 125\n\nOpen Network for Digital Commerce\n\n}\n}\n\"message\": {\n\"entity\": {\n\"gst\": {\n\"legal_entity_name\": \"Protean E-Gov\",\n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati\nBapat Marg, Lower Parel, Mumbai 013.\",\n\"city_code\": [\n\"std:080\"\n]\n\n\"gst_no'' \"27AAECF8760H1ZC\"\n}\n\"pan\": {\n\"name_as_per_pan\": \"Protean E-Gov\",\n\"pan_no\":\"AAECF8760H\",\n\n\"date_of_incorporation\": \"05/01/2022\"\n\n\"callback_url\": \"/test\",\n\n\"name_of_authorised_signatory\": \"NSDL\",\n\n\"address_of_authorised Signatory\": \"Lower Parel,\",\n\n\"email_id\": \"contact@nsdl.co.in\",\n\n\"country\": \"IND\",\n\n\"mobile_no\": \"8734598345\",\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",\n\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\n\ncy5Zzul0inWWf5fGZBs=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\n},\n\n// change type and msn input depending on registration scenario\n\"network_participant\u201d: [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\":false,\n\"city_code\": [\n\"std:080\"\n1\n\n// change input depending on registration scenario; the second network participant block only\nused in registration scenarios 4 and 5.\n\"network_participant\u201d: [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 117 of 125\n\nOpen Network for Digital Commerce\n\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n\n]\n\nseller_on_record\": [\n\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiT obEI66k=\n\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\nAmYqU6Aak/XiOFKDFAnUt0gRhM=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\ncity_code\": [\n\"std:080\"\n]\n\n}\n\n1,\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\n\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for\nlist of possible errors and their resolutions in the document attached.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 118 of 125\n\nOpen Network for Digital Commerce\n\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n\n]\n\nseller_on_record\": [\n\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiT obEI66k=\n\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\nA4mY qU6Aak/XiOFKDFAnUt0gRhM=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\ncity_code\": [\n\"std:080\"\n]\n\n}\n\n1,\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\n\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for\nlist of possible errors and their resolutions in the document attached.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 118 of 125\n\nOpen Network for Digital Commerce\n\nK. User Flow to create On_subscribe request (Aud: Network Participant)\n\nNetwork .\n\n\u2018subscribe (1)\n\ndomain validation\n\nSSL (OCSP) validation\nsigned keys verification\n\nencrypted challenge_string\n\nfon_subscribe (2)\n(with encrypted challenge_string)\n\nreturn decrypted challenge_string\ncompare existing challenge_string\nwith decrypted challenge_string\n\nequal / not equal\nack / nack\n\n8.1 Receive /subscribe request\n8.2 Verify OCSP and domain\n8.2.1 API: {{pilot_url}}/crypto/ocsp/verify\n8.2.2 Description: Deduplication check?\n8.2.3.Input: <subscriber_id>; Eg - ondc.example.com\n8.2.4. Expected output: Valid / Not Valid\n\n8.3 Verify signed keys / signature\n8.3.1 API: {{pilot_url}}/crypto/signature/verify\n8.3.2 Input data with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\n\"clientPublicKey\": \"KOel1kYfJI222a8Zja9jOsU68ZU+zqT6/AiTobEI66k=\",\n\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\n8.3.3 Output: Valid / Not Valid (Error code, error message (eg - Signature is not valid header\nformat.))\n\n8.4 Create on_subscribe request\n8.4.1 Click here to access reference link.\n\n8.4.2 Generate challenge_string.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 119 of 125\n\nOpen Network for Digital Commerce\n\nK. User Flow to create On_subscribe request (Aud: Network Participant)\n\nNetwork 7\n\n\u2018subscribe (1)\n\ndomain validation\n\nSSL (OCSP) validation\nsigned keys verification\n\nencrypted challenge_string\n\nfon_subscribe (2)\n(with encrypted challenge_string)\n\nreturn decrypted challenge_string\ncompare existing challenge_string\nwith decrypted challenge_string\n\nequal / not equal\nack / nack\n\n8.1 Receive /subscribe request\n8.2 Verify OCSP and domain\n8.2.1 API: {{pilot_url}}/crypto/ocsp/verify\n8.2.2 Description: Deduplication check?\n8.2.3.Input: <subscriber_id>; Eg - ondc.example.com\n8.2.4. Expected output: Valid / Not Valid\n\n8.3 Verify signed keys / signature\n8.3.1 API: {{pilot_url}}/crypto/signature/verify\n8.3.2 Input data with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\n\"clientPublicKey\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\n8.3.3 Output: Valid / Not Valid (Error code, error message (eg - Signature is not valid header\nformat.))\n\n8.4 Create on_subscribe request\n8.4.1 Click here to access reference link.\n\n8.4.2 Generate challenge_string.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 119 of 125\n\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key\nreceived from /subscribe to generate encrypted_challenge_string.\ni. API: {{pilot_url}}/crypto/encrypt/text\nii. Input with example:\n\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFIS5oUrH/33bA/KulLErqGstIgSEA+XpYc09S8X8mkgNTIf6nIPRbL46T CwEX!\n\nAlkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkirkyxT qyssjt\u00a5J3KRN\n\nD5FnzKSMDrwiK3kC8=\"\n}\n\niii. Expected output: encrypted_challenge_string\n\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.\n\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg.\nhttps://ondc.example.com/ ondc-site-verification.html/on_subscribe\nV. Input:\n\n\"subscriber_id\": \"abc.com\",\n\"challenge\": \"encrypted_challenge_string\"\n\n}\nvi. Expected output:\nReceive decrypted_challenge_string from the subscriber.\n\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If\nboth are equal return ACK, else return NACK with error message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 120 of 125\n\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key\nreceived from /subscribe to generate encrypted_challenge_string.\ni. API: {{pilot_url}}/crypto/encrypt/text\nii. Input with example:\n\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwWBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFIS50UrH/33bA/KulLErqGstIgSEA+XpYc09S8X8mkgNTIf6nIPRbL46T CwEXI\n\nAlkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkirkyxT qyssjtY J3KRN\n\nD5FnzKSMDrwiK3kC8=\"\n}\n\niii. Expected output: encrypted_challenge_string\n\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.\n\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg.\nhttps://ondc.example.com/ ondc-site-verification.html/on_subscribe\nVv. Input:\n\n\"subscriber_id\": \"abc.com\",\n\"challenge\": \"encrypted_challenge_string\"\n\nvi. Expected output:\nReceive decrypted_challenge_string from the subscriber.\n\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If\nboth are equal return ACK, else return NACK with error message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 120 of 125\n\nL. Lookup and Viookup APIs\n\nThese APIs are used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases in which there APIs are used\n\ne By gateways and/or adapters for search details about network participants\n\ne By network participants to querying existing details\n\n/vlookup is the more advanced and secure version of /lookup.\n/lookup is still in use for backward compatibility with older network participants.\n1. LOOKUP\ne Input parameters: only search parameters are sent as inputs. Minimum 2 search\nparameters are mandatory\no Input parameters:\n\n= country\n\u00ab= domain\n\u00abtype\n\u00abcity\n\u00ab  subscriber_id\no Example:\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\"\n\no Output Response for the API is a list of network participants satisfying the\n\nsearch parameters passed via input.\ne Output Parameters:\n\no Output Response of /lookup will show all details sequentially as a renormalized\nflat list. For example, if the response contains 2 network participants, one is a\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response\nis 4 blocks of details, 2 of network participants and 2 of sellers on record.\n\no Example:\n\n[\n{\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber1\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"buyerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 121 of 125\n\nL. Lookup and Viookup APIs\n\nThese APIs are used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases in which there APIs are used\n\ne By gateways and/or adapters for search details about network participants\n\ne By network participants to querying existing details\n\n/vlookup is the more advanced and secure version of /lookup.\n/lookup is still in use for backward compatibility with older network participants.\n1. LOOKUP\ne Input parameters: only search parameters are sent as inputs. Minimum 2 search\nparameters are mandatory\no Input parameters:\n\n= country\n\u00ab= domain\n\u00abtype\n\u00abcity\n\u00ab  subscriber_id\no Example:\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\"\n\no Output Response for the API is a list of network participants satisfying the\n\nsearch parameters passed via input.\ne Output Parameters:\n\no Output Response of /lookup will show all details sequentially as a renormalized\nflat list. For example, if the response contains 2 network participants, one is a\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response\nis 4 blocks of details, 2 of network participants and 2 of sellers on record.\n\no Example:\n\n[\n{\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber1\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"buyerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 121 of 125\n\nONG C\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 122 of 125\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 122 of 125\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"city\": \"std:080\"\n}\n]\n\n2. WVLOOKUP [To be deprecated]\ne Input parameters:\no Along with search parameters as inputs, few input parameters are also sent as\ninputs.\no Signature is sent as one of the input parameters makes it highly secured as\ncompared to /lookup.\no Minimum 2 search parameters are mandatory.\no API Input Parameters:\n\"  sender_subscriber_id\n\"  request_id\n\u00abtimestamp\n*  search_parameters ( min 2 parameters):\n\ne country\ne domain\ne type\n\ne city\n\ne  subscriber_id\n\u00absignature key\n\"Example:\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option5\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+tEwOa77fJcqSxuj4+JGr1 150MtlVKdyG8febGjivv\nOpZZUAXOtLAgapmDIX+xQhIi3RS2qpCX3s6mS3u0Cw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n\ne Output Parameters:\n\no Output Response for the API is a list of network participants satisfying the search\nparameters passed via input.\n\no Output Response of /lookup will show all details in a hierarchical manner. For\nexample, if the response contains 2 network participants, one is a buyer and other\nis a MSN seller with 2 sellers on record, then /vlookup response will show the\ndetails of two sellers on record as a subset of the MSN seller.\n\no Example:\n\n[\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 123 of 125\n\nONC C\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"city\": \"std:080\"\n}\n]\n\n2. WVLOOKUP [To be deprecated]\ne Input parameters:\no Along with search parameters as inputs, few input parameters are also sent as\ninputs.\no Signature is sent as one of the input parameters makes it highly secured as\ncompared to /lookup.\no Minimum 2 search parameters are mandatory.\no API Input Parameters:\n\"  sender_subscriber_id\n\"  request_id\n\u00abtimestamp\n*  search_parameters ( min 2 parameters):\n\ne country\ne domain\ne type\n\ne city\n\ne  subscriber_id\n\u00absignature key\n\"Example:\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/optionS\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+EwOa77fJcqSxuj4+JGr1150MtlVKdyG8febGjivv\nOpZZUAXOtLAgapmDIX+xQhI3RS2qpCX3s6mS3u0Cw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n\ne Output Parameters:\n\no Output Response for the API is a list of network participants satisfying the search\nparameters passed via input.\n\no Output Response of /lookup will show all details in a hierarchical manner. For\nexample, if the response contains 2 network participants, one is a buyer and other\nis a MSN seller with 2 sellers on record, then /vlookup response will show the\ndetails of two sellers on record as a subset of the MSN seller.\n\no Example:\n\n[\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 123 of 125\n\n\"city\": [\n\"std:080\"\n\n1\n\n\"country\": \"IND\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/ac7\n\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": []\n\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": [\n\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\u00e9LH\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.1012\"\n},\n\"city_code\": [\n\"std:080\"\n]\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"key_pair\": {\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 124 of 125\n\n\"city\": [\n\"std:080\"\n\n1\n\n\"country\": \"IND\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/ac7\n\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": []\n\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": [\n\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\u00e9LH\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.1012\"\n},\n\"city_code\": [\n\"std:080\"\n]\n},\n\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\n\"key_pair\": {\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68ZU+zqT6/AiTobEI66k=\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 124 of 125\n\nONG C\n\nOpen Network for Digital Commerce\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr\u00e96LH\n\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.1012\",\n\"valid_until\": \"2023-07-20T 11:57:54.101Z\"\n\n},\n\n\"city_code\": [\n\"std:080\"\n\n]\n\n}\n]\n}\n]\n}\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 125 of 125\n\nOpen Network for Digital Commerce\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr\u00e96LH\n\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n\n}\n\n\"city_code\": [\n\"std:080\"\n\n]\n\n}\n]\n}\n]\n}\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 125 of 125", "metadata": {"project_name": "", "client_name": "", "deadline": "", "industry": "generic", "region": "global", "constraints": [], "client_needs": []}, "industry": "generic", "region": "global", "constraints": [], "client_needs": [], "retrieved_docs": ["Con\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025THE PROPOSAL\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025RFP Overview\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Features\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Proposed solution (Architecture Diagram)\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Solutioning approach\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Proposed Tech StacksCore Tech-stack3 PartyServicesTesting Tools\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Data Privacy and Security\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Assumptions:\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Phases and Timeline04W1W2W3W403W1W2W3W402W1W2W3W401W1W2W3W4ImplementationRequirement GatheringGo - LiveUAT\nDetailed scope and estimates are provided in the excel sheet included with the proposal document..", "Detailed scope and estimates are provided in the excel sheet included with the proposal document..\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Team Required\nThis is just a tentative team and based on \ufb01nal scoping the team size may decrease or increase\nFront End DeveloperQA \nClient namePartialCoffeebeansLegends:Tech Lead AM/PMClient\nBA\nDevOps Front End DeveloperFront End Developer\nClient", "Con\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Technical Proposal for:RequirementAdd client logo\nCon\ufb01dential & Proprietary. All rights reserved. CoffeeBeans 2025Accelerating Enterprise AI ExcellenceAbout Us160+ServicesPartnership & ClienteleSuccessful Projects completions70+Clients10+Industries ServedData & AI Partners\nCloud PartnersTrusted by Leaders\nAI DATA05Of\ufb01ce Locations\n\u25cfImplement and scale machine learning models with MLOps best practices.\u25cfEnsure AI operations are reliable, ef\ufb01cient, and governable.\u25cfDevelop intelligent chatbots and AI agents for automation and innovation.\u25cfLeverage generative AI to drive business impact and tangible outcomes.\n\u25cfAssess data maturity and identify high-impact AI opportunities.\u25cfDevelop actionable roadmaps to optimize data for AI initiatives.\u25cfBuild and integrate scalable, cloud-native data platforms.\u25cfEnsure seamless data infrastructure for AI readiness.\nProduct Origins, AI Future: Our Evolution in Technology Excellence"], "summarized_tables": ["\ud83d\udcca Table\nPART A: INITIATION | \nChange Request Number: | \nDate: | \nTitle: | \nInitiator: | \nBrief Description of Proposed\nChange: | \nName & Designation:\n(On behalf of Initiator) | \n\n\ud83d\udcdd Summary: The table serves as a structured template for documenting change requests within a project or organization. It includes essential fields such as the change request number, date, title, initiator, a brief description of the proposed change, and the name and designation of the person submitting the request on behalf of the initiator. Key insights from this format highlight the importance of clear identification and communication of proposed changes to facilitate effective decision-making and tracking.", "\ud83d\udcca Table\n |  | \nPart B: EVALUATION |  | \nChange Request Number: |  | \nDate: |  | \nDetailed Description of Change: |  | \nImpact: |  | \n\u00b7 Cost |  | \n\u00b7 Risk |  | \n\u00b7 On Overall Project |  | \n\n\ud83d\udcdd Summary: The table is designed to evaluate change requests within a project, capturing essential details such as the change request number, date, and a detailed description of the proposed change. It assesses the impact of the change in terms of cost, risk, and its overall effect on the project. Key insights from this structure facilitate informed decision-making by highlighting potential implications of changes on project resources and outcomes.", "\ud83d\udcca Table\nDeliverables Involved: | \nDetailed Timelines: | \nAvailable alternatives (if any): | \n\n\ud83d\udcdd Summary: The table outlines the key components of a project, including the specific deliverables involved, the detailed timelines for completion, and any available alternatives to the proposed plan. Its structure facilitates clear communication of project expectations and timelines, while providing flexibility through alternative options. Key insights include the importance of adhering to timelines and the potential for alternative strategies to enhance project outcomes.", "\ud83d\udcca Table\nName & Designation:\n(On behalf of Initiator) | \nSignature: | \nAuthority to Proceed (YES/NO): | \nApproved\nComments: | Rejected\nComments:\nFor ONDC | For MSP\nSignature: | Signature:\nName: | \nDesignation: | \n\n\ud83d\udcdd Summary: The table is designed to document the approval process for a project or initiative, capturing essential details such as the name and designation of the initiator, their signature, and the authority to proceed with a \"YES\" or \"NO\" response. It includes sections for comments on approval or rejection, as well as signatures and designations for both ONDC and MSP representatives. Key insights include the clear delineation of approval status and the opportunity for feedback, which facilitates transparency and accountability in decision-making.", "\ud83d\udcca Table\nS.No. | Data Field/Records | Description\n1 | Participant Id | Unique Participant Id provided by the registry\n\n\ud83d\udcdd Summary: The table serves to catalog participant information within a registry, with a focus on the unique identification of each participant. It consists of a single data field, \"Participant Id,\" which is essential for tracking and managing individual records. The key insight is that the unique identifier is crucial for ensuring accurate data management and participant differentiation within the registry.", "\ud83d\udcca Table\n2 | Cred | Participant credential records\n3 | Cred.id | Credential record unique id\n4 | Cred.type | Credential type\n5 | Cred.key_1 | Place holder field purposed based on type\n6 | Cred.key_2 | Place holder field purposed based on type\n7 | Cred.key_3 | Place holder field purposed based on type\n8 | Contact | Participant contact records\n9 | Contact.id | Contact record unique id\n10 | Contact.type | Contact type\n11 | Contact.key_1 | Place holder field purposed based on type\n12 | Contact.key_2 | Place holder field purposed based on type\n13 | Contact.key_3 | Place holder field purposed based on type\n14 | Contact.key_4 | Place holder field purposed based on type\n15 | Key | Participant key records\n16 | Key.uk_id | Unique Key Id provided by Registry\n17 | Key.signing_pub | Signing Public Key\n18 | Key.encryption_pub | Encryption Public Key\n19 | Key.valid_from | Key valid from timestamp\n20 | Key.valid_to | Key valid till timestamp\n21 | URI | Participant URI records\n22 | URI.id | participant unique uri id\n23 | URI.url | url of the participant\n24 | Location | Participant location records\n25 | Location.id | Location record unique id\n26 | Location.city | Array of city reference identifiers\n27 | Location.country | Array of country reference identifiers\n\n\ud83d\udcdd Summary: The table outlines the structure and purpose of participant records, including credentials, contact information, keys, URIs, and locations. Each section contains unique identifiers and placeholder fields tailored to specific types, facilitating the organization and retrieval of participant data. Key insights include the emphasis on unique IDs for each record type and the inclusion of public keys for security purposes, indicating a focus on secure participant interactions.", "\ud83d\udcca Table\n28 | Location.geojson | geo json format definition of location\n29 | Mapping | Mapping Records\n30 | Mapping.id | Mapping record unique identifier\n31 | Mapping.domain | Participant transactional domain\n32 | Mapping.type | Participant transactional type\n33 | Mapping.uri_id | URI record reference id\n34 | Mapping.location_id | Location record reference id\n35 | Request ID | unique request id, generated by participant for\neach request\n36 | callback_uri | Participant callback uri for validation &\nverification on each request\n\n\ud83d\udcdd Summary: The table outlines the structure and purpose of various data fields related to mapping records and location definitions in a geo JSON format. Key insights include unique identifiers for mapping records and requests, as well as references to participant transactional domains and callback URIs for validation. This structure facilitates the organization and retrieval of location-related data for participants in a transactional system.", "\ud83d\udcca Table\n |  |  |  |  |  |  |  |  |  |  |  |  |  | \n | S.No. |  |  | Requirement Type |  |  | Sandbox |  |  | Pre Production |  |  | Production | \n |  |  |  |  |  |  |  |  |  |  |  |  |  | \n1 |  |  | Uptime |  |  | >=99% |  |  | >=99.9% |  |  | >=99.99% |  | \n2 |  |  | RPO |  |  | - |  |  | 15 mins |  |  | 0 |  | \n3 |  |  | RTO |  |  | - |  |  | 30 mins |  |  | 10 mins |  | \n4 |  |  | Application response\ntime(except subscribe\nAPI) |  |  | <100 milli-sec |  |  | <100 milli-sec |  |  | <10 milli-sec |  | \n5 |  |  | Response Time as\nmeasured at data\ncenter edge(except\nsubscribe API) |  |  | <1000 milli-sec |  |  | <1000 milli-sec |  |  | <200 milli-sec |  | \n6 |  |  | Throughput |  |  | 10 TPS |  |  | 50 TPS |  |  | 5000 TPS |  | \n7 |  |  | Concurrent users (live\nnetwork participants) |  |  | 100 |  |  | 500 |  |  | 1000. Scalable to\n5,000 |  | \n8 |  |  | High Availability |  |  | NA |  |  | NA |  |  | DC and DR in Active-\nactive mode on the\nbidder selected cloud\nplatform |  | \n\n\ud83d\udcdd Summary: The table outlines performance and availability requirements for a system across three environments: Sandbox, Pre Production, and Production. Key metrics include uptime, recovery point objective (RPO), recovery time objective (RTO), application response time, throughput, and concurrent user capacity, with progressively stricter standards set for the Production environment. Insights reveal a focus on high availability and scalability, particularly in the Production phase, where requirements are significantly more stringent compared to the other environments.", "\ud83d\udcca Table\nS.\nNo. | Type of\ncomponent /\nproduct /\nservice | Unit of\nmeasure | Number\nof units | Uni\nt\nrate | Sub-\nTotal | Taxe\ns | Total\nincl.\ntaxes\n2 | Cost of\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS | Per-month | 36 |  |  |  | \n\n\ud83d\udcdd Summary: The table outlines the cost structure for a secure cloud infrastructure service designed to handle an additional 1,000 transactions per second, beyond a baseline of 1,000 TPS. It includes columns for the type of service, unit of measure, number of units, unit rate, subtotal, taxes, and total cost, although specific financial figures are not provided. Key insights would focus on the monthly cost implications and the scalability of the infrastructure to meet increased transaction demands.", "\ud83d\udcca Table\n |  |  |  |  | \nS. No. | Milestone / Deliverable | Timeline |  | Liquidated damages, if any, | \n |  |  |  | applicable | \n |  |  |  |  | \n1 | Signing of the contract | T | Not applicable |  | \n2 | Submission of detailed\ndesign document | T+6 weeks | 1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay |  | \n3 | Submission of the UAT\nplan with detailed test\ncases and test data | T+12 weeks | 1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay |  | \n4 | Security testing (VAPT\nand App scan by a CERT-\nIn empanelled agency),\nPerformance testing and\nbenchmarking of system\nprior to go-live and\nnecessary fine-tuning | T+18 weeks | 1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay |  | \n5 | Completion of UAT and | T+18 weeks (= | 1% of cost head (A) as |  | \n\n\ud83d\udcdd Summary: The table outlines key milestones and deliverables for a project, detailing their timelines and associated liquidated damages for delays. Each milestone, from contract signing to user acceptance testing (UAT), specifies a timeline and imposes a penalty of 1% of a specified cost head for each week of delay, emphasizing the importance of timely completion. This structure ensures accountability and encourages adherence to project deadlines.", "\ud83d\udcca Table\n |  |  |  |  | \nS. No. | Milestone / Deliverable | Timeline |  | Liquidated damages, if any, | \n |  |  |  | applicable | \n |  |  |  |  | \n | solution Go-Live along\nwith replication of the\nexisting data in the\nRegistry database | T1) | mentioned in commercial bid\ncontract for every week of delay |  | \n6 | Submission of quarterly\nSLA compliance report | Before 15th of\nnext month\nafter end of\nquarter | 1% of quarterly amount payable\nfor every week of delay |  | \n7 | Submission of the\nKnowledge transition\nreport and complete\nregistry documentation | T1+ 12\nquarters | 1% of quarterly amount payable\nfor every week of delay |  | \n\n\ud83d\udcdd Summary: The table outlines key milestones and deliverables for a project, including their timelines and associated liquidated damages for delays. It specifies critical tasks such as the solution Go-Live, quarterly SLA compliance reports, and the submission of a knowledge transition report, with penalties of 1% of the quarterly amount for each week of delay. This structure emphasizes accountability and timely completion of project phases.", "\ud83d\udcca Table\nSLA\nDescription | Availability of Registry as a solution\nScope of SLA | Applies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\nTools, methods\nor scripts to be\nused to\nmeasure SLA | Healthcheck service to be implemented by MSP \u2013 a custom monitoring\nscript shall be executed once every minute from the SLA monitoring\nserver.\nProcess to\ncapture data or\nmeasure the\nparameter | The availability of registry shall be measured as follows:\ni. From the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\nii. Based to the response obtained from each API, availability shall\nbe computed.\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\nSLA calculation | Will be calculated using the below formula.\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2013 Planned Downtime)]} *100\nPlanned Downtime permissible for each API = 15 minutes per quarter\nTotal Time = 24 X 7 measured over a period of one calendar month.\n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) for the availability of the Registry solution, specifically focusing on the APIs accessed by Network Participants. It details the measurement process using a health check service that executes a custom monitoring script every minute to assess API availability, with downtime defined by service request failures. The SLA calculation formula accounts for total downtime, planned downtime, and total time over a month, allowing for a maximum of 15 minutes of planned downtime per API per quarter.", "\ud83d\udcca Table\n | [If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\nOverall Availability % of Registry = ROUND ( [Availability % for each\nAPI]/Number of APIs, 2)\n\ud835\udef4\ud835\udef4 | \nSLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nProduction\nenvironment |  | \n | SLA Level | Applicable LD as % of quarterl\nof quarterly payment due\n | >=99.99% | None\n | <99.99% and >= 99.9% | 1%\n | <99.9% and >= 99% | 2%\n | <99% and >=98% | 3%\n | <98% and >=97% | 4%\n | <97% | 5%\nSLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nPre-\nProduction\nenvironment |  | \n | SLA Level | Applicable LD as % of quarterl\nof quarterly payment due\n | >=99.9% | None\n | <99.9% | 0.5%\n |  | \nSLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nSandbox\nenvironment |  | \n | SLA Level | Applicable LD as % of quarterl\nof quarterly payment due\n | >=99% | None\n | <99% | 0.5%\nAssumptions, if\nany | The MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools. | \nMeasurement\ninterval | Monthly | \nReporting\ninterval | Quarterly | \nReporting | Automated SLA dashboard to be provided by MSP | \n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) targets and corresponding liquidated damages (LD) for different environments (Production, Pre-Production, and Sandbox) based on API availability percentages. It specifies the cumulative downtime calculation for multiple APIs and establishes penalties as a percentage of quarterly payments for failing to meet availability thresholds. Key insights include the structured approach to measuring service reliability and the financial implications of downtime, emphasizing the importance of maintaining high availability across all environments.", "\ud83d\udcca Table\nSLA Description | Response time of Registry as a solution | \nScope of SLA | Applies to response time of Registry as a solution,\nspecifically the APIs through which Network Participants\naccess the Registry. | \nTools, methods or scripts\nto be used to measure\nSLA | Tool to be implemented by MSP \u2013 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API. | \nProcess to capture data or\nmeasure the parameter | The response time of registry shall be measured as follows:\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server. | \nSLA calculation | Will be calculated using the below formula.\nFormula: Average response time of Registry =\nROUND(simple average of response times of each API\nexcluding outliers,2)\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile. | \nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment | SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 10 millisecond\nAverage response time of Registry 3%\napplication > 10 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 200 millisecond\nAverage response time of Registry 3% | \n | SLA Level | Applicable LD\nas % of\nquarterly\npayment\n | Average response time of Registry\napplication <= 10 millisecond | None\n | Average response time of Registry\napplication > 10 millisecond | 3%\n |  | \n | Average response time of Registry\nas measured from data center\nedge <= 200 millisecond | None\n | Average response time of Registry | 3%\n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) for the response time of a Registry solution, detailing its scope, measurement methods, calculation formula, and associated penalties for non-compliance. It specifies that response times will be monitored every 10 minutes using a custom script, with average response times calculated while excluding outliers. The SLA targets include specific thresholds for response times, with liquidated damages applicable if these thresholds are exceeded.", "\ud83d\udcca Table\n | application > 200 millisecond |  | \nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nPre-Production\nenvironment | SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 1%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 1%\napplication > 1000 millisecond |  | \n | SLA Level | Applicable LD\nas % of\nquarterly\npayment | \n | Average response time of Registry\napplication <= 100 millisecond | None | \n | Average response time of Registry\napplication > 100 millisecond | 1% | \n |  |  | \n | Average response time of Registry\nas measured from data center\nedge <= 1000 millisecond | None | \n | Average response time of Registry\napplication > 1000 millisecond | 1% | \nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nSandbox environment | SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 0.5%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 0.5%\napplication > 1000 millisecond |  | \n | SLA Level | Applicable LD\nas % of\nquarterly\npayment | \n | Average response time of Registry\napplication <= 100 millisecond | None | \n | Average response time of Registry\napplication > 100 millisecond | 0.5% | \n |  |  | \n | Average response time of Registry\nas measured from data center\nedge <= 1000 millisecond | None | \n | Average response time of Registry\napplication > 1000 millisecond | 0.5% | \nAssumptions, if any | The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\ntools. |  | \nMeasurement interval | Monthly |  | \nReporting interval | Quarterly |  | \nReporting | Automated SLA dashboard to be provided by MSP |  | \n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) targets and corresponding liquidated damages (LD) percentages based on the average response times of registry applications in both Pre-Production and Sandbox environments. It specifies that no LD applies for response times of 100 milliseconds or less, while a 1% LD is applicable for response times exceeding 100 milliseconds in Pre-Production and 0.5% in the Sandbox. Additionally, it notes that the Managed Service Provider (MSP) must implement custom scripts for metric measurement, with monthly measurement and quarterly reporting through an automated SLA dashboard.", "\ud83d\udcca Table\nSLA Description | Incident Response Time | \nScope of SLA | Applies to all Incidents | \nTools, methods or\nscripts to be used to\nmeasure SLA | Incident and Service Desk Management tool to be implemented by MSP | \nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment | Once an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 15 minutes\nP2 60 minutes\nP3 2 hours | \n | Priority | Response time\n | P1 | 15 minutes\n | P2 | 60 minutes\n | P3 | 2 hours\nProcess to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments | Once an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours | \n | Priority | Response time\n | P1 | 30 minutes\n | P2 | 90 minutes\n | P3 | 3 hours\nSLA calculation | Formula:\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined | \n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) for incident response times, detailing the response time expectations based on incident priority levels (P1, P2, P3) for both production and sandbox/pre-production environments. It specifies that response times are measured from incident creation to the \"In Progress\" status update, with distinct timeframes for each priority level. Key insights include the structured response times (15, 60, and 120 minutes for production; 30, 90, and 180 minutes for sandbox) and the calculation method for assessing SLA compliance based on the number of incidents addressed within the defined timelines.", "\ud83d\udcca Table\nSLA Description | Incident Response Time\n | timelines during the period / Number of P3 incidents opened during the\nperiod\nSLA target | Response Time compliance =100%\nLiquidated\nDamages | 2% of quarterly payment if SLA target is not met\nMeasurement\ninterval | Monthly\nReporting interval | Quarterly\nReporting | Using SLA reporting tool\n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) for incident response times, specifying that the target is a 100% compliance rate for responding to P3 incidents within defined timelines. It includes provisions for liquidated damages, imposing a 2% penalty on quarterly payments if the SLA target is not achieved. The performance is measured monthly and reported quarterly using an SLA reporting tool.", "\ud83d\udcca Table\nSLA Description | Incident Resolution Time | \nScope of SLA | Applies to all incidents | \nTools, methods or\nscripts to be used to\nmeasure SLA | Incident and Service Desk Management tool to be implemented by\nMSP | \nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment | Measurement of SLA\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\nPriority Resolution time\nP1 8 Hours\nP2 2 Days\nP3 5 days\nP4 - Service Request 15 days | \n | Priority | Resolution time\n | P1 | 8 Hours\n | P2 | 2 Days\n | P3 | 5 days\n | P4 - Service Request | 15 days\nProcess to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments | Measurement of SLA\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\nPriority Resolution time\nP1 15 Hours\nP2 3 Days | \n | Priority | Resolution time\n | P1 | 15 Hours\n | P2 | 3 Days\n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) for incident resolution times, specifying that it applies to all incidents and is measured using an Incident and Service Desk Management tool. It details the resolution times based on priority levels for both production and sandbox/pre-production environments, with P1 incidents requiring the quickest resolution times of 8 hours in production and 15 hours in sandbox, while P2, P3, and service requests have progressively longer resolution times. Key insights include the structured approach to measuring response and resolution times, ensuring accountability and efficiency in incident management.", "\ud83d\udcca Table\n | P3 | 6 days | \n | P4 - Service Request | 15 days | \nSLA calculation | Formulae:\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period |  | \nSLA target | Resolution Time % = 100% |  | \nSeverity level for\ncomputation of\nLiquidated Damages | 2% of quarterly payment due |  | \nMeasurement interval | Monthly |  | \nReporting interval | Quarterly |  | \nReports or Data to be\nsubmitted, if any | Automated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n1. Incident Resolution Report\n2. Incident Request Work \u201cIn Progress\u201d Report\n3. Incident average resolution report\n4. Incident number of duplicates\n5. % of incidents converted as Problem\n6. % repeat unknown cause of/incident\n7. Number of incidents with priorities modified during their course\nof resolution report\n8. RCA of P1 and P2 resolved. |  | \n\n\ud83d\udcdd Summary: The table outlines the Service Level Agreement (SLA) metrics for incident resolution across different priority levels (P1 to P4), specifying resolution time targets, calculation formulas, and reporting requirements. Key insights include a target resolution time percentage of 100%, a measurement interval of one month, and a quarterly reporting structure, along with a customizable automated SLA dashboard for tracking various incident-related metrics. Additionally, it highlights potential liquidated damages of 2% of quarterly payments for non-compliance with SLA targets.", "\ud83d\udcca Table\n{\n\"publicKey\": \"S5h8gLhvW1AWP8k5spsGGSWXII0pAL6Z78bHpDF\n1SbE=\",\n\"privateKey\": \"vIk+FxxD5n8LcG0mgR6qL0Sln+Qo/AUQdZGzpeoU\nUn0=\"\n}\n\n\ud83d\udcdd Summary: The table contains a pair of cryptographic keys: a public key and a private key, which are essential for secure communication and data encryption. The public key is used for encrypting messages that can only be decrypted by the corresponding private key, ensuring confidentiality. Key insights include the importance of maintaining the secrecy of the private key while allowing the public key to be shared for secure interactions.", "\ud83d\udcca Table\n{\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dX2amsNb1zyq\nBiLLT+e2+mzJ2QH0=\",\n\"privateKey\": \"MFECAQEwBQYDK2VuBCIEINhPuAXdILHJvfhngONl0aIQ8\nIJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2\n+mzJ2QH0=\"\n}\n\n\ud83d\udcdd Summary: The table contains a pair of cryptographic keys: a public key and a private key, which are used for secure data transmission and encryption. The public key is intended for sharing with others to encrypt messages, while the private key is kept secret and used to decrypt those messages. Key insights include the importance of maintaining the confidentiality of the private key to ensure the security of the encrypted communications.", "\ud83d\udcca Table\n{\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"cDWjNpLHYFFF8zFXBQoBlrmsXezndSj1JZRzSZZoKB\n4=\"\n}\n\n\ud83d\udcdd Summary: The table appears to contain a request for data, identified by a unique request ID (\"27baa06d-f90a-486c-85e5-cc621b787f22\"), along with a client private key for authentication or secure access (\"cDWjNpLHYFFF8zFXBQoBlrmsXezndSj1JZRzSZZoKB4=\"). The purpose is likely to facilitate a secure data exchange between a client and a server. Key insights include the emphasis on security through the use of a private key and the identification of specific data requests.", "\ud83d\udcca Table\n\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP\nX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\"\n\n\n\ud83d\udcdd Summary: The table appears to contain a cryptographic signature, likely used for data integrity and authentication purposes. Its structure suggests it encodes a complex string, possibly representing a hash or encrypted data. Key insights include the importance of such signatures in ensuring secure communication and verifying the authenticity of information exchanged in business transactions.", "\ud83d\udcca Table\n{\n\"value\": \"cNK5xU6tKn2VJ47AKL6cQQC0gnbpnByqvEXboCJPnbA=\",\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iMHx0Zo\ndBn0P9UTHcOkeczDmeOVkU=\",\n\"Subscriber_PrivateKey\": \"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI\n1jIIcjmzWgPQlIg/T1Q6A3pZ0AIWp6gSEAJGnKRTAEcSvpgD0mw9gBHv94E\n3w8sTtmPlszuXIEAF0=\"\n}\n\n\ud83d\udcdd Summary: The table contains cryptographic keys used for secure communication within a system, specifically an ONDC (Open Network for Digital Commerce) framework. It includes a public key for ONDC, a subscriber's private key, and a value that may represent an encrypted or encoded piece of information. Key insights suggest a focus on security and data integrity in digital transactions, highlighting the importance of key management in maintaining confidentiality and authenticity.", "\ud83d\udcca Table\n{\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\n\n\ud83d\udcdd Summary: The table outlines the operational context for a specific registration scenario, indicated by the operation number (ops_no). Its structure likely includes various parameters or metrics related to the registration process, enabling analysis of efficiency and effectiveness. Key insights would focus on identifying bottlenecks or areas for improvement within the registration workflow.", "\ud83d\udcca Table\n} | \n | },\n\"message\": { | \n\"entity\": { | \n\"gst\": { | \n\"legal_entity_name\": \"Protean E-Gov\", | \n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati | \nBapat Marg, Lower Parel, Mumbai 013.\", | \n\"city_code\": [ | \n\"std:080\" | \n], | \n\"gst_no\": \"27AAECF8760H1ZC\" | \n}, | \n\"pan\": { | \n\"name_as_per_pan\": \"Protean E-Gov\", | \n\"pan_no\":\"AAECF8760H\", | \n\"date_of_incorporation\": \"05/01/2022\" | \n}, | \n\"callback_url\": \"/test\", | \n\"name_of_authorised_signatory\": \"NSDL\", | \n\"address_of_authorised Signatory\": \"Lower Parel,\", | \n\"email_id\": \"contact@nsdl.co.in\", | \n\"country\": \"IND\", | \n\"mobile_no\": \"8734598345\", | \n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\", | \n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\", | \n\"key_pair\": { | \n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\", | \n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT | \ncy5ZzuI0inWWf5fGZBs=\", | \n\"valid_from\": \"2022-07-03T06:27:54.101Z\", | \n\"valid_until\": \"2023-07-03T06:27:54.101Z\" | \n} | \n}, | \n | \n// change type and msn input depending on registration scenario | \n\"network_participant\": [ | \n{ | \n\"subscriber_url\": \"/\", | \n\"domain\": \"nic2004:52110\", | \n\"type\": \"buyerApp\", | \n\"msn\":false, | \n\"city_code\": [ | \n\"std:080\" | \n], | \n | \n// change input depending on registration scenario; the second network participant block only | \nused in registration scenarios 4 and 5. | \n\"network_participant\": [ | \n{ | \n\"subscriber_url\": \"/\", | \n\"domain\": \"nic2004:52110\", | \n\"type\": \"sellerApp\", | \n\n\ud83d\udcdd Summary: The table provides detailed information about a business entity, Protean E-Gov, including its legal name, GST and PAN details, incorporation date, authorized signatory information, and key pair for secure communication. It also outlines the structure of network participants, indicating their roles as buyer and seller applications within a specified domain. Key insights include the entity's compliance with regulatory requirements and its operational framework for digital transactions.", "\ud83d\udcca Table\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": [\n{\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\n\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\n4mYqU6Aak/XiOFKDFAnUt0qRhM=\",\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n}\n\n]\n}\n\n],\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\n\n\ud83d\udcdd Summary: The table provides information about a seller associated with a specific city code, including their unique identifier and cryptographic keys for signing and encryption, along with validity dates. It also includes a timestamp and a request ID for tracking purposes. Key insights include the seller's active status and the timeframe during which their keys are valid, indicating a focus on secure transactions.", "\ud83d\udcca Table\n{\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"clientPublicKey\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\"\n}\n\n\ud83d\udcdd Summary: The table contains a structured data request that includes a unique identifier (`requestData`), a public key for client authentication (`clientPublicKey`), and a digital signature (`sign`) for data integrity verification. Its purpose is to facilitate secure communication between a client and a server by ensuring that the request is authentic and has not been tampered with. Key insights include the emphasis on security through the use of cryptographic elements, which are essential for protecting sensitive information in business transactions.", "\ud83d\udcca Table\n{\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFl5oUrH/33bA/KulLErqGstlgSEA+XpYc09S8X8mkgNTlf6nlPRbL46TCwEXl\nAIkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkIrkyxTqyssjtYJ3KRN\nD5FnzK5MDrwlK3kC8=\"\n}\n\n\ud83d\udcdd Summary: The table contains cryptographic keys used for secure communication between a client and a server, specifically a client private key and a public key for a system called \"protean.\" The structure includes a unique identifier for the session or transaction, along with the encoded keys. Key insights suggest a focus on security and encryption, indicating that the data is likely part of a system requiring secure data exchange.", "\ud83d\udcca Table\n{\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n\n\ud83d\udcdd Summary: The table provides information about a specific country, India (IND), and its associated domain code, \"nic2004:52110,\" which likely refers to a classification within a standardized system, such as the National Industrial Classification (NIC) in India. The purpose of this data is to categorize economic activities or industries for statistical and analytical purposes. Key insights may include the identification of the industry sector represented by the domain code, which can inform business decisions and policy-making related to that sector in India.", "\ud83d\udcca Table\n[\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"subscriber_url\": \"/subscriber1\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"buyerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\ud83d\udcdd Summary: The table provides information about a subscriber to a service, detailing their status, identification, and key attributes such as subscription validity, type, and cryptographic keys. It is structured with fields for subscriber identification, status, country, domain, validity dates, and public keys for signing and encryption. Key insights include the subscriber's active status, the specific type of application they represent (buyerApp), and the timeframe of their subscription, which indicates a need for renewal as it expired in July 2023.", "\ud83d\udcca Table\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\nLH0U=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"city\": \"std:080\"\n},\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\"ukId\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"type\": \"sellerApp\",\n\n\ud83d\udcdd Summary: The table summarizes subscription details for a seller application within a specific city (std:080) in India, highlighting key attributes such as subscriber ID, status, unique IDs, validity dates, and public keys for signing and encryption. It indicates that all entries are active subscriptions with a common validity period from July 14, 2022, to July 20, 2023. Key insights include the uniformity in subscription status and the use of consistent public keys across different entries, suggesting a standardized approach to managing these subscriptions.", "\ud83d\udcca Table\n | \"signing_public_key\":\n | \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n | \"encr_public_key\":\n | \"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\n | LH0U=1\",\n | \"created\": \"2022-07-14T06:48:54.101Z\",\n | \"updated\": \"2023-01-25T11:39:53.868Z\",\n | \"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n | \"city\": \"std:080\"\n | }\n | ]\n | \n\n\ud83d\udcdd Summary: The table provides information about a cryptographic key pair, including a signing public key and an encryption public key, along with metadata such as creation and update timestamps, a unique identifier (br_id), and a city code. Its structure consists of key-value pairs that facilitate secure communication and data integrity. Key insights include the specific keys used for cryptographic operations and the timeline of their creation and updates, indicating ongoing management of security credentials.", "\ud83d\udcca Table\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option5\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+EwOa77fJcqSxuj4+JGr115oMtlVKdyG8febGjivv\nOpZZUAX0tLAgapmDIX+xQhl3RS2qpCX3s6mS3uoCw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n}\n\n\ud83d\udcdd Summary: The table captures a request made by a sender identified as \"pilot-gateway-1.beckn.nsdl.co.in/option5\" for a specific search operation, including a unique request ID and a timestamp for tracking. The search parameters indicate that the request pertains to the country India and a specific domain code. Key insights include the structured format for identifying the request and its parameters, which facilitates efficient processing and response in a digital transaction environment.", "\ud83d\udcca Table\n[\n{\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\ud83d\udcdd Summary: The table appears to contain data related to subscribers, specifically identified by unique subscriber IDs, which may represent different entities or users within a system. Its structure likely includes fields for subscriber identification and possibly additional attributes or metrics relevant to their engagement or usage. Key insights could include patterns in subscriber behavior, segmentation opportunities, or performance metrics that inform business strategies.", "\ud83d\udcca Table\n\"city\": [\n\"std:080\"\n],\n\"country\": \"IND\",\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/ac7\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.868Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\": [\n{\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": []\n},\n{\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n],\n\"seller_on_record\": [\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\n0U=1\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n},\n{\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"key_pair\": {\n\"signing_public_key\":\n\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",\n\n\ud83d\udcdd Summary: The table outlines the details of a network participant in India, including their unique identifiers, public keys for signing and encryption, and validity periods. It is structured to include information about the city, country, and specific network participants categorized as buyer and seller applications, along with their respective URLs and city codes. Key insights include the presence of multiple participants with distinct roles and the use of public key infrastructure for secure communications, all valid within a specified timeframe.", "\ud83d\udcca Table\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\n0U=1\",\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n},\n\"city_code\": [\n\"std:080\"\n]\n}\n]\n}\n]\n}\n]\n\n\ud83d\udcdd Summary: The table provides information about an encryption public key, including its validity period and associated city code. The key is valid from July 14, 2022, to July 20, 2023, and is linked to the city code \"std:080.\" This structure indicates a focus on secure data transmission within a specific geographic area, highlighting the importance of encryption in protecting sensitive information."], "proposal": "# Optimized Business Proposal for ONDC Registry Upgrade and Maintenance\n\n**Submitted to:**  \nOpen Network for Digital Commerce (ONDC)  \n**Submitted by:**  \n[Your Company Name]  \n[Your Company Address]  \n[Your Company Contact Information]  \n**Date:** [Insert Date]\n\n---\n\n## 1. Cover Letter\n\nDear [Client's Name],\n\nWe are thrilled to present our proposal in response to the Request for Proposal (RFP) ONDC/Tech/Registry/12-2024/P-101 for the selection of a Managed Services Provider (MSP) for the upgrade and maintenance of the ONDC Registry. At [Your Company Name], we recognize the pivotal role that a robust digital commerce infrastructure plays in driving growth and innovation, and we are eager to partner with ONDC to elevate its capabilities.\n\nWith a proven track record in managing and enhancing complex digital systems, we are poised to not only meet but exceed the expectations outlined in your RFP. Our tailored solution is designed to ensure scalability, security, and efficiency, perfectly aligning with ONDC's vision of fostering an open and accessible digital commerce ecosystem.\n\nWe look forward to the opportunity to discuss our proposal in detail and to contribute to the ongoing success of ONDC.\n\nWarm regards,  \n[Your Name]  \n[Your Title]  \n[Your Company Name]\n\n---\n\n## 2. Understanding of Client Needs\n\nONDC is on a transformative journey to enhance its Registry, anticipating a surge in network participants from 300 to 10,000 over the next five years. To support this growth, the Registry must efficiently handle a peak transaction rate of 1500 transactions per second (TPS) while ensuring zero data loss, robust security, and compliance with regulatory standards.\n\nKey requirements identified from the RFP include:\n\n- **Scalability:** The Registry must seamlessly accommodate a significant increase in participants and transactions.\n- **Security:** Implementation of advanced encryption standards and secure access protocols to safeguard sensitive data.\n- **Performance Monitoring:** Real-time monitoring and reporting of system performance and availability to ensure optimal operation.\n- **User Management:** Role-based access control and user authentication mechanisms to enhance security and usability.\n- **Compliance:** Adherence to data residency and regulatory requirements to maintain trust and integrity.\n\n---\n\n## 3. Proposed Solution\n\n### 3.1 Architecture Overview\n\nOur proposed solution will utilize a multi-tiered architecture, ensuring modularity and scalability. The architecture will consist of:\n\n- **API Layer:** An API-first design to facilitate seamless integration and communication among network participants.\n- **Application Layer:** Responsible for processing requests and managing data interactions efficiently.\n- **Data Layer:** Utilizing a denormalized, key-value pair database for rapid data storage and retrieval.\n- **Security Layer:** Implementing advanced encryption standards (ECDH using X25519) and robust authentication mechanisms to protect data integrity.\n- **Monitoring Layer:** Real-time performance monitoring with a dedicated health check API to ensure system reliability.\n\n### 3.2 Key Features\n\n- **Enhanced APIs:** Development of new APIs and enhancement of existing ones to support additional functionalities and improve user experience.\n- **Data Management:** Implementation of a data classification system (Hot, Warm, Cold) for efficient data storage and retrieval.\n- **Disaster Recovery:** Automated disaster recovery solutions ensuring 99.99% availability, safeguarding against unexpected disruptions.\n- **User Dashboard:** A comprehensive admin dashboard for monitoring system performance and managing user access intuitively.\n\n---\n\n## 4. Project Plan & Implementation Timeline\n\n### 4.1 Phases of Implementation\n\n1. **Requirement Gathering (Weeks 1-2):** Collaborate with ONDC to finalize requirements and expectations, ensuring alignment with strategic goals.\n2. **Design Phase (Weeks 3-6):** Develop detailed design documents and architecture diagrams, laying the groundwork for a successful implementation.\n3. **Development Phase (Weeks 7-12):** Implement the upgraded Registry, including API development and database migration, with a focus on quality and performance.\n4. **Testing Phase (Weeks 13-16):** Conduct thorough testing, including security testing (VAPT) and performance benchmarking, to ensure reliability.\n5. **Go-Live (Week 17):** Deploy the upgraded Registry and ensure a smooth transition from the existing system, minimizing disruption.\n6. **Post-Go-Live Support (Weeks 18-20):** Provide ongoing support and address any issues that arise post-deployment, ensuring continued success.\n\n### 4.2 Timeline Overview\n\n| Phase                     | Duration         | Completion Date |\n|---------------------------|------------------|------------------|\n| Requirement Gathering      | 2 weeks          | [Date]           |\n| Design Phase              | 4 weeks          | [Date]           |\n| Development Phase         | 6 weeks          | [Date]           |\n| Testing Phase             | 4 weeks          | [Date]           |\n| Go-Live                   | 1 week           | [Date]           |\n| Post-Go-Live Support      | 3 weeks          | [Date]           |\n\n---\n\n## 5. Pricing & Payment Terms\n\n### 5.1 Pricing Structure\n\n- **Monthly Service Fee:** [Insert Amount] (exclusive of GST)\n- **Out-of-Pocket Expenses:** Pre-approved expenses will be reimbursed within 30 days of submission.\n\n### 5.2 Payment Terms\n\n- Invoices will be submitted monthly, accompanied by a progress report detailing tasks performed and hours spent.\n- Payments will be made within 30 days of receipt of the invoice, subject to TDS deductions as applicable.\n\n---\n\n## 6. Technical Approach\n\nOur technical approach will emphasize:\n\n- **Agile Development Methodology:** Ensuring flexibility and responsiveness to evolving requirements.\n- **Continuous Integration/Continuous Deployment (CI/CD):** Streamlining the development and deployment process for efficiency.\n- **Robust Testing Framework:** Implementing automated testing to guarantee quality and performance.\n\n---\n\n## 7. Company Experience\n\n[Your Company Name] boasts a proven track record of successfully delivering similar projects, including:\n\n- **Project 1:** [Brief Description, Client Name, Outcome]\n- **Project 2:** [Brief Description, Client Name, Outcome]\n- **Project 3:** [Brief Description, Client Name, Outcome]\n\nOur team comprises seasoned professionals with expertise in cloud technologies, database management, and cybersecurity, ensuring that we bring the best solutions to the table.\n\n---\n\n## 8. Case Studies & Testimonials\n\n### 8.1 Case Study 1: [Project Name]\n\n- **Client:** [Client Name]\n- **Challenge:** [Brief Description]\n- **Solution:** [Brief Description]\n- **Outcome:** [Results Achieved]\n\n### 8.2 Testimonial\n\n> \"Partnering with [Your Company Name] has revolutionized our digital infrastructure. Their expertise and unwavering commitment to excellence are truly commendable.\"  \n> \u2014 [Client Name, Title]\n\n---\n\n## 9. Conclusion & Call to Action\n\nWe are genuinely excited about the prospect of partnering with ONDC to upgrade and maintain the Registry. Our proposed solution is meticulously crafted to meet your needs and ensure the success of your digital commerce initiatives.\n\nWe invite you to engage in a discussion about this proposal and explore how we can collaborate to achieve your goals. Please feel free to reach out to us at [Your Contact Information] to schedule a meeting.\n\nThank you for considering our proposal.\n\nWarm regards,  \n[Your Name]  \n[Your Title]  \n[Your Company Name]  \n\n--- \n\n**Attachments:**  \n- Detailed Project Plan  \n- Pricing Breakdown  \n- Company Profile  \n- Relevant Case Studies  \n\n--- \n\nThis optimized proposal is designed to resonate with the client while clearly articulating your company's strengths and the value of your proposed solution. Adjust the content as necessary to align with your specific offerings and strengths.", "compliance_report": "To evaluate whether your proposal addresses the key requirements, constraints, and mandatory elements outlined in the client's RFP (ONDC/Tech/Registry/12-2024/P-101), we will categorize the major areas as fully addressed, partially addressed, or missing. \n\n### 1. **Service Fee and Payment Terms**\n- **RFP Requirement:** \n  - Service Fee exclusive of GST, timely deposit of GST, monthly invoicing with progress reports, TDS compliance, and reimbursement of pre-approved out-of-pocket expenses.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal clearly states that the service fee is exclusive of GST, outlines the invoicing process, and mentions the reimbursement of pre-approved expenses.\n\n### 2. **Change Management Process**\n- **RFP Requirement:** \n  - Conditions for change orders, change management process, cost estimation, and obligations regarding changes.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal includes a detailed change management process, conditions for change orders, and outlines the responsibilities of both parties.\n\n### 3. **Scalability and Performance**\n- **RFP Requirement:** \n  - The Registry must handle a peak TPS of 1500 and accommodate growth from 300 to 10,000 participants.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal emphasizes scalability in the architecture overview and mentions the ability to handle increased transactions.\n\n### 4. **Security and Data Protection**\n- **RFP Requirement:** \n  - Implementation of advanced encryption standards (ECDH using X25519) and secure access protocols.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal specifies the use of advanced encryption standards and outlines security measures in the architecture.\n\n### 5. **Monitoring and Reporting**\n- **RFP Requirement:** \n  - Real-time monitoring of system performance and availability, including a health check API.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal includes a monitoring layer with real-time performance monitoring and a dedicated health check API.\n\n### 6. **User Management and Access Control**\n- **RFP Requirement:** \n  - Role-based access control (RBAC) and user authentication mechanisms.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal mentions the implementation of RBAC and user authentication as part of the dashboard features.\n\n### 7. **Compliance with Regulatory Standards**\n- **RFP Requirement:** \n  - Adherence to data residency and regulatory requirements.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal states compliance with data residency requirements and outlines how regulatory standards will be met.\n\n### 8. **Project Plan and Timeline**\n- **RFP Requirement:** \n  - A clear project plan with defined phases and timelines.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal includes a detailed project plan with phases, durations, and completion dates.\n\n### 9. **Technical Approach**\n- **RFP Requirement:** \n  - A clear technical approach emphasizing agile development and CI/CD.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal outlines the technical approach, including agile methodology and CI/CD practices.\n\n### 10. **Company Experience and Case Studies**\n- **RFP Requirement:** \n  - Demonstration of relevant experience and successful project delivery.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal includes a section on company experience, relevant projects, and testimonials.\n\n### 11. **Pricing Structure**\n- **RFP Requirement:** \n  - Clear pricing structure and payment terms.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal provides a clear pricing structure and outlines payment terms.\n\n### 12. **Attachments**\n- **RFP Requirement:** \n  - Relevant documents and additional information.\n- **Proposal Status:** \u2705 Fully addressed\n  - The proposal mentions attachments such as a detailed project plan, pricing breakdown, and company profile.\n\n### Summary\nOverall, your proposal **fully addresses** all major areas outlined in the RFP. There are no significant gaps or missing elements, and the proposal is well-structured to meet the client's needs. \n\n### Recommendations\n- **Enhance Clarity:** While the proposal is comprehensive, consider adding a summary table that highlights how each requirement from the RFP is met in your proposal for quick reference.\n- **Visual Aids:** Incorporate diagrams or flowcharts to visually represent the architecture and project timeline, which can enhance understanding for the client.\n- **Risk Management:** Consider including a brief section on risk management strategies to further reassure the client of your preparedness for potential challenges.\n\nThis approach will not only strengthen your proposal but also demonstrate your commitment to transparency and thoroughness in addressing the client's needs.", "compliance_passed": true, "score_report": "Here\u2019s an evaluation of the proposal based on the specified criteria:\n\n### 1) Clarity: 8/10\nThe proposal is generally clear and well-structured, with distinct sections that guide the reader through the content. The use of headings and bullet points enhances readability. However, some technical jargon may be challenging for non-technical stakeholders, and a brief explanation of certain terms (like \"VAPT\" or \"ECDH using X25519\") could improve overall clarity.\n\n### 2) Persuasiveness: 7/10\nThe proposal effectively communicates enthusiasm and confidence in the company's ability to meet the client's needs. The cover letter is engaging, and the understanding of client needs is well-articulated. However, the persuasiveness could be strengthened by including more compelling evidence of past successes, such as specific metrics or outcomes from previous projects, to build trust and credibility.\n\n### 3) Technical Depth: 9/10\nThe proposal demonstrates a strong technical understanding of the requirements and presents a detailed architecture overview. The inclusion of specific technologies and methodologies (like CI/CD and Agile) indicates a solid grasp of modern development practices. However, a bit more detail on how the proposed solution will handle scalability and security challenges could enhance this section.\n\n### 4) Alignment with Client Needs: 8/10\nThe proposal aligns well with the identified needs of ONDC, addressing scalability, security, performance monitoring, user management, and compliance. The detailed project plan and implementation timeline also reflect an understanding of the client's urgency and operational requirements. However, explicitly linking each proposed feature back to the client's stated needs could further strengthen this alignment.\n\n### 5) Overall Quality: 8/10\nOverall, the proposal is of high quality, with a professional tone and comprehensive content. It covers all necessary aspects, from understanding client needs to technical solutions and project timelines. Minor improvements in clarity and persuasiveness, as well as a more explicit connection between features and client needs, could elevate the proposal further.\n\n### Summary\n- **Clarity:** 8/10\n- **Persuasiveness:** 7/10\n- **Technical Depth:** 9/10\n- **Alignment with Client Needs:** 8/10\n- **Overall Quality:** 8/10\n\n**Overall Score:** 8/10\n\nThis proposal is strong and well-prepared, but with some adjustments, it could be even more compelling and effective in securing the contract.", "raw_tables": [[["PART A: INITIATION", null], ["Change Request Number:", ""], ["Date:", ""], ["Title:", ""], ["Initiator:", ""], ["Brief Description of Proposed\nChange:", ""], ["Name & Designation:\n(On behalf of Initiator)", ""]], [["", null, null], ["Part B: EVALUATION", null, null], ["Change Request Number:", null, ""], ["Date:", null, ""], ["Detailed Description of Change:", null, ""], ["Impact:", null, null], ["\u00b7 Cost", "", null], ["\u00b7 Risk", "", null], ["\u00b7 On Overall Project", "", null]], [["Deliverables Involved:", ""], ["Detailed Timelines:", ""], ["Available alternatives (if any):", ""]], [["Name & Designation:\n(On behalf of Initiator)", ""], ["Signature:", null], ["Authority to Proceed (YES/NO):", ""], ["Approved\nComments:", "Rejected\nComments:"], ["For ONDC", "For MSP"], ["Signature:", "Signature:"], ["Name:", ""], ["Designation:", ""]], [["S.No.", "Data Field/Records", "Description"], ["1", "Participant Id", "Unique Participant Id provided by the registry"]], [["2", "Cred", "Participant credential records"], ["3", "Cred.id", "Credential record unique id"], ["4", "Cred.type", "Credential type"], ["5", "Cred.key_1", "Place holder field purposed based on type"], ["6", "Cred.key_2", "Place holder field purposed based on type"], ["7", "Cred.key_3", "Place holder field purposed based on type"], ["8", "Contact", "Participant contact records"], ["9", "Contact.id", "Contact record unique id"], ["10", "Contact.type", "Contact type"], ["11", "Contact.key_1", "Place holder field purposed based on type"], ["12", "Contact.key_2", "Place holder field purposed based on type"], ["13", "Contact.key_3", "Place holder field purposed based on type"], ["14", "Contact.key_4", "Place holder field purposed based on type"], ["15", "Key", "Participant key records"], ["16", "Key.uk_id", "Unique Key Id provided by Registry"], ["17", "Key.signing_pub", "Signing Public Key"], ["18", "Key.encryption_pub", "Encryption Public Key"], ["19", "Key.valid_from", "Key valid from timestamp"], ["20", "Key.valid_to", "Key valid till timestamp"], ["21", "URI", "Participant URI records"], ["22", "URI.id", "participant unique uri id"], ["23", "URI.url", "url of the participant"], ["24", "Location", "Participant location records"], ["25", "Location.id", "Location record unique id"], ["26", "Location.city", "Array of city reference identifiers"], ["27", "Location.country", "Array of country reference identifiers"]], [["28", "Location.geojson", "geo json format definition of location"], ["29", "Mapping", "Mapping Records"], ["30", "Mapping.id", "Mapping record unique identifier"], ["31", "Mapping.domain", "Participant transactional domain"], ["32", "Mapping.type", "Participant transactional type"], ["33", "Mapping.uri_id", "URI record reference id"], ["34", "Mapping.location_id", "Location record reference id"], ["35", "Request ID", "unique request id, generated by participant for\neach request"], ["36", "callback_uri", "Participant callback uri for validation &\nverification on each request"]], [["", null, null, "", null, null, "", null, null, "", null, null, "", null, null], ["", "S.No.", "", "", "Requirement Type", "", "", "Sandbox", "", "", "Pre Production", "", "", "Production", ""], ["", null, null, "", null, null, "", null, null, "", null, null, "", null, null], ["1", null, null, "Uptime", null, null, ">=99%", null, null, ">=99.9%", null, null, ">=99.99%", null, null], ["2", null, null, "RPO", null, null, "-", null, null, "15 mins", null, null, "0", null, null], ["3", null, null, "RTO", null, null, "-", null, null, "30 mins", null, null, "10 mins", null, null], ["4", null, null, "Application response\ntime(except subscribe\nAPI)", null, null, "<100 milli-sec", null, null, "<100 milli-sec", null, null, "<10 milli-sec", null, null], ["5", null, null, "Response Time as\nmeasured at data\ncenter edge(except\nsubscribe API)", null, null, "<1000 milli-sec", null, null, "<1000 milli-sec", null, null, "<200 milli-sec", null, null], ["6", null, null, "Throughput", null, null, "10 TPS", null, null, "50 TPS", null, null, "5000 TPS", null, null], ["7", null, null, "Concurrent users (live\nnetwork participants)", null, null, "100", null, null, "500", null, null, "1000. Scalable to\n5,000", null, null], ["8", null, null, "High Availability", null, null, "NA", null, null, "NA", null, null, "DC and DR in Active-\nactive mode on the\nbidder selected cloud\nplatform", null, null]], [["S.\nNo.", "Type of\ncomponent /\nproduct /\nservice", "Unit of\nmeasure", "Number\nof units", "Uni\nt\nrate", "Sub-\nTotal", "Taxe\ns", "Total\nincl.\ntaxes"], ["2", "Cost of\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS", "Per-month", "36", "", "", "", ""]], [["", "", "", "", null, null], ["S. No.", "Milestone / Deliverable", "Timeline", "", "Liquidated damages, if any,", ""], [null, null, null, null, "applicable", null], ["", "", "", "", null, null], ["1", "Signing of the contract", "T", "Not applicable", null, null], ["2", "Submission of detailed\ndesign document", "T+6 weeks", "1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay", null, null], ["3", "Submission of the UAT\nplan with detailed test\ncases and test data", "T+12 weeks", "1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay", null, null], ["4", "Security testing (VAPT\nand App scan by a CERT-\nIn empanelled agency),\nPerformance testing and\nbenchmarking of system\nprior to go-live and\nnecessary fine-tuning", "T+18 weeks", "1% of cost head (A) as\nmentioned in commercial bid\ncontract for every week of delay", null, null], ["5", "Completion of UAT and", "T+18 weeks (=", "1% of cost head (A) as", null, null]], [["", "", "", "", null, null], ["S. No.", "Milestone / Deliverable", "Timeline", "", "Liquidated damages, if any,", ""], [null, null, null, null, "applicable", null], ["", "", "", "", null, null], ["", "solution Go-Live along\nwith replication of the\nexisting data in the\nRegistry database", "T1)", "mentioned in commercial bid\ncontract for every week of delay", null, null], ["6", "Submission of quarterly\nSLA compliance report", "Before 15th of\nnext month\nafter end of\nquarter", "1% of quarterly amount payable\nfor every week of delay", null, null], ["7", "Submission of the\nKnowledge transition\nreport and complete\nregistry documentation", "T1+ 12\nquarters", "1% of quarterly amount payable\nfor every week of delay", null, null]], [["SLA\nDescription", "Availability of Registry as a solution"], ["Scope of SLA", "Applies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry."], ["Tools, methods\nor scripts to be\nused to\nmeasure SLA", "Healthcheck service to be implemented by MSP \u2013 a custom monitoring\nscript shall be executed once every minute from the SLA monitoring\nserver."], ["Process to\ncapture data or\nmeasure the\nparameter", "The availability of registry shall be measured as follows:\ni. From the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\nii. Based to the response obtained from each API, availability shall\nbe computed.\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution."], ["SLA calculation", "Will be calculated using the below formula.\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2013 Planned Downtime)]} *100\nPlanned Downtime permissible for each API = 15 minutes per quarter\nTotal Time = 24 X 7 measured over a period of one calendar month."]], [["", "[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\nOverall Availability % of Registry = ROUND ( [Availability % for each\nAPI]/Number of APIs, 2)\n\ud835\udef4\ud835\udef4", null], ["SLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nProduction\nenvironment", "", null], [null, "SLA Level", "Applicable LD as % of quarterl\nof quarterly payment due"], [null, ">=99.99%", "None"], [null, "<99.99% and >= 99.9%", "1%"], [null, "<99.9% and >= 99%", "2%"], [null, "<99% and >=98%", "3%"], [null, "<98% and >=97%", "4%"], [null, "<97%", "5%"], ["SLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nPre-\nProduction\nenvironment", "", null], [null, "SLA Level", "Applicable LD as % of quarterl\nof quarterly payment due"], [null, ">=99.9%", "None"], [null, "<99.9%", "0.5%"], [null, "", null], ["SLA target and\nSeverity level\nfor computation\nof Liquidated\nDamages for\nSandbox\nenvironment", "", null], [null, "SLA Level", "Applicable LD as % of quarterl\nof quarterly payment due"], [null, ">=99%", "None"], [null, "<99%", "0.5%"], ["Assumptions, if\nany", "The MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.", null], ["Measurement\ninterval", "Monthly", null], ["Reporting\ninterval", "Quarterly", null], ["Reporting", "Automated SLA dashboard to be provided by MSP", null]], [["SLA Description", "Response time of Registry as a solution", null], ["Scope of SLA", "Applies to response time of Registry as a solution,\nspecifically the APIs through which Network Participants\naccess the Registry.", null], ["Tools, methods or scripts\nto be used to measure\nSLA", "Tool to be implemented by MSP \u2013 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API.", null], ["Process to capture data or\nmeasure the parameter", "The response time of registry shall be measured as follows:\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.", null], ["SLA calculation", "Will be calculated using the below formula.\nFormula: Average response time of Registry =\nROUND(simple average of response times of each API\nexcluding outliers,2)\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.", null], ["SLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment", "SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 10 millisecond\nAverage response time of Registry 3%\napplication > 10 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 200 millisecond\nAverage response time of Registry 3%", null], [null, "SLA Level", "Applicable LD\nas % of\nquarterly\npayment"], [null, "Average response time of Registry\napplication <= 10 millisecond", "None"], [null, "Average response time of Registry\napplication > 10 millisecond", "3%"], [null, "", null], [null, "Average response time of Registry\nas measured from data center\nedge <= 200 millisecond", "None"], [null, "Average response time of Registry", "3%"]], [["", "application > 200 millisecond", "", ""], ["SLA target and Severity\nlevel for computation of\nLiquidated Damages for\nPre-Production\nenvironment", "SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 1%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 1%\napplication > 1000 millisecond", null, null], [null, "SLA Level", "Applicable LD\nas % of\nquarterly\npayment", null], [null, "Average response time of Registry\napplication <= 100 millisecond", "None", null], [null, "Average response time of Registry\napplication > 100 millisecond", "1%", null], [null, "", null, null], [null, "Average response time of Registry\nas measured from data center\nedge <= 1000 millisecond", "None", null], [null, "Average response time of Registry\napplication > 1000 millisecond", "1%", null], ["SLA target and Severity\nlevel for computation of\nLiquidated Damages for\nSandbox environment", "SLA Level Applicable LD\nas % of\nquarterly\npayment\nAverage response time of Registry None\napplication <= 100 millisecond\nAverage response time of Registry 0.5%\napplication > 100 millisecond\nAverage response time of Registry None\nas measured from data center\nedge <= 1000 millisecond\nAverage response time of Registry 0.5%\napplication > 1000 millisecond", null, null], [null, "SLA Level", "Applicable LD\nas % of\nquarterly\npayment", null], [null, "Average response time of Registry\napplication <= 100 millisecond", "None", null], [null, "Average response time of Registry\napplication > 100 millisecond", "0.5%", null], [null, "", null, null], [null, "Average response time of Registry\nas measured from data center\nedge <= 1000 millisecond", "None", null], [null, "Average response time of Registry\napplication > 1000 millisecond", "0.5%", null], ["Assumptions, if any", "The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\ntools.", null, null], ["Measurement interval", "Monthly", null, null], ["Reporting interval", "Quarterly", null, null], ["Reporting", "Automated SLA dashboard to be provided by MSP", null, null]], [["SLA Description", "Incident Response Time", null], ["Scope of SLA", "Applies to all Incidents", null], ["Tools, methods or\nscripts to be used to\nmeasure SLA", "Incident and Service Desk Management tool to be implemented by MSP", null], ["Process to capture\ndata or measure the\nparameter for\nProduction\nenvironment", "Once an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 15 minutes\nP2 60 minutes\nP3 2 hours", null], [null, "Priority", "Response time"], [null, "P1", "15 minutes"], [null, "P2", "60 minutes"], [null, "P3", "2 hours"], ["Process to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments", "Once an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours", null], [null, "Priority", "Response time"], [null, "P1", "30 minutes"], [null, "P2", "90 minutes"], [null, "P3", "3 hours"], ["SLA calculation", "Formula:\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined", null]], [["SLA Description", "Incident Response Time"], ["", "timelines during the period / Number of P3 incidents opened during the\nperiod"], ["SLA target", "Response Time compliance =100%"], ["Liquidated\nDamages", "2% of quarterly payment if SLA target is not met"], ["Measurement\ninterval", "Monthly"], ["Reporting interval", "Quarterly"], ["Reporting", "Using SLA reporting tool"]], [["SLA Description", "Incident Resolution Time", null], ["Scope of SLA", "Applies to all incidents", null], ["Tools, methods or\nscripts to be used to\nmeasure SLA", "Incident and Service Desk Management tool to be implemented by\nMSP", null], ["Process to capture\ndata or measure the\nparameter for\nProduction\nenvironment", "Measurement of SLA\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\nPriority Resolution time\nP1 8 Hours\nP2 2 Days\nP3 5 days\nP4 - Service Request 15 days", null], [null, "Priority", "Resolution time"], [null, "P1", "8 Hours"], [null, "P2", "2 Days"], [null, "P3", "5 days"], [null, "P4 - Service Request", "15 days"], ["Process to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments", "Measurement of SLA\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\nPriority Resolution time\nP1 15 Hours\nP2 3 Days", null], [null, "Priority", "Resolution time"], [null, "P1", "15 Hours"], [null, "P2", "3 Days"]], [["", "P3", "6 days", ""], [null, "P4 - Service Request", "15 days", null], ["SLA calculation", "Formulae:\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period", null, null], ["SLA target", "Resolution Time % = 100%", null, null], ["Severity level for\ncomputation of\nLiquidated Damages", "2% of quarterly payment due", null, null], ["Measurement interval", "Monthly", null, null], ["Reporting interval", "Quarterly", null, null], ["Reports or Data to be\nsubmitted, if any", "Automated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n1. Incident Resolution Report\n2. Incident Request Work \u201cIn Progress\u201d Report\n3. Incident average resolution report\n4. Incident number of duplicates\n5. % of incidents converted as Problem\n6. % repeat unknown cause of/incident\n7. Number of incidents with priorities modified during their course\nof resolution report\n8. RCA of P1 and P2 resolved.", null, null]], [["{"], ["\"publicKey\": \"S5h8gLhvW1AWP8k5spsGGSWXII0pAL6Z78bHpDF"], ["1SbE=\","], ["\"privateKey\": \"vIk+FxxD5n8LcG0mgR6qL0Sln+Qo/AUQdZGzpeoU"], ["Un0=\""], ["}"]], [["{"], ["\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dX2amsNb1zyq"], ["BiLLT+e2+mzJ2QH0=\","], ["\"privateKey\": \"MFECAQEwBQYDK2VuBCIEINhPuAXdILHJvfhngONl0aIQ8"], ["IJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2"], ["+mzJ2QH0=\""], ["}"]], [["{"], ["\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\","], ["\"clientPrivateKey\":\"cDWjNpLHYFFF8zFXBQoBlrmsXezndSj1JZRzSZZoKB"], ["4=\""], ["}"]], [["\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP"], ["X9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\""], [""]], [["{"], ["\"value\": \"cNK5xU6tKn2VJ47AKL6cQQC0gnbpnByqvEXboCJPnbA=\","], ["\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iMHx0Zo"], ["dBn0P9UTHcOkeczDmeOVkU=\","], ["\"Subscriber_PrivateKey\": \"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI"], ["1jIIcjmzWgPQlIg/T1Q6A3pZ0AIWp6gSEAJGnKRTAEcSvpgD0mw9gBHv94E"], ["3w8sTtmPlszuXIEAF0=\""], ["}"]], [["{"], ["\"context\": {"], ["\"operation\": {"], ["\"ops_no\": 5 // change input depending on registration scenario"]], [["}", null], [null, "},"], ["\"message\": {", null], ["\"entity\": {", null], ["\"gst\": {", null], ["\"legal_entity_name\": \"Protean E-Gov\",", null], ["\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati", null], ["Bapat Marg, Lower Parel, Mumbai 013.\",", null], ["\"city_code\": [", null], ["\"std:080\"", null], ["],", null], ["\"gst_no\": \"27AAECF8760H1ZC\"", null], ["},", null], ["\"pan\": {", null], ["\"name_as_per_pan\": \"Protean E-Gov\",", null], ["\"pan_no\":\"AAECF8760H\",", null], ["\"date_of_incorporation\": \"05/01/2022\"", null], ["},", null], ["\"callback_url\": \"/test\",", null], ["\"name_of_authorised_signatory\": \"NSDL\",", null], ["\"address_of_authorised Signatory\": \"Lower Parel,\",", null], ["\"email_id\": \"contact@nsdl.co.in\",", null], ["\"country\": \"IND\",", null], ["\"mobile_no\": \"8734598345\",", null], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",", null], ["\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",", null], ["\"key_pair\": {", null], ["\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\",", null], ["\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT", null], ["cy5ZzuI0inWWf5fGZBs=\",", null], ["\"valid_from\": \"2022-07-03T06:27:54.101Z\",", null], ["\"valid_until\": \"2023-07-03T06:27:54.101Z\"", null], ["}", null], ["},", null], ["", null], ["// change type and msn input depending on registration scenario", null], ["\"network_participant\": [", null], ["{", null], ["\"subscriber_url\": \"/\",", null], ["\"domain\": \"nic2004:52110\",", null], ["\"type\": \"buyerApp\",", null], ["\"msn\":false,", null], ["\"city_code\": [", null], ["\"std:080\"", null], ["],", null], ["", null], ["// change input depending on registration scenario; the second network participant block only", null], ["used in registration scenarios 4 and 5.", null], ["\"network_participant\": [", null], ["{", null], ["\"subscriber_url\": \"/\",", null], ["\"domain\": \"nic2004:52110\",", null], ["\"type\": \"sellerApp\",", null]], [["\"msn\": true,"], ["\"city_code\": ["], ["\"std:080\""], ["],"], ["\"seller_on_record\": ["], ["{"], ["\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\","], ["\"key_pair\": {"], ["\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k="], ["\","], ["\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW"], ["4mYqU6Aak/XiOFKDFAnUt0qRhM=\","], ["\"valid_from\": \"2022-07-03T06:27:54.101Z\","], ["\"valid_until\": \"2023-07-03T06:27:54.101Z\""], ["},"], ["\"city_code\": ["], ["\"std:080\""], ["]"], ["}"], [""], ["]"], ["}"], [""], ["],"], ["\"timestamp\": \"2022-12-08T12:35:54.101Z\","], ["\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\""], ["}"], ["}"]], [["{"], ["\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\","], ["\"clientPublicKey\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"sign\": \"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV"], ["APX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\""], ["}"]], [["{"], ["\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\","], ["\"clientPrivateKey\": \"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5"], ["FFl5oUrH/33bA/KulLErqGstlgSEA+XpYc09S8X8mkgNTlf6nlPRbL46TCwEXl"], ["AIkjP5tRh4=\","], ["\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkIrkyxTqyssjtYJ3KRN"], ["D5FnzK5MDrwlK3kC8=\""], ["}"]], [["{"], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\""], ["}"]], [["["], ["{"], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\","], ["\"status\": \"SUBSCRIBED\","], ["\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\","], ["\"subscriber_url\": \"/subscriber1\","], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\","], ["\"valid_from\": \"2022-07-14T06:48:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\","], ["\"type\": \"buyerApp\","], ["\"signing_public_key\":"], ["\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"encr_public_key\":"], ["\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/"], ["ac7kk=\","], ["\"created\": \"2022-07-14T06:48:54.101Z\","], ["\"updated\": \"2023-01-25T11:39:53.868Z\","], ["\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\","]], [["\"city\": \"std:080\""], ["},"], ["{"], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\","], ["\"status\": \"SUBSCRIBED\","], ["\"ukId\": \"2233bd55-6a80-4219-823e-b9e157976d4g\","], ["\"subscriber_url\": \"/subscriber2\","], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\","], ["\"valid_from\": \"2022-07-14T06:48:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\","], ["\"type\": \"sellerApp\","], ["\"signing_public_key\":"], ["\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"encr_public_key\":"], ["\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/"], ["ac7kk=\","], ["\"created\": \"2022-07-14T06:48:54.101Z\","], ["\"updated\": \"2023-01-25T11:39:53.868Z\","], ["\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\","], ["\"city\": \"std:080\""], ["},"], ["{"], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\","], ["\"status\": \"SUBSCRIBED\","], ["\"ukId\": \"99b25419-2587-42bf-9559-ca0ac91e3808\","], ["\"subscriber_url\": \"/subscriber2\","], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\","], ["\"valid_from\": \"2022-07-14T06:49:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\","], ["\"type\": \"sellerApp\","], ["\"signing_public_key\":"], ["\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"encr_public_key\":"], ["\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6"], ["LH0U=1\","], ["\"created\": \"2022-07-14T06:48:54.101Z\","], ["\"updated\": \"2023-01-25T11:39:53.868Z\","], ["\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\","], ["\"city\": \"std:080\""], ["},"], ["{"], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\","], ["\"status\": \"SUBSCRIBED\","], ["\"ukId\": \"67b25419-5555-42bf-9559-ca0ac91e7878\","], ["\"subscriber_url\": \"/subscriber2\","], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\","], ["\"valid_from\": \"2022-07-14T06:49:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\","], ["\"type\": \"sellerApp\","]], [[null, "\"signing_public_key\":"], [null, "\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], [null, "\"encr_public_key\":"], [null, "\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6"], [null, "LH0U=1\","], [null, "\"created\": \"2022-07-14T06:48:54.101Z\","], [null, "\"updated\": \"2023-01-25T11:39:53.868Z\","], [null, "\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\","], [null, "\"city\": \"std:080\""], [null, "}"], [null, "]"], ["", null]], [["{"], ["\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option5\","], ["\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\","], ["\"timestamp\": \"2022-12-20T14:53:07.060Z\","], ["\"signature\": \"RZvA+EwOa77fJcqSxuj4+JGr115oMtlVKdyG8febGjivv"], ["OpZZUAX0tLAgapmDIX+xQhl3RS2qpCX3s6mS3uoCw==\","], ["\"search_parameters\": {"], ["\"country\": \"IND\","], ["\"domain\": \"nic2004:52110\""], ["}"], ["}"]], [["["], ["{"], ["\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\","]], [["\"city\": ["], ["\"std:080\""], ["],"], ["\"country\": \"IND\","], ["\"valid_from\": \"2022-07-14T06:48:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\","], ["\"signing_public_key\": \"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"encr_public_key\":"], ["\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/ac7"], ["kk=\","], ["\"created\": \"2022-07-14T06:48:54.101Z\","], ["\"updated\": \"2023-01-25T11:39:53.868Z\","], ["\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\","], ["\"network_participant\": ["], ["{"], ["\"subscriber_url\": \"/subscriber1\","], ["\"domain\": \"nic2004:52110\","], ["\"type\": \"buyerApp\","], ["\"msn\": false,"], ["\"city_code\": ["], ["\"std:080\""], ["],"], ["\"seller_on_record\": []"], ["},"], ["{"], ["\"subscriber_url\": \"/subscriber2\","], ["\"domain\": \"nic2004:52110\","], ["\"type\": \"sellerApp\","], ["\"msn\": true,"], ["\"city_code\": ["], ["\"std:080\""], ["],"], ["\"seller_on_record\": ["], ["{"], ["\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\","], ["\"key_pair\": {"], ["\"signing_public_key\":"], ["\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","], ["\"encryption_public_key\":"], ["\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH"], ["0U=1\","], ["\"valid_from\": \"2022-07-14T06:49:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\""], ["},"], ["\"city_code\": ["], ["\"std:080\""], ["]"], ["},"], ["{"], ["\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\","], ["\"key_pair\": {"], ["\"signing_public_key\":"], ["\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\","]], [["\"encryption_public_key\":"], ["\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH"], ["0U=1\","], ["\"valid_from\": \"2022-07-14T06:49:54.101Z\","], ["\"valid_until\": \"2023-07-20T11:57:54.101Z\""], ["},"], ["\"city_code\": ["], ["\"std:080\""], ["]"], ["}"], ["]"], ["}"], ["]"], ["}"], ["]"]]], "ocr_text": "Ref: ONDC/Tech/Registry/12-2024/P-101\n\nOpen Network for Digital Commerce\n\nRequest for Proposal (RFP) for Selection of\nManaged Services Provider (MSP) for upgrade\nand maintenance of ONDC Registry\n\n10th Feb 2025\n\nRef: ONDC/Tech/Registry/12-2024/P-101\n\nONiDC\n\nOpen Network for Digital Commerce\n\nRequest for Proposal (RFP) for Selection of\nManaged Services Provider (MSP) for upgrade\nand maintenance of ONDC Registry\n\n10th Feb 2025\n\nONG C\n\nOpen Ne\n\nAPPENDIX 2\n\n1. Considerations:\nService Fee............:.:::::08\n\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be\nmarked up in the invoice for Service Fee on actual basis and shall be borne and\npaid by Client to the Service Provider. The responsibility to pay such taxes to the\napplicable authorities will be that of the Service Provider. The Service Provider\nshall ensure timely deposit of GST amount as well as filing of GST returns with the\napplicable authorities such that the Client is able to avail input credit on such GST\namount. The Service Provider shall raise invoice on a monthly basis/as per\npayment milestones which shall include monthly progress report.\n\nc) The Service Fee payable hereunder shall be paid subject to deduction of income\ntax at source / withholding taxes, levies or other deductions at the applicable rates.\nIf payment to a Service Provider is subject to Tax Deduction at Source (TDS), the\nClient agrees to comply with the relevant rules and regulations under the Income\nTax Act and to provide the TDS certificates to the Service Provider within the\nprescribed timelines.\n\nd) For out of pocket expenses, the Service Provider shall seek prior approval of all\nsuch expenses from the designated authorised representative of the Client\nduring incurring any such expense.\n\ne) If work for Client requires that personnel perform Services outside the city, state,\nprovince, or country in which such personnel are based, Client will reimburse the\nService Provider for increased tax and administrative costs incurred by the Service\nprovider and/or its personnel. Client will be responsible for the payment of taxes in\nconnection with this Agreement incurred on transactions between and among the\nService Provider, its Affiliates, and third-party subcontractors to the extent\napplicable to the performance of Services under this Agreement.\n\nf) Payment terms and conditions:\n\nSubmission and Payment of Invoices. The Service Provider shall submit an invoice\nfor performance of the Services and Deliverables as per this APPENDIX 2. Invoices\nshall be submitted to the designated contact of the Client. Invoices must include a SLA\nreports, description of tasks performed, deliverables delivered and hours spent\nperforming such tasks broken down by dates, as applicable.\n\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii)\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of\nsuch invoices.\n\nAny eligible pre-approved out of pocket expenses (including travel expenses) incurred\nby the Service Provider for the performance of the Services and/ or Deliverables will\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 33 of 125\n\nONC C\n\nOpen Ne\n\nAPPENDIX 2\n\n1. Considerations:\nService Fee............:.:::::08\n\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be\nmarked up in the invoice for Service Fee on actual basis and shall be borne and\npaid by Client to the Service Provider. The responsibility to pay such taxes to the\napplicable authorities will be that of the Service Provider. The Service Provider\nshall ensure timely deposit of GST amount as well as filing of GST returns with the\napplicable authorities such that the Client is able to avail input credit on such GST\namount. The Service Provider shall raise invoice on a monthly basis/as per\npayment milestones which shall include monthly progress report.\n\nc) The Service Fee payable hereunder shall be paid subject to deduction of income\ntax at source / withholding taxes, levies or other deductions at the applicable rates.\nIf payment to a Service Provider is subject to Tax Deduction at Source (TDS), the\nClient agrees to comply with the relevant rules and regulations under the Income\nTax Act and to provide the TDS certificates to the Service Provider within the\nprescribed timelines.\n\nd) For out of pocket expenses, the Service Provider shall seek prior approval of all\nsuch expenses from the designated authorised representative of the Client\nduring incurring any such expense.\n\ne) If work for Client requires that personnel perform Services outside the city, state,\nprovince, or country in which such personnel are based, Client will reimburse the\nService Provider for increased tax and administrative costs incurred by the Service\nprovider and/or its personnel. Client will be responsible for the payment of taxes in\nconnection with this Agreement incurred on transactions between and among the\nService Provider, its Affiliates, and third-party subcontractors to the extent\napplicable to the performance of Services under this Agreement.\n\nf) Payment terms and conditions:\n\nSubmission and Payment of Invoices. The Service Provider shall submit an invoice\nfor performance of the Services and Deliverables as per this APPENDIX 2. Invoices\nshall be submitted to the designated contact of the Client. Invoices must include a SLA\nreports, description of tasks performed, deliverables delivered and hours spent\nperforming such tasks broken down by dates, as applicable.\n\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii)\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of\nsuch invoices.\n\nAny eligible pre-approved out of pocket expenses (including travel expenses) incurred\nby the Service Provider for the performance of the Services and/ or Deliverables will\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 33 of 125\n\nOpen Network for Digital Commerce\n\nbe reimbursable within thirty (30) days after receipt of debit note. Such debit note for\nout of pocket expenses shall be supported by receipts, tickets (or other evidence\nverifying such expense to the reasonable satisfaction of Client) and in the case of a\ndispute concerning any expense the decision of Client shall be final and binding.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 34 of 125\n\nbe reimbursable within thirty (30) days after receipt of debit note. Such debit note for\nout of pocket expenses shall be supported by receipts, tickets (or other evidence\nverifying such expense to the reasonable satisfaction of Client) and in the case of a\ndispute concerning any expense the decision of Client shall be final and binding.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 34 of 125\n\nOpen Ne\n\nSection 3 - Change Management Process\n\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC\nand Registry MSP recognize that changes may be required during the project. ONDC also\nrecognizes that these changes may require modification to the manpower requirements and/or\ntools and may thus have a financial impact. The MSP will endeavour, wherever reasonably\npracticable, to effect change without an increase in the contract value, and ONDC or its\nnominated agencies will work with the MSP to ensure that all changes are discussed and\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions\nwhich will apply to changes to the agreement.\n\n1. Conditions for Change Order\n\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP\nrequests to carry out the following changes in relation to the services rendered by MSP:\n\n.1.__ Request for changes to the infrastructure\n\n.2. Request for change in manpower requirements because of change in scope of\nwork as set out in Section 4 - Terms of reference or due to changes in the\nservice level agreements.\n\n1.3. | Request for enhancement of features of a particular component of registry\n\narchitecture.\n\n1.4... Request for rendering services of third party software/hardware tools to\n\nenhance Registry functionality, such as a CRM tool for managing participants\u2019\n\ngrievances.\n\n1\n1\n\n2. | Change Management Process\n\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to\nperform the effort estimation for application related changes, as mentioned in\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA)\nor T-Shirt sizing or any other industry defined model for effort estimation. MSP\nshall develop the estimation model in consultation with ONDC. Post approval\nfrom ONDC, for every type of change request, this model shall be used for\nestimation purposes by MSP and ONDC shall review/approve the effort basis\nof this model.\n\n2.2. | Change Request in respect of the Agreement will emanate from the ONDC or\nMSP. MSP\u2019s Program Manager will be responsible for obtaining approval for\nthe change and will initiate the Change Request by completing Change Control\nNote (CCN) (refer Change Control Note Form). CCNs will be submitted to the\nClient, who will acknowledge receipt of the CCN.\n\n2.3. The MSP and ONDC or its nominated agencies, during the term of the\nAgreement and while preparing the CCN, shall determine whether the change\nis beyond the scope of services as detailed in Section 4-Terms of reference.\n\n2.4. The total value of all change orders to be issued under this contract shall not\nexceed 50% of the total contract value. It is hereby also clarified that any\nchange control suggested beyond 50 % (fifty percent) of the total contract value\nwill be beyond the scope of the change control process. It is hereby clarified\nthat the 50% (fifty percent) of the total contract value as stated in herein above\nis calculated on the basis of bid value (exclusive of taxes) submitted by the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 35 of 125\n\nOpen Ne\n\nSection 3 - Change Management Process\n\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC\nand Registry MSP recognize that changes may be required during the project. ONDC also\nrecognizes that these changes may require modification to the manpower requirements and/or\ntools and may thus have a financial impact. The MSP will endeavour, wherever reasonably\npracticable, to effect change without an increase in the contract value, and ONDC or its\nnominated agencies will work with the MSP to ensure that all changes are discussed and\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions\nwhich will apply to changes to the agreement.\n\n1. Conditions for Change Order\n\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP\nrequests to carry out the following changes in relation to the services rendered by MSP:\n\n.1.__ Request for changes to the infrastructure\n\n.2. Request for change in manpower requirements because of change in scope of\nwork as set out in Section 4 - Terms of reference or due to changes in the\nservice level agreements.\n\n1.3. | Request for enhancement of features of a particular component of registry\n\narchitecture.\n\n1.4... Request for rendering services of third party software/hardware tools to\n\nenhance Registry functionality, such as a CRM tool for managing participants\u2019\n\ngrievances.\n\n1\n1\n\n2. | Change Management Process\n\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to\nperform the effort estimation for application related changes, as mentioned in\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA)\nor T-Shirt sizing or any other industry defined model for effort estimation. MSP\nshall develop the estimation model in consultation with ONDC. Post approval\nfrom ONDC, for every type of change request, this model shall be used for\nestimation purposes by MSP and ONDC shall review/approve the effort basis\nof this model.\n\n2.2. | Change Request in respect of the Agreement will emanate from the ONDC or\nMSP. MSP\u2019s Program Manager will be responsible for obtaining approval for\nthe change and will initiate the Change Request by completing Change Control\nNote (CCN) (refer Change Control Note Form). CCNs will be submitted to the\nClient, who will acknowledge receipt of the CCN.\n\n2.3. The MSP and ONDC or its nominated agencies, during the term of the\nAgreement and while preparing the CCN, shall determine whether the change\nis beyond the scope of services as detailed in Section 4-Terms of reference.\n\n2.4. The total value of all change orders to be issued under this contract shall not\nexceed 50% of the total contract value. It is hereby also clarified that any\nchange control suggested beyond 50 % (fifty percent) of the total contract value\nwill be beyond the scope of the change control process. It is hereby clarified\nthat the 50% (fifty percent) of the total contract value as stated in herein above\nis calculated on the basis of bid value (exclusive of taxes) submitted by the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 35 of 125\n\nONG C\n\nOpen Ne\n\nMSP and accepted by the ONDC or its nominated agencies or as decided and\napproved by ONDC or its Nominated Agencies.\n\n3. Quotation\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide\nas a minimum:\n\n3.1.1. a description of the change;\n\n3.1.2. a list of deliverables required for implementing the change;\n\n3.1.3. a time table for implementation;\n\n3.1.4. an estimate of effort (using the estimation model, approved by ONDC)\nfor the proposed change;\n\n3.1.5. any relevant acceptance criteria;\n\n3.1.6. | an assessment of the value of the proposed change;\n\n3.1.7. Profiles of Resources to be added to the team to effect the change.\n\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake\nits own internal review of the proposal and obtain all necessary internal\napprovals. As a part of this internal review process, the MSP shall consider the\nmateriality of the proposed change in the context of the agreement and the total\neffect that may arise from implementation of the change.\n\n4. Cost\n\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in\nthe quotation, preparation of CCNs and in the completion of its obligations\ndescribed in the change management process, provided the MSP meets the\nobligations as set out in the CCN. In the event the MSP is unable to meet the\nobligations as defined in the CCN then the cost of getting it done by a third\nparty by ONDC shall be borne by the MSP.\n\n4.2. Cost for Change Order:\n\n4.2.1. For the purpose of estimating the value with respect to staff costs and\ntools associated with change order approved by ONDC, the rates\n(exclusive of taxes) submitted by the MSP in their commercial bid shall\nbe used. Taxes will be applicable as per the prevailing laws and rates\nspecified therein.\n\n4.2.2. If anewskill set is required, the cost of such resource(s) should not be\nmore than an equivalent resource in terms of number of years of\nexperience for the resource for another skill set deployed during that\nparticular time period.\n\n4.2.3. If a new infrastructure component or tool is required to implement the\nchange, the cost of such a tool or infrastructure component should not\nbe more than the prevailing market rate or the unit cost submitted by\nthe Bidder in their commercial proposal, whichever is lower.\n\n5. | Change order and SLAs\n\n5.1. For activities carried out against change orders, the applicability of existing\nSLAs shall be evaluated by the ONDC and if found applicable, the same shall\ncontinue to be in force.\n\n5.2. For activities to be performed in a time bound manner against change orders,\nONDC may define additional milestone SLAs which will have an appropriate\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs\nshall be agreed upon between ONDC and MSP prior to submission of\nquotation by the MSP.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 36 of 125\n\nONC C\n\nOpen Ne\n\nMSP and accepted by the ONDC or its nominated agencies or as decided and\napproved by ONDC or its Nominated Agencies.\n\n3. Quotation\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide\nas a minimum:\n\n3.1.1. a description of the change;\n\n3.1.2. a list of deliverables required for implementing the change;\n\n3.1.3. a time table for implementation;\n\n3.1.4. an estimate of effort (using the estimation model, approved by ONDC)\nfor the proposed change;\n\n3.1.5. any relevant acceptance criteria;\n\n3.1.6. | an assessment of the value of the proposed change;\n\n3.1.7. Profiles of Resources to be added to the team to effect the change.\n\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake\nits own internal review of the proposal and obtain all necessary internal\napprovals. As a part of this internal review process, the MSP shall consider the\nmateriality of the proposed change in the context of the agreement and the total\neffect that may arise from implementation of the change.\n\n4. Cost\n\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in\nthe quotation, preparation of CCNs and in the completion of its obligations\ndescribed in the change management process, provided the MSP meets the\nobligations as set out in the CCN. In the event the MSP is unable to meet the\nobligations as defined in the CCN then the cost of getting it done by a third\nparty by ONDC shall be borne by the MSP.\n\n4.2. Cost for Change Order:\n\n4.2.1. For the purpose of estimating the value with respect to staff costs and\ntools associated with change order approved by ONDC, the rates\n(exclusive of taxes) submitted by the MSP in their commercial bid shall\nbe used. Taxes will be applicable as per the prevailing laws and rates\nspecified therein.\n\n4.2.2. If anewskill set is required, the cost of such resource(s) should not be\nmore than an equivalent resource in terms of number of years of\nexperience for the resource for another skill set deployed during that\nparticular time period.\n\n4.2.3. If a new infrastructure component or tool is required to implement the\nchange, the cost of such a tool or infrastructure component should not\nbe more than the prevailing market rate or the unit cost submitted by\nthe Bidder in their commercial proposal, whichever is lower.\n\n5. | Change order and SLAs\n\n5.1. For activities carried out against change orders, the applicability of existing\nSLAs shall be evaluated by the ONDC and if found applicable, the same shall\ncontinue to be in force.\n\n5.2. For activities to be performed in a time bound manner against change orders,\nONDC may define additional milestone SLAs which will have an appropriate\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs\nshall be agreed upon between ONDC and MSP prior to submission of\nquotation by the MSP.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 36 of 125\n\nONG C\n\nOpen Ne\n\n5.3. In the event that any of the change orders requires definition of new SLAs,\nClient may add additional SLAs to cover the additional scope of activities as\ndefined in the change orders. Such milestone SLAs shall be agreed upon\nbetween ONDC and MSP prior to submission of quotation by the MSP.\n\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP\nand communicated by the ONDC in writing as part of the change order issued\n\nto the MSP.\n6. Obligations\n6.1. It shall be binding on MSP to implement any proposed changes as per the\n\nterms and conditions of the change order, once approval in accordance with\nabove provisions has been given.\n\n6.2. The acceptance criteria for any such \u2018Change\u2019 will remain the same as\ndescribed in the Agreement with respect to the performance and quality\nparameters.\n\n6.3. The MSP\u2019s obligations with respect to such change order shall remain in\naccordance with the Agreement.\n\n6.4. Agreed manpower requirements for additional scope of work through a change\norder process will not be revised during the implementation of the change\nrequest.\n\nChange control note Form\n\nPART A: INITIATION\n\nChange Request Number:\n\nTitle:\n\nInitiator:\n\nBrief Description of Proposed\nChange:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 37 of 125\n\nOpen Ne\n\n5.3. In the event that any of the change orders requires definition of new SLAs,\nClient may add additional SLAs to cover the additional scope of activities as\ndefined in the change orders. Such milestone SLAs shall be agreed upon\nbetween ONDC and MSP prior to submission of quotation by the MSP.\n\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP\nand communicated by the ONDC in writing as part of the change order issued\n\nto the MSP.\n6. Obligations\n6.1. It shall be binding on MSP to implement any proposed changes as per the\n\nterms and conditions of the change order, once approval in accordance with\nabove provisions has been given.\n\n6.2. The acceptance criteria for any such \u2018Change\u2019 will remain the same as\ndescribed in the Agreement with respect to the performance and quality\nparameters.\n\n6.3. The MSP\u2019s obligations with respect to such change order shall remain in\naccordance with the Agreement.\n\n6.4. Agreed manpower requirements for additional scope of work through a change\norder process will not be revised during the implementation of the change\nrequest.\n\nChange control note Form\n\nPART A: INITIATION\n\nChange Request Number:\n\nTitle:\n\nInitiator:\n\nBrief Description of Proposed\nChange:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 37 of 125\n\nChange Submitted to\n\nPart B: EVALUATION\n\nChange Request Number:\n\nDate:\n\nDetailed Description of Change:\n\nImpact:\n\nCost\n\nRisk\n\nOn Overall Project\n\nDeliverables Involved:\n\nDetailed Timelines:\n\nAvailable alternatives (if any):\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 38 of 125\n\nOpen Net\n\nChange Submitted to\n\nPart B: EVALUATION\n\nChange Request Number:\n\nDate:\n\nDetailed Description of Change:\n\nImpact:\n\nCost\n\nRisk\n\nOn Overall Project\n\nDeliverables Involved:\n\nDetailed Timelines:\n\nAvailable alternatives (if any):\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 38 of 125\n\nAny Other Relevant Information: Payment Terms:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nSignature:\n\nAuthority to Proceed (YES/NO):\n\nApproved Rejected\nComments: Comments:\nFor ONDC For MSP\nSignature: Signature:\nName:\n\nDesignation:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 39 of 125\n\nAny Other Relevant Information: Payment Terms:\n\nName & Designation:\n\n(On behalf of Initiator)\n\nSignature:\n\nAuthority to Proceed (YES/NO):\n\nApproved Rejected\nComments: Comments:\nFor ONDC For MSP\nSignature: Signature:\nName:\n\nDesignation:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 39 of 125\n\nOpen Network for Digital Commerce\n\nDate:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 40 of 125\n\nOpen Network for Digital Commerce\n\nDate:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 40 of 125\n\nOpen Ne\n\nSection 4 - Terms of Reference\n\n1. Introduction\n\nOpen Network for Digital Commerce (ONDC) is Govt. of India\u2019s initiative which enables e-\ncommerce networks based on open protocols which will enable commerce across different\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications\nin the network and they will communicate using open protocols. For enabling this broadly there\nare two infrastructure components that are essential to the network namely Gateway and\nRegistry. Incumbent agency (M/s Protean) has been supporting both of these integral\ncomponents as per the requirements of ONDC.\n\nThe Gateway enables discovery in the network. When a buyer (seeker) application wants to\nsearch the network for goods/services it sends the search intent to the Gateway which\nbroadcasts it to all the eligible sellers through seller applications (provider applications) who\nmay service this request. The seller applications in turn send their catalogues back to the\nbuyer applications asynchronously against the same intent as broadcast by the Gateway. The\nresponse to search intent is directly cascaded by seller apps to buyer apps, on end points\ndefined by buyer apps as part of the intent.\n\nThe Registry is a repository for storing the details of the network participants including seller\napp, buyer app and gateways. It is the meta data repository for all entities in the network, that\nincludes end point URLs, Public Keys etc.. All the network participants use the Registry to get\ndetails of other entities in the network. Registry has four main features:\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the\ncredentials of the existing NP on to the network\n2. Provide meta data details of onboarded entities to other authenticated network\nparticipants.\n3. Respond to gateway resolving the discovery intent from buyer apps.\n4. Host and provide authentication information for respective network participants to\nthe requester.\n\nIt is responsible for registering the network participants on the ONDC network . This involves\nverifying the identity and credentials of the participant, and adding them to a list of approved\nentities that are allowed to access and operate on the network. It ensures that only authorised\nentities are able to access the network and participate in transactions on the ONDC network.\nAll the transactions on the registry are authenticated using a state of an art key based signing\nalgorithm.\n\nThe Registry plays a pivotal role in discovering Network Participants (\u201cNP\u201d) on ONDC network\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up-to-\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying\npost authentication of their signatures.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 41 of 125\n\nONC C\n\nOpen Ne\n\nSection 4 - Terms of Reference\n\n1. Introduction\n\nOpen Network for Digital Commerce (ONDC) is Govt. of India\u2019s initiative which enables e-\ncommerce networks based on open protocols which will enable commerce across different\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications\nin the network and they will communicate using open protocols. For enabling this broadly there\nare two infrastructure components that are essential to the network namely Gateway and\nRegistry. Incumbent agency (M/s Protean) has been supporting both of these integral\ncomponents as per the requirements of ONDC.\n\nThe Gateway enables discovery in the network. When a buyer (seeker) application wants to\nsearch the network for goods/services it sends the search intent to the Gateway which\nbroadcasts it to all the eligible sellers through seller applications (provider applications) who\nmay service this request. The seller applications in turn send their catalogues back to the\nbuyer applications asynchronously against the same intent as broadcast by the Gateway. The\nresponse to search intent is directly cascaded by seller apps to buyer apps, on end points\ndefined by buyer apps as part of the intent.\n\nThe Registry is a repository for storing the details of the network participants including seller\napp, buyer app and gateways. It is the meta data repository for all entities in the network, that\nincludes end point URLs, Public Keys etc.. All the network participants use the Registry to get\ndetails of other entities in the network. Registry has four main features:\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the\ncredentials of the existing NP on to the network\n2. Provide meta data details of onboarded entities to other authenticated network\nparticipants.\n3. Respond to gateway resolving the discovery intent from buyer apps.\n4. Host and provide authentication information for respective network participants to\nthe requester.\n\nIt is responsible for registering the network participants on the ONDC network . This involves\nverifying the identity and credentials of the participant, and adding them to a list of approved\nentities that are allowed to access and operate on the network. It ensures that only authorised\nentities are able to access the network and participate in transactions on the ONDC network.\nAll the transactions on the registry are authenticated using a state of an art key based signing\nalgorithm.\n\nThe Registry plays a pivotal role in discovering Network Participants (\u201cNP\u201d) on ONDC network\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up-to-\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying\npost authentication of their signatures.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 41 of 125\n\nONG C\n\nOpen Ne\n\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to\nthe expected growth in NPs. As of Nov, 2024, the number of monthly transactions being\nenabled on the ONDC network has reached 15 Million across various domains including\nconsumer goods, logistics, mobility, financial services, among others. The peak TPS of\nregistry that we have observed so far, is of the tune 1500.\n\nAt present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance\nthe design of the Registry based on the design principles and functional requirements\nspecified in this document and select a service provider to manage and maintain the Registry\non an ongoing basis.\n\nAn overview of the current design of Registry is provided in Annexure - 3 of the RFP.\n\n2. Design principles of Registry\n\n2.1. Open source and avoidance of vendor lock-in: The Registry shall be\ndesigned and implemented using open source components and avoid usage\nof proprietary components that may result in vendor lock-in(s).\n\n2.2. Multi-tiered architecture: The Registry shall be designed as a multi-tiered\narchitecture with independently scalable layers as depicted in the logical\narchitecture provided below in Figure 1.\n\n2.2.1. API layer - The Registry will follow an API first design philosophy. It\nprovides three APIs - the Subscribe, Lookup and Admin APIs at present\nwhich enable Network Participants to be added to the Registry and\nquerying of Network Participant data. The API layer shall expose the\nend points to be accessed via the API Gateway(s) after due\nauthentication of incoming requests. The existing APIs may be\nenhanced further and new APIs may also be added during the course\nof this contract based on emerging business requirements of ONDC.\n\n2.2.2. Application layer - The application layer will perform the necessary\nrequest processing which can be an update to Registry or a Registry\ndata lookup.\n\n2.2.3. Data layer - The data layer will host the core Registry database and\nobject store along with a data cache. All data access of the Registry\ndatabase will include a writeback to the cache.\n\nThe core Registry database can be a denormalized, key-value pair\n\ndatabase. The solution may incorporate any contemporary consistent\ndata architecture using any database technology.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 42 of 125\n\nONC C\n\nOpen Ne\n\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to\nthe expected growth in NPs. As of Nov, 2024, the number of monthly transactions being\nenabled on the ONDC network has reached 15 Million across various domains including\nconsumer goods, logistics, mobility, financial services, among others. The peak TPS of\nregistry that we have observed so far, is of the tune 1500.\n\nAt present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance\nthe design of the Registry based on the design principles and functional requirements\nspecified in this document and select a service provider to manage and maintain the Registry\non an ongoing basis.\n\nAn overview of the current design of Registry is provided in Annexure - 3 of the RFP.\n\n2. Design principles of Registry\n\n2.1. Open source and avoidance of vendor lock-in: The Registry shall be\ndesigned and implemented using open source components and avoid usage\nof proprietary components that may result in vendor lock-in(s).\n\n2.2. Multi-tiered architecture: The Registry shall be designed as a multi-tiered\narchitecture with independently scalable layers as depicted in the logical\narchitecture provided below in Figure 1.\n\n2.2.1. API layer - The Registry will follow an API first design philosophy. It\nprovides three APIs - the Subscribe, Lookup and Admin APIs at present\nwhich enable Network Participants to be added to the Registry and\nquerying of Network Participant data. The API layer shall expose the\nend points to be accessed via the API Gateway(s) after due\nauthentication of incoming requests. The existing APIs may be\nenhanced further and new APIs may also be added during the course\nof this contract based on emerging business requirements of ONDC.\n\n2.2.2. Application layer - The application layer will perform the necessary\nrequest processing which can be an update to Registry or a Registry\ndata lookup.\n\n2.2.3. Data layer - The data layer will host the core Registry database and\nobject store along with a data cache. All data access of the Registry\ndatabase will include a writeback to the cache.\n\nThe core Registry database can be a denormalized, key-value pair\n\ndatabase. The solution may incorporate any contemporary consistent\ndata architecture using any database technology.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 42 of 125\n\nONC\n\nOpen Network for Digital Commerce\n\n2.2.4.\n\n2.2.5.\n\n2.2.6.\n\nThis layer shall also have features to classify and manage core Registry\nand log data based on frequency of access as well as recency of data\nas Hot, Warm and Cold and retaining data for up to 7 years based on\nbusiness and regulatory requirements. Correspondingly, different\nstorage technologies shall be utilised in the infrastructure layer for\nefficient and cost effective management of Registry data.\n\nLogical architecture - Registry\n\nBuyer App\nSeller App\n\nGateway\n\nAPi Layer Subscription Services Lookup/Admin Services \u2018\nCore Components Subscription Services Lookup/Admin Services '\n\naa Go Lo | :\n\nMonitoring & Management Services '\n\n' \u2018astructure layer (Physical machines, Hot/Warm/Cold storage layers, Automatic DR cutove '\n\nFigure - 1: Indicative Logical architecture of Registry\n\nAuthentication and Authorization - This layer will authenticate and\nauthorise incoming requests from the NPs through the ONDC Network\nGateway(s) or directly as the case may be and enable secure access\nto the Registry.\n\nThe authentication and authorization layer must cater to API\nauthentication and user authentication as the case may be.\n\nPerimeter security layer - This layer will contain perimeter security\ndevices that will include Web Application Firewall, L3 firewalls,\nAdvanced Threat Protection and DDoS protection.\n\nMonitoring and management services - This will comprise a set of\ncomponents to monitor the performance and availability of the entire\nRegistry stack on a real time basis. This will also report data to the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 43 of 125\n\nOpen Network for Digital Commerce\n\n2.2.4.\n\n2.2.5.\n\n2.2.6.\n\nThis layer shall also have features to classify and manage core Registry\nand log data based on frequency of access as well as recency of data\nas Hot, Warm and Cold and retaining data for up to 7 years based on\nbusiness and regulatory requirements. Correspondingly, different\nstorage technologies shall be utilised in the infrastructure layer for\nefficient and cost effective management of Registry data.\n\nLogical architecture - Registry\n\nBuyer App\nSeller App\n\nGateway\n\nPerimeter Security (WAF, Firewall, Advanced Threat Protection, DDoS)\nAuthentication & Authorization\nAPI Layer\nCore Components bscription Ser /Admin Servi i '\n\nData Access\n\nData Layer\n\nMonitoring & Management Services !\n\nture layer (Physical machines, Hot/War \u2018old storage layers, Automatic DR cutover) '\n\nFigure - 1: Indicative Logical architecture of Registry\n\nAuthentication and Authorization - This layer will authenticate and\nauthorise incoming requests from the NPs through the ONDC Network\nGateway(s) or directly as the case may be and enable secure access\nto the Registry.\n\nThe authentication and authorization layer must cater to API\nauthentication and user authentication as the case may be.\n\nPerimeter security layer - This layer will contain perimeter security\ndevices that will include Web Application Firewall, L3 firewalls,\nAdvanced Threat Protection and DDoS protection.\n\nMonitoring and management services - This will comprise a set of\ncomponents to monitor the performance and availability of the entire\nRegistry stack on a real time basis. This will also report data to the\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 43 of 125\n\nONG C\n\nOpen Ne\n\nONDC Network Health Monitoring dashboard which will be accessible\nto the public at large. Such monitoring data of Registry shall be made\navailable through APIs or any other mechanism determined by ONDC\nas part of the design of the Network Health Monitoring system.\n\nAs part of monitoring and measurement of performance and availability\nmetrics of the Registry at overall data center level and at application\nlevel, the MSP should create a \u201c/health\u201d API which may simulate\nsynthetic transactions of the nature expected to be performed on\nRegistry.\n\n2.2.7. Infrastructure layer - This layer will include the cloud hosting\ninfrastructure along with the automated disaster recovery and business\ncontinuity cutovers. The system integrator may implement the solution\neither on bare metal or virtualized or containerized infrastructure\nkeeping in view the performance and availability requirements of the\nRegistry.\n\n2.3. Zero data loss: The Registry shall be designed to be a zero data loss.\n\n2.4. Data security: Considering that the Registry will be primarily sharing data over\nthe internet with Network Participants, the minimum encryption standard for the\nRegistry shall be ECDH (Elliptic-curve Diffie-Hellman) using X25519 or better\nencryption curves.\n\nThe Registry communication can be either peer-to-peer or in a broadcast\nmode. For all Registry broadcasts the minimum encryption standard shall be\nECDH X25519.\n\nFor peer to peer communications, given that different network participants may\nbe following different encryption methods, the Registry must hold the details of\nthe encryptions standards followed by each NP. In such cases, the Registry will\nneed to support look up of the relevant encryption standard of a NP and adopt\nthe corresponding standard for peer to peer communication with the NP. The\nMSP is required to propose a suitable architecture for supporting multiple\nencryption keys in the Registry. Requirements for implementing data vaults\nmay be evaluated and proposed by the MSP if needed and Registry shall be\ndesigned to support the same.\n\n2.5. Data residency: The Registry shall be hosted on public cloud infrastructure.\nRegistry data of entities registered or incorporated in India shall be stored on\npublic cloud infrastructure within India.\n\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner\n\nwith 99.99% availability. It shall have an optimum usage of infrastructure as\npart of disaster recovery design across the two data centers. It is pertinent to\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 44 of 125\n\nONC C\n\nOpen Ne\n\nONDC Network Health Monitoring dashboard which will be accessible\nto the public at large. Such monitoring data of Registry shall be made\navailable through APIs or any other mechanism determined by ONDC\nas part of the design of the Network Health Monitoring system.\n\nAs part of monitoring and measurement of performance and availability\nmetrics of the Registry at overall data center level and at application\nlevel, the MSP should create a \u201c/health\u201d API which may simulate\nsynthetic transactions of the nature expected to be performed on\nRegistry.\n\n2.2.7. Infrastructure layer - This layer will include the cloud hosting\ninfrastructure along with the automated disaster recovery and business\ncontinuity cutovers. The system integrator may implement the solution\neither on bare metal or virtualized or containerized infrastructure\nkeeping in view the performance and availability requirements of the\nRegistry.\n\n2.3. Zero data loss: The Registry shall be designed to be a zero data loss.\n\n2.4. Data security: Considering that the Registry will be primarily sharing data over\nthe internet with Network Participants, the minimum encryption standard for the\nRegistry shall be ECDH (Elliptic-curve Diffie-Hellman) using X25519 or better\nencryption curves.\n\nThe Registry communication can be either peer-to-peer or in a broadcast\nmode. For all Registry broadcasts the minimum encryption standard shall be\nECDH X25519.\n\nFor peer to peer communications, given that different network participants may\nbe following different encryption methods, the Registry must hold the details of\nthe encryptions standards followed by each NP. In such cases, the Registry will\nneed to support look up of the relevant encryption standard of a NP and adopt\nthe corresponding standard for peer to peer communication with the NP. The\nMSP is required to propose a suitable architecture for supporting multiple\nencryption keys in the Registry. Requirements for implementing data vaults\nmay be evaluated and proposed by the MSP if needed and Registry shall be\ndesigned to support the same.\n\n2.5. Data residency: The Registry shall be hosted on public cloud infrastructure.\nRegistry data of entities registered or incorporated in India shall be stored on\npublic cloud infrastructure within India.\n\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner\n\nwith 99.99% availability. It shall have an optimum usage of infrastructure as\npart of disaster recovery design across the two data centers. It is pertinent to\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 44 of 125\n\nONG C\n\nOpen Ne\n\nEvery participant will have certain contact coordinates in the form of SPOCs or support or\nother specific contact persons details that need to be published in the registry so that it is\naccessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer\n\nKey Record\n\nThe Registry plays a vital role in developing a trust on the network as it remains the source of\ntruth for any authentication mechanism as it houses in the public keys for signing and\nencryption for each participant hence allowing other participants to access it and perform\nrelevant security measures.\n\nLocation Record\n\nGeographical transactability presence of a participant is vital for optimal broadcast of a\ndemand on the network. To meet this requirement each participant would define their\ngeographical presence in the registry which can be accessed by other participants to evaluate\ntheir presence and ability to transact in a given location. The definition of location can range\nfrom being a Country, Clty, Pincode, Geo Json supported as well.\n\nURI Record\n\nThe endpoint at which the participants exposed APIs are hosted where the transacting and\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached\nout to which usage in the mapping record.\n\nMapping Record\n\nCertain configurations of the participant and association to other records found in the mapping\nrecord will be crucial to address the filtration and policy executing information to be available\nfor the participants.\n\nPolicy Record\n\nEvery network would adhere to a policy and agreements that are linked between networks\nand these needs to be stored at a common source of truth which would lead to enforcement\nat the receiving end. These records will be the place holders of these policies but the execution\nof them is not a responsibility of the registry or the record itself.\n\nFuture Record\nThis is a place holder or making sure that the design enables or allows storing newer records\nthat may emerge with the network requirements and functionalities in the future\n\n6.2 Data to be captured in Registry\n\nBelow is the list of data fields for the proposed structure\n\nParticipant Id Unique Participant Id provided by the registry\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 49 of 125\n\nONC C\n\nOpen Ne\n\nEvery participant will have certain contact coordinates in the form of SPOCs or support or\nother specific contact persons details that need to be published in the registry so that it is\naccessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer\n\nKey Record\n\nThe Registry plays a vital role in developing a trust on the network as it remains the source of\ntruth for any authentication mechanism as it houses in the public keys for signing and\nencryption for each participant hence allowing other participants to access it and perform\nrelevant security measures.\n\nLocation Record\n\nGeographical transactability presence of a participant is vital for optimal broadcast of a\ndemand on the network. To meet this requirement each participant would define their\ngeographical presence in the registry which can be accessed by other participants to evaluate\ntheir presence and ability to transact in a given location. The definition of location can range\nfrom being a Country, Clty, Pincode, Geo Json supported as well.\n\nURI Record\n\nThe endpoint at which the participants exposed APIs are hosted where the transacting and\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached\nout to which usage in the mapping record.\n\nMapping Record\n\nCertain configurations of the participant and association to other records found in the mapping\nrecord will be crucial to address the filtration and policy executing information to be available\nfor the participants.\n\nPolicy Record\n\nEvery network would adhere to a policy and agreements that are linked between networks\nand these needs to be stored at a common source of truth which would lead to enforcement\nat the receiving end. These records will be the place holders of these policies but the execution\nof them is not a responsibility of the registry or the record itself.\n\nFuture Record\nThis is a place holder or making sure that the design enables or allows storing newer records\nthat may emerge with the network requirements and functionalities in the future\n\n6.2 Data to be captured in Registry\n\nBelow is the list of data fields for the proposed structure\n\nParticipant Id Unique Participant Id provided by the registry\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 49 of 125\n\n2| Cred Participant credential records\n3] Cred.id Credential record unique id\n4| Cred.type Credential type\n5] Cred.key_1 Place holder field purposed based on type\n22] URL.id participant unique uri id\n23} URI.url url of the participant\n24] Location Participant location records\n25] Location.id Location record unique id\n26] Location.city Array of city reference identifiers\n27| Location.country Array of country reference identifiers\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 50 of 125\n\nONC C\n\n2| Cred Participant credential records\n3] Cred.id Credential record unique id\n4| Cred.type Credential type\n5] Cred.key_1 Place holder field purposed based on type\n22] URL.id participant unique uri id\n23} URI.url url of the participant\n24] Location Participant location records\n25] Location.id Location record unique id\n26] Location.city Array of city reference identifiers\n27| Location.country Array of country reference identifiers\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 50 of 125\n\nOpen Ne\n\n28) Location.geojson geo json format definition of location\n\n29) Mapping Mapping Records\n\n30] Mapping.id Mapping record unique identifier\n\n31] Mapping.domain Participant transactional domain\n\n32] Mapping.type Participant transactional type\n\n33] Mapping.uri_id URI record reference id\n\n34] Mapping.location_id Location record reference id\n\n35 Request ID unique request id, generated by participant for\neach request\n\n36 callback_uri Participant callback uri for validation &\nverification on each request\n\n6.3 APIs\n\nAll APIs of registry are authenticated and can only be accessed by participants/prospective\nparticipants of the registry. The Authentication will follow the same signature pattern as\nproposed by the base commerce protocol i.e. beckn\n\nQuery API - /lookup\n\nQuery APIs are to query the registry for records. The query shall have various formats and\nstructure and will result in appropriate responses. A few possible queries are listed below\nthese are projected but not the entire list.\n\ne Query for Participant Records - Single Record\nAny participant can query for a single participant record this encompasses of all the\nsub records of the participant to name a few : Creds, Contact, URI, Keys, Location,\nMapping Records\n\ne Query for Key Records - Single Record\nAny participant can query for a particular or all key records associated with a particular\nparticipant\n\ne Query for URI Records - Single Record\nAny participant can query for a particular or all URI records associated with a particular\nparticipant\n\ne Query for Participant List - Multiple Records\nSome designated participants can query for a complete dump or a filtered dump of\nparticipant records based on the lookup query.\n\nParticipant Registration/Management API - /subscribe\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 51 of 125\n\nOpen Ne\n\n28) Location.geojson geo json format definition of location\n\n29) Mapping Mapping Records\n\n30] Mapping.id Mapping record unique identifier\n\n31] Mapping.domain Participant transactional domain\n\n32] Mapping.type Participant transactional type\n\n33] Mapping.uri_id URI record reference id\n\n34] Mapping.location_id Location record reference id\n\n35 Request ID unique request id, generated by participant for\neach request\n\n36 callback_uri Participant callback uri for validation &\nverification on each request\n\n6.3 APIs\n\nAll APIs of registry are authenticated and can only be accessed by participants/prospective\nparticipants of the registry. The Authentication will follow the same signature pattern as\nproposed by the base commerce protocol i.e. beckn\n\nQuery API - /lookup\n\nQuery APIs are to query the registry for records. The query shall have various formats and\nstructure and will result in appropriate responses. A few possible queries are listed below\nthese are projected but not the entire list.\n\ne Query for Participant Records - Single Record\nAny participant can query for a single participant record this encompasses of all the\nsub records of the participant to name a few : Creds, Contact, URI, Keys, Location,\nMapping Records\n\ne Query for Key Records - Single Record\nAny participant can query for a particular or all key records associated with a particular\nparticipant\n\ne Query for URI Records - Single Record\nAny participant can query for a particular or all URI records associated with a particular\nparticipant\n\ne Query for Participant List - Multiple Records\nSome designated participants can query for a complete dump or a filtered dump of\nparticipant records based on the lookup query.\n\nParticipant Registration/Management API - /subscribe\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 51 of 125\n\nONG C\n\nOpen Ne\n\nRegistration APIs are to register/subscribe a participant to the registry with their records. The\nregistration process will adhere to adequate validation against the information shared during\nthe process. Along the life-cycle of a participant there will be multiple phases or milestones\nand management activities where they need to manage their records. These APIs in its\nentirety and different shapes will address the needs to support it with adequate validation and\nauthorization needed. A few possible usages are listed below; these are projected but not the\nentire list.\ne New Registration - /subscribe - POST\nA post request created to make a new entry of a participant with all the adequate\ninformation and records that needs to be added to the registry this would be preceded\nby a whitelisting action from Admin.\ne Update Record - /subscribe - PUT & PATCH\nEvery network participant would require to modify, update and add records in the\nregistry during the tenure in the network these APIs would help supporting such\nfunctionalities\nAdmin APIs - /admin/domains, /admin/subscribe\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to\nadmins:\ne Enable/Disable Domains\ne Whitelist & Un-subscribe participants\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these\nfunctions of the registry\nThe Authentication and Authorization of an Admin and its associated workflows are managed\nby an external system to the core registry function and these APIs will be secured via MTLS\nand other secure tunnel communication between the identified such registry management\nservice/s.\n\n6.3.1 Existing Registry APIs\n6.3.1.1 lookup API\nlookup API is used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases of lookup API and being used:\n\ne By gateways and/or adaptors for search details about network participants\ne By network participants to querying existing details\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.2. vlookup API [TO BE DEPRECATED]\n\\vlookup API is used by the network participants to get details about other network participants\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more\nadvanced and secure version of lookup API, as it contains the signature parameter of the\nsender as one of the input parameters.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 52 of 125\n\nONC C\n\nOpen Ne\n\nRegistration APIs are to register/subscribe a participant to the registry with their records. The\nregistration process will adhere to adequate validation against the information shared during\nthe process. Along the life-cycle of a participant there will be multiple phases or milestones\nand management activities where they need to manage their records. These APIs in its\nentirety and different shapes will address the needs to support it with adequate validation and\nauthorization needed. A few possible usages are listed below; these are projected but not the\nentire list.\ne New Registration - /subscribe - POST\nA post request created to make a new entry of a participant with all the adequate\ninformation and records that needs to be added to the registry this would be preceded\nby a whitelisting action from Admin.\ne Update Record - /subscribe - PUT & PATCH\nEvery network participant would require to modify, update and add records in the\nregistry during the tenure in the network these APIs would help supporting such\nfunctionalities\nAdmin APIs - /admin/domains, /admin/subscribe\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to\nadmins:\ne Enable/Disable Domains\ne Whitelist & Un-subscribe participants\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these\nfunctions of the registry\nThe Authentication and Authorization of an Admin and its associated workflows are managed\nby an external system to the core registry function and these APIs will be secured via MTLS\nand other secure tunnel communication between the identified such registry management\nservice/s.\n\n6.3.1 Existing Registry APIs\n6.3.1.1 lookup API\nlookup API is used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases of lookup API and being used:\n\ne By gateways and/or adaptors for search details about network participants\ne By network participants to querying existing details\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.2. vlookup API [TO BE DEPRECATED]\n\\vlookup API is used by the network participants to get details about other network participants\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more\nadvanced and secure version of lookup API, as it contains the signature parameter of the\nsender as one of the input parameters.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 52 of 125\n\nONG C\n\nOpen Ne\n\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled\nthrough lookup API.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.3 subscribe API\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently\nthe registry is supporting the following types of registrations. Same needs to be enabled in the\nupdated Registry.\n\nBuyer App New entity Registration\n\nNon-MSN Seller New entity registration\n\nMSN Seller new entity registration\n\nBuyer App and Non-MSN Seller new registration\n\nBuyer App and MSN Seller new registration\n\nRSP new entity registration and record updates\n\nSA new entity registration and record updates\n\nODRSP new entity registration and record updates\n\nSSP new entity registration and record updates\n\nCA new entity registration and record updates\n\nAdding new seller on records\n\nUpdating records of buyer app, seller app and seller on records\nValidation of GSTIN\n\nValidation of PAN\n\nValidation of Bank Account number\n\nDeduplication of all types of participants, ukld, signing key and encryption key\n\nThe subscribe API should only be carried out for the NPs that are whitelisted.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.4 Dashboard\n\n6.3.2. The admin dashboard is to be developed for ONDC internal teams, ONDC\nofficials and MSP. The dashboard will have the following features:\n\n6.3.3 Admin dashboard should have the functionality of Registration and login for\nusers\n\n6.3.4 Dashboard need to have two-factor authentication enabled for every user\n\n6.3.5 Dashboard content should support the English language.\n\n6.3.6 Dashboard should not allow concurrent sessions for the same user. The\nsystem should automatically log out a user in case of session breakdowns\n(e.g., communication failure, high inactivity period - these should be\nparameterized)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 53 of 125\n\nOpen Ne\n\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled\nthrough lookup API.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.3.1.3 subscribe API\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently\nthe registry is supporting the following types of registrations. Same needs to be enabled in the\nupdated Registry.\n\nBuyer App New entity Registration\n\nNon-MSN Seller New entity registration\n\nMSN Seller new entity registration\n\nBuyer App and Non-MSN Seller new registration\n\nBuyer App and MSN Seller new registration\n\nRSP new entity registration and record updates\n\nSA new entity registration and record updates\n\nODRSP new entity registration and record updates\n\nSSP new entity registration and record updates\n\nCA new entity registration and record updates\n\nAdding new seller on records\n\nUpdating records of buyer app, seller app and seller on records\nValidation of GSTIN\n\nValidation of PAN\n\nValidation of Bank Account number\n\nDeduplication of all types of participants, ukld, signing key and encryption key\n\nThe subscribe API should only be carried out for the NPs that are whitelisted.\n\nNote: Current API specification is provided in Annexure - 3 of the RFP.\n\n6.4 Dashboard\n\n6.3.2. The admin dashboard is to be developed for ONDC internal teams, ONDC\nofficials and MSP. The dashboard will have the following features:\n\n6.3.3 Admin dashboard should have the functionality of Registration and login for\nusers\n\n6.3.4 Dashboard need to have two-factor authentication enabled for every user\n\n6.3.5 Dashboard content should support the English language.\n\n6.3.6 Dashboard should not allow concurrent sessions for the same user. The\nsystem should automatically log out a user in case of session breakdowns\n(e.g., communication failure, high inactivity period - these should be\nparameterized)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 53 of 125\n\nONG C\n\nOpen Ne\n\n6.3.7 Dashboard should have Role based access control (RBAC) enabled. This\nfunctionality will enable ONDC admin to authorize users by assigning\nprivileges to roles and assigning roles to users or group\n\n6.3.8 Dashboard should implement security features such as captcha, password\ncomplexity, automatic blocking (temporary/permanent) of user logins after\na given number of unsuccessful attempts.\n\n6.3.9 Dashboard must be developed as per Guidelines for Indian Government\nWebsites (GIGW) guidelines\n\n6.3.10 Portal should support HTTPS protocol on Secure Socket Layer (SSL)\n\n6.3.11 Graphical representation of the current status of their subscription,\nregistration across all environments (Sandbox, Pre-prod & production)\n\n6.3.12 Dashboard shall be built on 3-tier architecture with separate presentation,\nbusiness and database layer\n\n6.3.13 Dashboard must have the capability to integrate issue management system\nof ONDC\n\n6.3.14 It must support configuration of customizable workflows to define the flow\nof issues\n\n6.3.15 Dashboard shall have the ability to send email and SMS notifications to\nusers regarding issue status or any other information\n\n6.3.16 It should be able to support user access management, user control and\ncreating customized pages or dashboards for different set of users\n\n6.3.17 Dashboard should have responsive UX design supporting different screen\nsizes\n\n6.3.18 The Dashboard should have the capability to monitor Registry related\nmetrics/parameters. The monitoring module should have the following\ncapabilities:\n\n6.3.18.1 The below required parameters need to be displayed on the\ndashboard. Dashboard shall have and not limited to the following\nfunctionalities. Below API calls latency along with Response time:\n6.3.18.1.1 Subscriber API\n6.3.18.1.2 Lookup API\n6.3.18.2 Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on\nRecords, Gateways, RSPs, ODRSP, SSP, and others)\n6.3.18.3 Throughput\n6.3.18.4 Availability - Uptime & Downtime of Registry\n6.3.18.5 Concurrent Users\n6.3.18.6 CPU, RAM and Storage Usage\n6.3.18.7 Volume of API calls\n6.3.18.8 Seller App and Buyer App Wise number of serving categories and\nproducts\n\n6.3.19 Dashboard should have the capability to project data on Daily, Weekly and\nMonthly basis\n\n6.3.20 Registry monitoring dashboard should have the capability to show graphical\nrepresentation of the data available\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 54 of 125\n\nONC C\n\nOpen Ne\n\n6.3.7 Dashboard should have Role based access control (RBAC) enabled. This\nfunctionality will enable ONDC admin to authorize users by assigning\nprivileges to roles and assigning roles to users or group\n\n6.3.8 Dashboard should implement security features such as captcha, password\ncomplexity, automatic blocking (temporary/permanent) of user logins after\na given number of unsuccessful attempts.\n\n6.3.9 Dashboard must be developed as per Guidelines for Indian Government\nWebsites (GIGW) guidelines\n\n6.3.10 Portal should support HTTPS protocol on Secure Socket Layer (SSL)\n\n6.3.11 Graphical representation of the current status of their subscription,\nregistration across all environments (Sandbox, Pre-prod & production)\n\n6.3.12 Dashboard shall be built on 3-tier architecture with separate presentation,\nbusiness and database layer\n\n6.3.13 Dashboard must have the capability to integrate issue management system\nof ONDC\n\n6.3.14 It must support configuration of customizable workflows to define the flow\nof issues\n\n6.3.15 Dashboard shall have the ability to send email and SMS notifications to\nusers regarding issue status or any other information\n\n6.3.16 It should be able to support user access management, user control and\ncreating customized pages or dashboards for different set of users\n\n6.3.17 Dashboard should have responsive UX design supporting different screen\nsizes\n\n6.3.18 The Dashboard should have the capability to monitor Registry related\nmetrics/parameters. The monitoring module should have the following\ncapabilities:\n\n6.3.18.1 The below required parameters need to be displayed on the\ndashboard. Dashboard shall have and not limited to the following\nfunctionalities. Below API calls latency along with Response time:\n6.3.18.1.1 Subscriber API\n6.3.18.1.2 Lookup API\n6.3.18.2 Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on\nRecords, Gateways, RSPs, ODRSP, SSP, and others)\n6.3.18.3 Throughput\n6.3.18.4 Availability - Uptime & Downtime of Registry\n6.3.18.5 Concurrent Users\n6.3.18.6 CPU, RAM and Storage Usage\n6.3.18.7 Volume of API calls\n6.3.18.8 Seller App and Buyer App Wise number of serving categories and\nproducts\n\n6.3.19 Dashboard should have the capability to project data on Daily, Weekly and\nMonthly basis\n\n6.3.20 Registry monitoring dashboard should have the capability to show graphical\nrepresentation of the data available\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 54 of 125\n\nOpen Ne\n\nONG C\n\n6.3.21 Dashboard should have the capability to generate reports required by\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats.\nFurther, if any other format is required by ONDC\n\n6.3.22 Dashboard should have the capability to send alerts and notifications to\nrespective admins, MSP SPOCs on any change\n\n6.5 Infrastructure\n\nFollowing are the infrastructure requirement for the various environments:\n\nRequirement Type Sandbox\n\nPre Production\n\nProduction\n\n>=99.99%\n\nApplication response\ntime(except subscribe\nAPI)\n\nTime as\nmeasured at data\ncenter edge(except\nsubscribe API)\n\nResponse\n\n<100 milli-sec\n\n<1000 milli-sec\n\n0\n\n10 mins\n\n<100 milli-sec <10 milli-sec\n\n<1000 milli-sec <200 milli-sec\n\nThroughput 10 TPS 50 TPS 5000 TPS\n\nConcurrent users (live | 100 500 1000. Scalable to\nnetwork participants) 5,000\n\nHigh Availability NA NA DC and DR in Active-\n\nactive mode on the\nbidder selected cloud\nplatform\n\n6.5 Migration\n\nThe MSP shall migrate the data from the existing registry for all the three environments -\nstaging (sandbox), pre-production and production to the new registry application.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 55 of 125\n\n\nOpen Ne\n\n6.3.21 Dashboard should have the capability to generate reports required by\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats.\nFurther, if any other format is required by ONDC\n\n6.3.22 Dashboard should have the capability to send alerts and notifications to\nrespective admins, MSP SPOCs on any change\n\n6.5 Infrastructure\n\nFollowing are the infrastructure requirement for the various environments:\n\nRequirement Type Sandbox\n\nPre Production\n\nProduction\n\n>=99.99%\n\nApplication response\ntime(except subscribe\nAPI)\n\nTime as\nmeasured at data\ncenter edge(except\nsubscribe API)\n\nResponse\n\n<100 milli-sec\n\n<1000 milli-sec\n\n0\n\n10 mins\n\n<100 milli-sec <10 milli-sec\n\n<1000 milli-sec <200 milli-sec\n\nThroughput 10 TPS 50 TPS 5000 TPS\n\nConcurrent users (live | 100 500 1000. Scalable to\nnetwork participants) 5,000\n\nHigh Availability NA NA DC and DR in Active-\n\nactive mode on the\nbidder selected cloud\nplatform\n\n6.5 Migration\n\nThe MSP shall migrate the data from the existing registry for all the three environments -\nstaging (sandbox), pre-production and production to the new registry application.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 55 of 125\n\n\nSs. Type of Unit of Number | Uni | Sub- | Taxe | Total\nNo. | component / measure of units t Total s incl.\nproduct / rate taxes\nservice\n\n2 Cost of | Per-month 36\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS\n\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily\npeak TPS for a given month. The callbacks to the API will not be included in the computation of the\nnumber of API calls.\n\nTPS for a month = X Peak TPS for each day + Number of days ina month\n\nNote: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this\nmeans that TPS greater than the 99th percentile reading will be discarded and not considered for the\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have\noccurred due to longer service start up times or some exception scenarios.\n\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:\n\nTPS for a month (P) = 2,306\n\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN-5 #1 Cost of secure cloud infrastructure meeting\nall the technical specifications capable of processing 1,000 TPS]\n\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN-5 #2 Cost of secure cloud infrastructure\nmeeting all the technical specifications capable of processing additional 1,000 TPS]\n\nAmount payable during the month for cloud infrastructure (A) = Q + (P/1000 \u20141)*R = 1,00,000 +\n1.3*50,000 = INR 1,65,000/-\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 70 of 125\n\nSs. Type of Unit of Number | Uni | Sub- | Taxe | Total\nNo. | component / measure of units t Total s incl.\nproduct / rate taxes\nservice\n\n2 Cost of | Per-month 36\nsecure cloud\ninfrastructure\nmeeting all\nthe technical\nspecifications\ncapable of\nprocessing\nadditional\n1,000\ntransactions\nper second\nover and\nabove the\nminimum\n1,000 TPS\n\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily\npeak TPS for a given month. The callbacks to the API will not be included in the computation of the\nnumber of API calls.\n\nTPS for a month = X Peak TPS for each day + Number of days ina month\n\nNote: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this\nmeans that TPS greater than the 99th percentile reading will be discarded and not considered for the\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have\noccurred due to longer service start up times or some exception scenarios.\n\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:\n\nTPS for a month (P) = 2,306\n\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN-5 #1 Cost of secure cloud infrastructure meeting\nall the technical specifications capable of processing 1,000 TPS]\n\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN-5 #2 Cost of secure cloud infrastructure\nmeeting all the technical specifications capable of processing additional 1,000 TPS]\n\nAmount payable during the month for cloud infrastructure (A) = Q + (P/1000 \u20141)*R = 1,00,000 +\n1.3*50,000 = INR 1,65,000/-\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 70 of 125\n\nONG C\n\nOpen Ne\n\nB. Service Level Agreements\n\n1. Introduction\n\na. The Service Level Agreements (SLA) defined for the project specify the\nexpected levels of baseline service to be provided by the MSP to ONDC. The\nobjectives of SLA governance model are to:\n\ni. Provide clear reference to service ownership, accountability, roles and\nresponsibilities.\n\nii. Present a clear, concise and measurable description of service\nprovisioning at each level.\n\niii. | Bridge the gap between perceptions of expected service provisioning\nand actual service support and delivery.\n\nb. The SLAs are intended to:\n\ni. | Make explicit and strict expectations that ONDC has for performance\nand availability of business services.\n\nii. | Help ONDC control and ensure the planned level and performance of\nbusiness services.\n\niii. | Trigger a process that brings ONDC and MSP\u2019s management attention\nto situations when any aspect drops below an agreed upon threshold,\nor target.\n\nc. The performance of the MSP services shall be measured against the SLAs\ndetailed below. The service level targets define the levels of service to be\nprovided by the MSP to ONDC for the applicability period or duration of this\ncontract, whichever is earlier, or until the stated SLA targets are amended.\n\nd. Any degradation in the performance of the services undertaken by the MSP\nproject team during the contract duration, will be subject to levy of liquidated\ndamages. The liquidated damages mentioned in this RFP are a pre-estimate\nof damages likely to flow from the breach of timelines and service levels. In\ncase of breach of multiple SLAs:\n\ni. the cumulative liquidated damages applicable on the MSP for\ntimeline/milestone linked SLAs shall not exceed 10% of the total amount\npayable against the respective milestone.\n\nii. the cumulative liquidated damages applicable on the MSP for\noperational SLAs computed on a quarterly basis shall not exceed 10%\nof the total amount payable for the quarter.\n\ne. MSP shall not be relieved from any obligations under this contract by virtue of\npayment of such liquidated damages.\n\nf. MSP shall implementa SLA reporting tool to provide live status of conformance\nto various SLAs to ONDC.\n\ng. Any change in the SLAs during the term of Project [in terms of addition,\nalteration or deletion of certain parameters], would be initiated at the discretion\nof ONDC, which would be subsequently discussed and agreed with the MSP\nbefore putting the amended SLAs into effect.\n\n2. Definitions of measurement and reporting intervals\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 72 of 125\n\nONC C\n\nOpen Ne\n\nB. Service Level Agreements\n\n1. Introduction\n\na. The Service Level Agreements (SLA) defined for the project specify the\nexpected levels of baseline service to be provided by the MSP to ONDC. The\nobjectives of SLA governance model are to:\n\ni. Provide clear reference to service ownership, accountability, roles and\nresponsibilities.\n\nii. Present a clear, concise and measurable description of service\nprovisioning at each level.\n\niii. | Bridge the gap between perceptions of expected service provisioning\nand actual service support and delivery.\n\nb. The SLAs are intended to:\n\ni. | Make explicit and strict expectations that ONDC has for performance\nand availability of business services.\n\nii. | Help ONDC control and ensure the planned level and performance of\nbusiness services.\n\niii. | Trigger a process that brings ONDC and MSP\u2019s management attention\nto situations when any aspect drops below an agreed upon threshold,\nor target.\n\nc. The performance of the MSP services shall be measured against the SLAs\ndetailed below. The service level targets define the levels of service to be\nprovided by the MSP to ONDC for the applicability period or duration of this\ncontract, whichever is earlier, or until the stated SLA targets are amended.\n\nd. Any degradation in the performance of the services undertaken by the MSP\nproject team during the contract duration, will be subject to levy of liquidated\ndamages. The liquidated damages mentioned in this RFP are a pre-estimate\nof damages likely to flow from the breach of timelines and service levels. In\ncase of breach of multiple SLAs:\n\ni. the cumulative liquidated damages applicable on the MSP for\ntimeline/milestone linked SLAs shall not exceed 10% of the total amount\npayable against the respective milestone.\n\nii. the cumulative liquidated damages applicable on the MSP for\noperational SLAs computed on a quarterly basis shall not exceed 10%\nof the total amount payable for the quarter.\n\ne. MSP shall not be relieved from any obligations under this contract by virtue of\npayment of such liquidated damages.\n\nf. MSP shall implementa SLA reporting tool to provide live status of conformance\nto various SLAs to ONDC.\n\ng. Any change in the SLAs during the term of Project [in terms of addition,\nalteration or deletion of certain parameters], would be initiated at the discretion\nof ONDC, which would be subsequently discussed and agreed with the MSP\nbefore putting the amended SLAs into effect.\n\n2. Definitions of measurement and reporting intervals\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 72 of 125\n\na. Measurement interval - For some of the SLAs, the Reporting interval has been\nbroken down into multiple Measurement intervals. This has been done to\nprovide the MSP an opportunity to rectify any SLA non-compliance during a\nparticular measurement interval in the remaining measurement intervals\navailable in the Reporting interval.\n\ni. | For example, during a quarter, a SLA could be measured every month\nand even if there was a certain non-compliance during one of the three\nmonths, the MSP would have an opportunity to rectify the non-\ncompliance in the other two months.\n\nii. | For each of the SLAs, all observations regarding the SLA recorded will\nbe aggregated and the SLA will be computed for every measurement\ninterval. The applicable percentage of liquidated damages will be the\nsimple average of the liquidated damages computed for each\nmeasurement interval.\n\niii. | For example, for availability of solutions, all \"system up check\" data\ngathered, all planned and unplanned downtimes during the\nmeasurement interval (i.e., a given month) will be aggregated and the\nSLA will be computed. Accordingly, as per the LD computation\nguidelines defined in this document, the percentage of LD applicable\nfor the measurement interval will be computed.\n\nb. Reporting interval: Reporting interval for all SLAs is quarterly. The\npercentage of LD to be applied for a Reporting interval is computed as an\naverage of the LD percentages computed for each of the Measurement\nintervals.\n\n3. Timelines and associated liquidated damages, if any\n\nS. No.\n\nMilestone / Deliverable Timeline\n\nSigning of the contract\n\nSubmission of detailed | T+6 weeks 1% of cost head (A) as\ndesign document mentioned in commercial bid\ncontract for every week of delay\n\nLiquidated damages,\napplicable\n\nif any,\n\nNot applicable\n\nSubmission of the UAT | T+12 weeks 1% of cost head (A) as\nplan with detailed test mentioned in commercial bid\ncases and test data contract for every week of delay\n\nSecurity testing (VAPT | T+18 weeks 1% of cost head (A) as\nand App scan by a CERT- mentioned in commercial bid\nIn empanelled agency), contract for every week of delay\nPerformance testing and\n\nbenchmarking of system\n\nprior to go-live and\n\nnecessary fine-tuning\n\nCompletion of UAT and | 1T+18 weeks (=| 1% of cost head (A) as\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 73 of 125\n\nONC C\n\na. Measurement interval - For some of the SLAs, the Reporting interval has been\nbroken down into multiple Measurement intervals. This has been done to\nprovide the MSP an opportunity to rectify any SLA non-compliance during a\nparticular measurement interval in the remaining measurement intervals\navailable in the Reporting interval.\n\ni. | For example, during a quarter, a SLA could be measured every month\nand even if there was a certain non-compliance during one of the three\nmonths, the MSP would have an opportunity to rectify the non-\ncompliance in the other two months.\n\nii. | For each of the SLAs, all observations regarding the SLA recorded will\nbe aggregated and the SLA will be computed for every measurement\ninterval. The applicable percentage of liquidated damages will be the\nsimple average of the liquidated damages computed for each\nmeasurement interval.\n\niii. | For example, for availability of solutions, all \"system up check\" data\ngathered, all planned and unplanned downtimes during the\nmeasurement interval (i.e., a given month) will be aggregated and the\nSLA will be computed. Accordingly, as per the LD computation\nguidelines defined in this document, the percentage of LD applicable\nfor the measurement interval will be computed.\n\nb. Reporting interval: Reporting interval for all SLAs is quarterly. The\npercentage of LD to be applied for a Reporting interval is computed as an\naverage of the LD percentages computed for each of the Measurement\nintervals.\n\n3. Timelines and associated liquidated damages, if any\n\nS. No.\n\nMilestone / Deliverable Timeline\n\nSigning of the contract\n\nSubmission of detailed | T+6 weeks 1% of cost head (A) as\ndesign document mentioned in commercial bid\ncontract for every week of delay\n\nLiquidated damages,\napplicable\n\nif any,\n\nNot applicable\n\nSubmission of the UAT | T+12 weeks 1% of cost head (A) as\nplan with detailed test mentioned in commercial bid\ncases and test data contract for every week of delay\n\nSecurity testing (VAPT | T+18 weeks 1% of cost head (A) as\nand App scan by a CERT- mentioned in commercial bid\nIn empanelled agency), contract for every week of delay\nPerformance testing and\n\nbenchmarking of system\n\nprior to go-live and\n\nnecessary fine-tuning\n\nCompletion of UAT and | 1T+18 weeks (=| 1% of cost head (A) as\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 73 of 125\n\nMilestone / Deliverable Timeline Liquidated damages, if any,\napplicable\n\nsolution Go-Live along\nwith replication of the\nexisting data in the\nRegistry database\n\nmentioned in commercial bid\ncontract for every week of delay\n\n6 Submission of quarterly | Before 15th of | 1% of quarterly amount payable\nSLA compliance report next month | for every week of delay\nafter end of\nquarter\n7 Submission of the | T1+ 12 | 1% of quarterly amount payable\n\nKnowledge transition\nreport and complete\nregistry documentation\n\nquarters for every week of delay\n\n4. Solution SLAs and associated liquidated damages\na. Availability of Registry\n\nSLA Availability of Registry as a solution\nDescription\n\nScope of SLA {Applies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\n\nTools, methods | Healthcheck service to be implemented by MSP \u2014 a custom monitoring\nor scripts to be|script shall be executed once every minute from the SLA monitoring\nused to| server.\n\nmeasure SLA\n\nProcess to| The availability of registry shall be measured as follows:\n\ncapture data or} i. From the SLA monitoring server(s) invoke the service under\nmeasure the measurement. In the case of Registry, each API shall be\nparameter considered as a separate service.\n\nii. | Based to the response obtained from each API, availability shall\nbe computed.\n\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\n\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\n\nSLA calculation | Will be calculated using the below formula.\n\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2014 Planned Downtime)]}} *100\n\nPlanned Downtime permissible for each API = 15 minutes per quarter\n\nTotal Time = 24 X 7 measured over a period of one calendar month.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 74 of 125\n\nMilestone / Deliverable Timeline Liquidated damages, if any,\n\nwith\n\nsolution\nreplication of the\nexisting data in the\nRegistry database\n\napplicable\n\nGo-Live along mentioned in commercial bid\n\ncontract for every week of delay\n\nreport\n\n6 Submission of quarterly | Before 15th of | 1% of quarterly amount payable\nSLA compliance report next month | for every week of delay\nafter end of\nquarter\n7 Submission of the | T1+ 12 | 1% of quarterly amount payable\n\nKnowledge transition\n\nregistry documentation\n\nquarters for every week of delay\n\nand complete\n\n4. Solution SLAs and associated liquidated damages\na. Availability of Registry\n\nSLA\nDescription\n\nAvailability of Registry as a solution\n\nScope of SLA\n\nApplies to availability of Registry as a solution, specifically the APIs\nthrough which Network Participants access the Registry.\n\nTools, methods\nor scripts to be\nused to\nmeasure SLA\n\nHealthcheck service to be implemented by MSP \u2014 a custom monitoring\nscript shall be executed once every minute from the SLA monitoring\nserver.\n\nProcess to\ncapture data or\nmeasure the\nparameter\n\nThe availability of registry shall be measured as follows:\n\ni. From the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nii. | Based to the response obtained from each API, availability shall\nbe computed.\n\nThe monitoring script shall be executed once every minute from the SLA\nmonitoring server.\n\nThe Service is deemed to have a downtime if either the service request\ntimes out or returns a failure. The down time is measured from the last\nfailed service request script to the next successful script execution.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Availability % for each API = {1- [(Total Downtime-Planned\ndowntime) / (Total Time \u2014 Planned Downtime)]}} *100\n\nPlanned Downtime permissible for each API = 15 minutes per quarter\n\nTotal Time = 24 X 7 measured over a period of one calendar month.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 74 of 125\n\nOpen Ne\n\n[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\n\nOverall Availability % of Registry = ROUND (2[Availability % for each\nAPI]/Number of APIs, 2)\n\nSLA target and\nSeverity level\n\nfor computation SLA Level Applicable LD as % of quarter!\nof Liquidated of quarterly payment due\nDamages _for|| s=99 99% None\nProduction\nenvironment <99.99% and >= 99.9% 1%\n<99.9% and >= 99% 2%\n<99% and >=98% 3%\n<98% and >=97% 4%\n<97% 5%\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages _for|| s=99. 9% None\nPre-\nProduction <99.9% 0.5%\nenvironment\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages __for|| s=99% None\nSandbox\nenvironment <99% 0.5%\n\nAssumptions, if\nany\n\nThe MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.\n\nMeasurement | Monthly\n\ninterval\n\nReporting Quarterly\n\ninterval\n\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 75 of 125\n\nOpen Ne\n\n[If there are 3 APIs providing services, the downtimes recorded for each\nAPI automatically by the monitoring script as per the process defined in\n\u201cMeasurement for Registry service\u201c above will be summed up to arrive\nat cumulative downtime)]\n\nOverall Availability % of Registry = ROUND (2[Availability % for each\nAPI]/Number of APIs, 2)\n\nSLA target and\nSeverity level\n\nfor computation SLA Level Applicable LD as % of quarter!\nof Liquidated of quarterly payment due\nDamages _for|| s=99 99% None\nProduction\nenvironment <99.99% and >= 99.9% 1%\n<99.9% and >= 99% 2%\n<99% and >=98% 3%\n<98% and >=97% 4%\n<97% 5%\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages _for|| s=99. 9% None\nPre-\nProduction <99.9% 0.5%\nenvironment\nSLA target and\nSeverity level SLA Level Applicable LD as % of quarter!\nfor computation of quarterly payment due\nof \u2014Liquidated\nDamages __for|| s=99% None\nSandbox\nenvironment <99% 0.5%\n\nAssumptions, if\nany\n\nThe MSP should implement custom scripts to enable the measurement\nof various metrics when such functionalities are not available out of the\nbox in open source monitoring tools.\n\nMeasurement | Monthly\n\ninterval\n\nReporting Quarterly\n\ninterval\n\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 75 of 125\n\nOpen Ne\n\nONG C\n\nb. Response time of Registry\n\nSLA Description\n\nResponse time of Registry as a solution\n\nScope of SLA\n\nApplies to response time of Registry as a_ solution,\nspecifically the APIs through which Network Participants\naccess the Registry.\n\nTools, methods or scripts\nto be used to measure\nSLA\n\nTool to be implemented by MSP \u2014 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API.\n\nProcess to capture data or\nmeasure the parameter\n\nThe response time of registry shall be measured as follows:\n\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Average response time of Registry\nROUND(simple average of response times of each API\n\nexcluding outliers,2)\n\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.\n\nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment\n\nSLA Level Applicable LD\nas % of\nquarterly\npayment\n\nAverage response time of Registry | None\n\napplication <= 10 millisecond\n\nAverage response time of Registry | 3%\n\napplication > 10 millisecond\n\nAverage response time of Registry | None\n\nas measured from data center\n\nedge <= 200 millisecond\n\nAverage response time of Registry | 3%\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 76 of 125\n\n\nOpen Ne\n\nONC C\n\nb. Response time of Registry\n\nSLA Description\n\nResponse time of Registry as a solution\n\nScope of SLA\n\nApplies to response time of Registry as a_ solution,\nspecifically the APIs through which Network Participants\naccess the Registry.\n\nTools, methods or scripts\nto be used to measure\nSLA\n\nTool to be implemented by MSP \u2014 a custom monitoring script\nshall be executed once every 10 minutes from the SLA\nmonitoring server for each Registry API.\n\nProcess to capture data or\nmeasure the parameter\n\nThe response time of registry shall be measured as follows:\n\nFrom the SLA monitoring server(s) invoke the service under\nmeasurement. In the case of Registry, each API shall be\nconsidered as a separate service.\n\nThe monitoring script shall be executed once every 10\nminutes from the SLA monitoring server.\n\nSLA calculation\n\nWill be calculated using the below formula.\n\nFormula: Average response time of Registry\nROUND(simple average of response times of each API\n\nexcluding outliers,2)\n\nOutliers will be removed using the percentile capping\n(Winsorization) method at the 1st and 99th percentile. Values\nthat are less than the value at 1st percentile are replaced by\nthe value at 1st percentile, and values that are greater than\nthe value at 99th percentile are replaced by the value at 99th\npercentile.\n\nSLA target and Severity\nlevel for computation of\nLiquidated Damages for\nProduction environment\n\nSLA Level Applicable LD\nas % of\nquarterly\npayment\n\nAverage response time of Registry | None\n\napplication <= 10 millisecond\n\nAverage response time of Registry | 3%\n\napplication > 10 millisecond\n\nAverage response time of Registry | None\n\nas measured from data center\n\nedge <= 200 millisecond\n\nAverage response time of Registry | 3%\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 76 of 125\n\n\nONG C\n\nOpen Ne\n\napplication > 200 millisecond\n\nSLA target and Severity\n\nlevel for computation of :\nLiquidated Damages for SLA Level Applicable LD\n\nas % of\nPre-Production quarterly\nenvironmen payment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 1%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 1%\napplication > 1000 millisecond\n\nSLA target and Severity\nlevel for computation of\n\nLiquidated Damages for SLA Level applicadle So\n\nPn \u00e9 f as % of\n\nandbox environmen quarterly\npayment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 1000 millisecond\n\nAssumptions, if any The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\n\ntools.\nMeasurement interval Monthly\nReporting interval Quarterly\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 77 of 125\n\nONC C\n\nOpen Ne\n\napplication > 200 millisecond\n\nSLA target and Severity\n\nlevel for computation of :\nLiquidated Damages for SLA Level Applicable LD\n\nas % of\nPre-Production quarterly\nenvironmen payment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 1%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 1%\napplication > 1000 millisecond\n\nSLA target and Severity\nlevel for computation of\n\nLiquidated Damages for SLA Level applicadle So\n\nPn \u00e9 f as % of\n\nandbox environmen quarterly\npayment\n\nAverage response time of Registry | None\napplication <= 100 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 100 millisecond\n\nAverage response time of Registry | None\nas measured from data center\nedge <= 1000 millisecond\n\nAverage response time of Registry | 0.5%\napplication > 1000 millisecond\n\nAssumptions, if any The MSP should implement custom scripts to enable the\nmeasurement of various metrics when such functionalities\nare not available out of the box in open source monitoring\n\ntools.\nMeasurement interval Monthly\nReporting interval Quarterly\nReporting Automated SLA dashboard to be provided by MSP\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 77 of 125\n\nOpen Ne\n\n5. Support SLAs and associated liquidated damages\n\na.\n\nIncident response\n\nSLA Description\n\nIncident Response Time\n\nScope of SLA\n\nApplies to all Incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by MSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 15 minutes\n\nP2 60 minutes\n\nP3 2 hours\n\nProcess to capture\ndata or measure the\n\nparameter for\nSandbox and Pre-\nProduction\n\nenvironments\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours\nSLA calculation Formula:\n\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\n\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\n\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 78 of 125\n\nOpen Ne\n\nONC C\n\n5. Support SLAs and associated liquidated damages\n\na.\n\nIncident response\n\nSLA Description\n\nIncident Response Time\n\nScope of SLA\n\nApplies to all Incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by MSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 15 minutes\n\nP2 60 minutes\n\nP3 2 hours\n\nProcess to capture\ndata or measure the\n\nparameter for\nSandbox and Pre-\nProduction\n\nenvironments\n\nOnce an incident is logged through one of the agreed channels, the\npriorities have to be set using agreed channels for incidents based on\nONDC requirements to meet the business objectives.\n\nMeasurement of SLA\nResponse Time is measured from the time of creation of the incident\nuntil the \u201cIn Progress\u201d status update.\n\nPriority Response time\nP1 30 minutes\nP2 90 minutes\nP3 3 hours\nSLA calculation Formula:\n\nResponse time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P1 incidents opened during the\nperiod\n\nResponse time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which response is provided within defined\ntimelines during the period / Number of P2 incidents opened during the\nperiod\n\nResponse time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which response is provided within defined\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 78 of 125\n\nONG C\n\nOpen Ne\n\nSLA Description Incident Response Time\n\ntimelines during the period / Number of P3 incidents opened during the\n\nperiod\nSLA target Response Time compliance =100%\nLiquidated 2% of quarterly payment if SLA target is not met\nDamages\nMeasurement Monthly\ninterval\nReporting interval | Quarterly\n\nReporting Using SLA reporting tool\nb. Incident resolution\nSLA Description Incident Resolution Time\nScope of SLA Applies to all incidents\nTools, methods or|Incident and Service Desk Management tool to be implemented by\n\nscripts to be used to\nmeasure SLA\n\nMSP\n\nProcess to capture|Measurement of SLA\ndata or measure the|Response time is the time from incident creation until the \"Work in\nparameter for|Progress\" status update with assignment by MSP.\nProduction Resolution Time is the time from incident creation until the \"Resolved\"\nenvironment status update.\n\nPriority Resolution time\n\nP1 8 Hours\n\nP2 2 Days\n\nP3 5 days\n\nP4 - Service Request 15 days\n\nProcess to capture|Measurement of SLA\ndata or measure the|Response time is the time from incident creation until the \"Work in\nparameter for|Progress\" status update with assignment by MSP.\nSandbox and Pre-|Resolution Time is the time from incident creation until the \"Resolved\"\nProduction status update.\nenvironments Priority Resolution time\n\nP1 15 Hours\n\nP2 3 Days\n\nRequest for Proposa\n\ns for upgrade and maintenance of ONDC Registry | Page 79 of 125\n\n\nOpen Ne\n\nONC C\n\nSLA Description\n\nIncident Response Time\n\ntimelines during the period / Number of P3 incidents opened during the\n\nperiod\nSLA target Response Time compliance =100%\nLiquidated 2% of quarterly payment if SLA target is not met\nDamages\nMeasurement Monthly\ninterval\nReporting interval | Quarterly\n\nReporting\n\nUsing SLA reporting tool\n\nb. Incident resolution\n\nSLA Description\n\nIncident Resolution Time\n\nScope of SLA\n\nApplies to all incidents\n\nTools, methods or\nscripts to be used to\nmeasure SLA\n\nIncident and Service Desk Management tool to be implemented by\nMSP\n\nProcess to capture\ndata or measure the\nparameter for\nProduction\nenvironment\n\nMeasurement of SLA\n\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\n\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\n\nPriority Resolution time\nP1 8 Hours\n\nP2 2 Days\n\nP3 5 days\n\nP4 - Service Request 15 days\n\nProcess to capture\ndata or measure the\nparameter for\nSandbox and Pre-\nProduction\nenvironments\n\nMeasurement of SLA\n\nResponse time is the time from incident creation until the \"Work in\nProgress\" status update with assignment by MSP.\n\nResolution Time is the time from incident creation until the \"Resolved\"\nstatus update.\n\nPriority Resolution time\nP1 15 Hours\nP2 3 Days\n\nRequest for Proposa\n\ns for upgrade and maintenance of ONDC Registry | Page 79 of 125\n\nOpen Ne\n\nONG C\n\nP3 6 days\n\nP4 - Service Request 15 days\n\nSLA calculation\n\nFormulae:\n\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\n\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\n\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\n\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period\n\nSLA target Resolution Time % = 100%\nSeverity level for|2% of quarterly payment due\ncomputation of\n\nLiquidated Damages\n\nMeasurement interval | Monthly\n\nReporting interval Quarterly\n\nReports or Data to be\nsubmitted, if any\n\nAutomated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n\nIncident Resolution Report\n\nIncident Request Work \u201cIn Progress\u201d Report\n\nIncident average resolution report\n\nIncident number of duplicates\n\n% of incidents converted as Problem\n\n% repeat unknown cause of/incident\n\nNumber of incidents with priorities modified during their course\nof resolution report\n\nRCA of P1 and P2 resolved.\n\nNOaARWN>\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 80 of 125\n\nOpen Ne\n\nP3 6 days\n\nP4 - Service Request 15 days\n\nSLA calculation\n\nFormulae:\n\nResolution time % for P1 incidents = Number of P1 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P1 incidents opened during\nthe period\n\nResolution time % for P2 incidents = Number of P2 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P2 incidents opened during\nthe period\n\nResolution time % for P3 incidents = Number of P3 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P3 incidents opened during\nthe period\n\nResolution time % for P4 incidents = Number of P4 incidents opened\nduring the period and for which resolution is provided within defined\ntimelines during the period / Number of P4 incidents opened during\nthe period\n\nSLA target Resolution Time % = 100%\nSeverity level for|2% of quarterly payment due\ncomputation of\n\nLiquidated Damages\n\nMeasurement interval | Monthly\n\nReporting interval Quarterly\n\nReports or Data to be\nsubmitted, if any\n\nAutomated SLA dashboard in Service Request tools but not limiting to\nfollowing reports can be customizable as required.\n\nIncident Resolution Report\n\nIncident Request Work \u201cIn Progress\u201d Report\n\nIncident average resolution report\n\nIncident number of duplicates\n\n% of incidents converted as Problem\n\n% repeat unknown cause of/incident\n\nNumber of incidents with priorities modified during their course\nof resolution report\n\nRCA of P1 and P2 resolved.\n\nNOaARWN>\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 80 of 125\n\nOpen Network for Digital Commerce\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 81 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 81 of 125\n\nONG C\n\nOpen Ne\n\n- The dependency injection feature allows you to define the dependencies that your\napplication needs in configuration classes, and the framework will automatically create\nand inject the required beans at runtime. This can make it easier to manage\ndependencies and keep your code modular and maintainable.\n\n- It also provides CRUD (create, read, update, delete) services that can be used to\nsimplify the implementation of common persistence tasks. These services are built on\ntop of the Spring Data project, which provides a consistent interface for interacting with\na variety of data stores.\n\nRepository Class Extending CRUD\nservices\n\nDependency\ninjection\n\ni Domain | |\n\nhttps, Controller fg ce | | Verification | | Audit/Logging i\n\nClient (lookup/viookup H\n/subscribe)\n\nValidate Network\nParticipant\n\ni | Validation Unique |\n\nlookup /viookup i\nKey\n\nsubscribe/\n\nJPA/\nHibernate\n\nFigure 1 Registry Software Architecture\n\nAt a high level, application consists of the following components:\n- Controller:\n\n-  Vlookup: An API that handles requests related to retrieving subscriber information and\nnetwork participant information would require an authentication mechanism to ensure\nthat only authorised users are able to access this information.\n\n- LookUp: An API that retrieves subscriber information but does not have any\nauthentication mechanism in place.\n\n- Subscribe: An API mentioned here is a way for entities such as buyers, sellers, or\nnetwork participants to register with ONDC registry.\n\n- Service:\n\n- Validation Keys: This logic is used to verify the signing_public_key and\nencryption_public_key that are provided at the time of subscription through the\nsubscribe API. The validation keys are used to ensure that the keys provided by the\nentity are authentic and have not been tampered with.\n\n- Domain Verification: The subscriber's URL is verified as part of the subscription\nprocess. This process can ensure that the subscriber_id corresponds to a specific\ndomain, and that the subscriber has control over that domain. It also provides a way\nfor the system to confirm that the subscriber is who they claim to be, and that the\ndomain is being used for legitimate purposes.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 83 of 125\n\nOpen Ne\n\n- The dependency injection feature allows you to define the dependencies that your\napplication needs in configuration classes, and the framework will automatically create\nand inject the required beans at runtime. This can make it easier to manage\ndependencies and keep your code modular and maintainable.\n\n- It also provides CRUD (create, read, update, delete) services that can be used to\nsimplify the implementation of common persistence tasks. These services are built on\ntop of the Spring Data project, which provides a consistent interface for interacting with\na variety of data stores.\n\nRepository Class Extending CRUD\nservices\n\nDependency\ninjection\n\nDomain\nVerification\n\n| Audit/Logging F\n\nhttps, Controller\nClient I (lookup/viookup\n/subscribe)\n\nValidation Unique | Validate Network\n\nlookup /viookup i\nKey Participant \u2018\n\nsubscribe/\n\nJPA/\nHibernate\n\nFigure 1 Registry Software Architecture\n\nAt a high level, application consists of the following components:\n- Controller:\n\n-  Vlookup: An API that handles requests related to retrieving subscriber information and\nnetwork participant information would require an authentication mechanism to ensure\nthat only authorised users are able to access this information.\n\n- LookUp: An API that retrieves subscriber information but does not have any\nauthentication mechanism in place.\n\n- Subscribe: An API mentioned here is a way for entities such as buyers, sellers, or\nnetwork participants to register with ONDC registry.\n\n- Service:\n\n- Validation Keys: This logic is used to verify the signing_public_key and\nencryption_public_key that are provided at the time of subscription through the\nsubscribe API. The validation keys are used to ensure that the keys provided by the\nentity are authentic and have not been tampered with.\n\n- Domain Verification: The subscriber's URL is verified as part of the subscription\nprocess. This process can ensure that the subscriber_id corresponds to a specific\ndomain, and that the subscriber has control over that domain. It also provides a way\nfor the system to confirm that the subscriber is who they claim to be, and that the\ndomain is being used for legitimate purposes.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 83 of 125\n\nONG C\n\nOpen Ne\n\n- Audit/Logging: The application allows for the logging and storage of information\nrelated to certain events that occur within a system. This information can include details\nsuch as who performed an action, when it was performed, and what the action was.\n\n- Validate Network Participant:\n\n- One level of validation is JSON Schema validation, it is a way to ensure that the\ndata received from the network participant conforms to a specific schema, this\nschema could contain certain rules for the message structure, data types, and\nformat. This step of validation helps to ensure that the data received from the\nnetwork participant is well-formed and can be processed correctly by the system.\n\n- Another level of validation is city code validation, This can be used to confirm that\nthe network participant is physically located in a specific city, this information can\nbe used to determine the correct time zone, currency, or other data relevant to the\napplication.\n\n- Another level of validation is domain validation, which is used to confirm that the\nnetwork participant has ownership of a specific domain name. This can help to\nprevent spoofing or phishing attempts.\n\n- The subscriber URL validation is a way to verify that the network participant is\nauthorised to access specific resources or services, by checking that the network\nparticipant's URL matches a whitelisted or trusted domain.\n\n- It's important to note that these methods of validation can be used together or\nindividually depending on the security requirements and the complexity of the\nnetwork.\n\nC. High Level Architecture\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 84 of 125\n\nOpen Ne\n\n- Audit/Logging: The application allows for the logging and storage of information\nrelated to certain events that occur within a system. This information can include details\nsuch as who performed an action, when it was performed, and what the action was.\n\n- Validate Network Participant:\n\n- One level of validation is JSON Schema validation, it is a way to ensure that the\ndata received from the network participant conforms to a specific schema, this\nschema could contain certain rules for the message structure, data types, and\nformat. This step of validation helps to ensure that the data received from the\nnetwork participant is well-formed and can be processed correctly by the system.\n\n- Another level of validation is city code validation, This can be used to confirm that\nthe network participant is physically located in a specific city, this information can\nbe used to determine the correct time zone, currency, or other data relevant to the\napplication.\n\n- Another level of validation is domain validation, which is used to confirm that the\nnetwork participant has ownership of a specific domain name. This can help to\nprevent spoofing or phishing attempts.\n\n- The subscriber URL validation is a way to verify that the network participant is\nauthorised to access specific resources or services, by checking that the network\nparticipant's URL matches a whitelisted or trusted domain.\n\n- It's important to note that these methods of validation can be used together or\nindividually depending on the security requirements and the complexity of the\nnetwork.\n\nC. High Level Architecture\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 84 of 125\n\nONG C\n\nValidation of Request Structure\n\nPresentation Layer (Schema)\n\nfo 5 2 oN\nDomain Verification\nValidation of Keys\nin Validate Entity\nBusi ess Layer Validate Network Participant\nValidate Seller on Record\n\nae\nV7\n\nPersistence Layer Storage Logic\ne ZS\nve\nDatabase pci of sca on\nia )\n\nFigure 2 Registry High Level Architecture\n\nPresentation Layer:\n\n- The presentation layer is the interface through which users interact with the registry. It\nis responsible for presenting the information stored in the registry to the user, as well\nas receiving and validating requests from the user.\n\n- The presentation layer would receive requests from the user, validate them to ensure\nthat they are properly structured and contain all necessary information, and then pass\nthem on to the registry. The registry would then process the request and return the\nrequested information to the presentation layer, which would in turn present it to the\nuser.\n\n- The presentation layer can also include additional functionality, such as authentication\nand authorisation, to ensure that only authorised users are able to access the registry\nand that they are only able to perform actions that they are permitted to perform.\n\nBusiness Layer:\n\n- The business layer sits between the presentation layer and the database layer. It is\nresponsible for implementing the business logic of the registry, including verifying\ndomain names, validating keys, and verifying the identity and credentials of network\nparticipants and sellers.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 85 of 125\n\nOpen Network for Digital Commerce\n\nValidation of Request Structure\n(Schema)\n\nDomain Verification\nValidation of Keys\nValidate Entity\nValidate Network Participant\nValidate Seller on Record\n\nPersistence Layer Storage Logic\n\\ ZN\n(- Ad\nDatabase \u201cabissof ey sai\n3S\n\nFigure 2 Registry High Level Architecture\n\nPresentation Layer:\n\n- The presentation layer is the interface through which users interact with the registry. It\nis responsible for presenting the information stored in the registry to the user, as well\nas receiving and validating requests from the user.\n\n- The presentation layer would receive requests from the user, validate them to ensure\nthat they are properly structured and contain all necessary information, and then pass\nthem on to the registry. The registry would then process the request and return the\nrequested information to the presentation layer, which would in turn present it to the\nuser.\n\n- The presentation layer can also include additional functionality, such as authentication\nand authorisation, to ensure that only authorised users are able to access the registry\nand that they are only able to perform actions that they are permitted to perform.\n\nBusiness Layer:\n\n- The business layer sits between the presentation layer and the database layer. It is\nresponsible for implementing the business logic of the registry, including verifying\ndomain names, validating keys, and verifying the identity and credentials of network\nparticipants and sellers.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 85 of 125\n\nONG C\n\nOpen Ne\n\n- The business layer can also include additional functionality, such as data\ntransformation and mapping, to ensure that the data is properly formatted and\nstructured for use by the presentation layer and the database.\n\nPersistence Layer:\n\n- It is responsible for storing and retrieving information from the registry's database. It\nimplements the logic for storing and organizing the data in the database, as well as for\nexecuting requests from the business layer to retrieve or update the data.\n\n- The persistence layer can include a variety of different components, such as database\nmanagement systems, data storage systems, and data access and retrieval\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.\n\nDatabase:\n- The database is responsible for storing the data that is managed by the registry.\n\n- The database stores the data in tables, with each table representing a different entity\nor type of information. For example, there might be tables for storing information about\nnetwork participants, sellers, and transactions.\n\n- Refer to Section 2 [Database Design] for more details.\n\nD. Deployment Architecture\n\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application,\nand it routes incoming requests to the appropriate location backend based on the configured\nrules.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 86 of 125\n\nOpen Ne\n\n- The business layer can also include additional functionality, such as data\ntransformation and mapping, to ensure that the data is properly formatted and\nstructured for use by the presentation layer and the database.\n\nPersistence Layer:\n\n- It is responsible for storing and retrieving information from the registry's database. It\nimplements the logic for storing and organizing the data in the database, as well as for\nexecuting requests from the business layer to retrieve or update the data.\n\n- The persistence layer can include a variety of different components, such as database\nmanagement systems, data storage systems, and data access and retrieval\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.\n\nDatabase:\n- The database is responsible for storing the data that is managed by the registry.\n\n- The database stores the data in tables, with each table representing a different entity\nor type of information. For example, there might be tables for storing information about\nnetwork participants, sellers, and transactions.\n\n- Refer to Section 2 [Database Design] for more details.\n\nD. Deployment Architecture\n\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application,\nand it routes incoming requests to the appropriate location backend based on the configured\nrules.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 86 of 125\n\nONC\n\nOpen Net\n\n* Application Instances\n' Database\n\nInternet\n\nGlobal Load Balancer HTTP\nFigure 3 Deployment Architecture\n\nThe HTTP(S) Load Balancer provides below features:\n- Deploy multiple instances of the application to different servers / virtual machines.\n\n- Create an HTTP(S) Load Balancer and configure it to route traffic to the different\nlocations where your application is deployed.\n\nAuthentication and authorization:\n\n- Having a white list of authorised network participants can help to ensure the security\nand integrity of the registry by limiting access to only those participants that have been\nvetted and deemed trustworthy.\n\n- By exposing a URL and public key information, network participants can demonstrate\ntheir identity and authenticity to the registry, which helps to ensure that only authorised\nparticipants are granted access.\n\nE. Registry Class Diagrams\n\nClass Diagrams: Com.nsdl.beckn.np.model.request :\n1) Ack.java:\n\nStatus: ACK for success, NACK for unsuccess. Delivers the message for the\nstatus. The status should be represented in string format.\n\n\u00a9 ack\n\nO status: String\n\n\u00a9 getStatus(): String\n\ne setStatus(status: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 Ack()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 87 of 125\n\n==\nInternet\n\nGlobal Load Balancer HTTP\nFigure 3 Deployment Architecture\n\nThe HTTP(S) Load Balancer provides below features:\n- Deploy multiple instances of the application to different servers / virtual machines.\n\n- Create an HTTP(S) Load Balancer and configure it to route traffic to the different\nlocations where your application is deployed.\n\nAuthentication and authorization:\n\n- Having a white list of authorised network participants can help to ensure the security\nand integrity of the registry by limiting access to only those participants that have been\nvetted and deemed trustworthy.\n\n- By exposing a URL and public key information, network participants can demonstrate\ntheir identity and authenticity to the registry, which helps to ensure that only authorised\nparticipants are granted access.\n\nE. Registry Class Diagrams\n\nClass Diagrams: Com.nsdl.beckn.np.model.request :\n1) Ack.java:\n\nStatus: ACK for success, NACK for unsuccess. Delivers the message for the\nstatus. The status should be represented in string format.\n\n\u00a9 ack\n\nO status: String\n\n\u00a9 getStatus(): String\n\ne setStatus(status: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Ack()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 87 of 125\n\n2) Context.java :\n\nIn this class it should give the details of operation number, whereas operation\nnumber should be represented in integer format.\n\n\u00a9 Context\n\n4 opsNo: Integer\n\n\u00a9 getOpsNo(): Integer\n\ne setOpsNo(opsNo: Integer): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne Context()\n\n3) Entity java:\nIn this Entity class it should contain the details such as GST number, PAN number,\n\nName and Address of Authorised Signatory, email id, Mobile number, country. And also,\nshould give the details of effective date of registration.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 88 of 125\n\nOpen Network for Digital Commerce\n\n2) Context.java :\n\nIn this class it should give the details of operation number, whereas operation\nnumber should be represented in integer format.\n\n\u00a9 Context\n\n4 opsNo: Integer\n\n\u00a9 getOpsNo(): Integer\n\ne@ setOpsNo(opsNo: Integer): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Context()\n\n3) Entity java:\nIn this Entity class it should contain the details such as GST number, PAN number,\nName and Address of Authorised Signatory, email id, Mobile number, country. And also,\nshould give the details of effective date of registration.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 88 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entity\n\nO gst: EntityGst\n\n0 pan: EntityPan\n\n0 nameOfAuthorisedSignatory: String\noO addressOfAuthorisedSignatory: String\nOo emailld: String\n\nO mobileNo: String\n\nO subscriberld: String\n\nOo keyPair: KeyPair\n\no effectiveDateOfRegistration: String\n& country: String\n\n4 callbackUrl: String\n\n4 uniqueKeyld: String\n\n\u00a9 getGst(): EntityGst\n\ne getPan(): EntityPan\n\n\u00a9 getNameOfAuthorisedSignatory(): String\n\ne getAddressOfAuthorisedSignatory(): String\n\ne getEmailld(): String\n\n\u00a9 getMobileNo(): String\n\ne@ getSubscriberld(): String\n\n@ getKeyPair(): KeyPair\n\ne@ getEffectiveDateOfRedgistration(): String\n\ne getCountry(): String\n\n\u00a9 getCallbackUrl(): String\n\n\u00a9 getUniqueKeyld(): String\n\ne setGst(gst: EntityGst): void\n\nsetPan(pan: EntityPan): void\nsetNameOfAuthorisedSignatory(nameOfAuthorisedSignatory: String): void\nsetAddressOfAuthorisedSignatory(addressOfAuthorisedSignatory: String): void\nsetEmailld(emailld: String): void\n\nsetMobileNo(mobileNo: String): void\n\nsetSubscriberld(subscriberld: String): void\n\nsetKeyPair(keyPair: KeyPair): void\nsetEffectiveDateOfRegistration(effectiveDateOfRegistration: String): void\nsetCountry(country: String): void\n\nsetCallbackUrl(callbackUrl: String): void\n\nsetUniqueKeyld(uniquekKeyld: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n Entity()\n\n4)EntityGst java:\nThis EntityGst class contains the values such as Legal entity name, Business address, city\ncode, GST number.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 89 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 Entity\n\noO gst: EntityGst\n\n0 pan: EntityPan\n\nOo nameOfAuthorisedSignatory: String\noO addressOfAuthorisedSignatory: String\n5 emailld: String\n\nO mobileNo: String\n\nO subscriberld: String\n\nOo keyPair: KeyPair\n\no effectiveDateOfRegistration: String\n4 country: String\n\n4 callbackUrl: String\n\n4 uniqueKeyld: String\n\n\u00a9 getGst(): EntityGst\n\ne getPan(): EntityPan\n\ne@ getNameOfAuthorisedSignatory(): String\n\ne@ getAddressOfAuthorisedSignatory(): String\n\ne@ getEmailld(): String\n\n\u00a9 getMobileNo(): String\n\ne@ getSubscriberld(): String\n\n@ getKeyPair(): KeyPair\n\ne@ getEffectiveDateOfRedgistration(): String\n\ne getCountry(): String\n\n\u00a9 getCallbackUrl(): String\n\n@ getUniqueKeyld(): String\n\ne setGst(gst: EntityGst): void\n\ne setPan(pan: EntityPan): void\n\ne setNameOfAuthorisedSignatory(nameOfAuthorisedSignatory: String): void\ne setAddressOfAuthorisedSignatory(addressOfAuthorisedSignatory: String): void\ne@ setEmailld(emailld: String): void\n\n@ setMobileNo(mobileNo: String): void\n\ne setSubscriberld(subscriberld: String): void\n\ne setKeyPair(keyPair: KeyPair): void\n\ne setEffectiveDateOfRegistration(effectiveDateOfRegistration: String): void\n@ setCountry(country: String): void\n\ne setCallbackUrl(callbackUrl: String): void\n\n@ setUniqueKeyld(uniqueKeyld: String): void\n\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne Entity()\n\n4)EntityGst java:\nThis EntityGst class contains the values such as Legal entity name, Business address, city\ncode, GST number.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 89 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entitycst\n\nO legalEntityName: String\nO businessAddress: String\nO cityCode: List<String>\n\no gstNo: String\n\n\u00a9 getLegalEntityName(): String\n\n\u00a9 getBusinessAddress(): String\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getGstNo(): String\n\ne setLegalEntityName(legalEntityName: String): void\n\u00a9 setBusinessAddress(businessAddress: String): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 setGstNo(gstNo: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\n toString(): String\n\ne EntityGst()\n\n5) EntityPan.java:\nThis EntityPan class contains name as per PAN, pan number, and date of\nincorporation description.\n\n\u00a9 eEntityran\n\nOo nameAsPerPan: String\nO panNo: String\no dateOfincorporation: String\n\ne getNameAsPerPan(): String\n\n\u00a9 getPanNo(): String\n\n\u00a9 getDateOfincorporation(): String\n\ne setNameAsPerPan(nameAsPerPan: String): void\ne setPanNo(panNo: String): void\n\ne setDateOfincorporation(dateOfincorporation: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne EntityPan()\n\n6) Error.java:\nIn case of any failure scenarios this model gives the necessary\ninformation.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 90 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 entitycst\n\nO legalEntityName: String\nO businessAddress: String\nO cityCode: List<String>\n\no gstNo: String\n\ne getLegalEntityName(): String\n\n\u00a9 getBusinessAddress(): String\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getGstNa(): String\n\ne setLegalEntityName(legalEntityName: String): void\ne setBusinessAddress(businessAddress: String): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setGstNo(gstNo: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne EntityGst()\n\n5) EntityPan.java:\nThis EntityPan class contains name as per PAN, pan number, and date of\nincorporation description.\n\n\u00a9 eEntitypan\n\nOo nameAsPerPan: String\nO panNo: String\no dateOfincorporation: String\n\ne getNameAsPerPan(): String\n\ne getPanNo(): String\n\n\u00a9 getDateOfincorporation(): String\n\ne setNameAsPerPan(nameAsPerPan: String): void\ne setPanNo(panNo: String): void\n\ne setDateOfincorporation(dateOfincorporation: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne EntityPan()\n\n6) Error.java:\nIn case of any failure scenarios this model gives the necessary\ninformation.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 90 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9) Error\n\nO type: String\nO code: String\n0 path: String\nOo message: String\n\n\u00a9 getType(): String\n\n\u00a9 getCode(): String\n\ne getPath(): String\n\n\u00a9 getMessage(): String\n\ne setType(type: String): void\n\n\u00a9 setCode(code: String): void\n\ne setPath(path: String): void\n\no setMessage(message: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne Error()\n\n7) ErrorResponse.java :\nThis class show the Error Response Acknowledgement, like example\nSubscriber id already exists/Subscribe id does not exist.\n\n\u00a9 ErrorResponse\n\noO message: ErrorResponseACK\nOo error: Error\n\n\u00a9 getMessage(): ErrorResponseACK\n\ne getError(): Error\n\ne setMessage(message: ErrorResponseACk): void\ne setError(error: Error): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ErrorResponse()\n\n8) ErrorResponseACK java :\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is\nunsuccess it gives NACK.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 91 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9) Error\n\nO type: String\nO code: String\n0 path: String\nOo message: String\n\n\u00a9 getType(): String\n\n\u00a9 getCode(): String\n\ne getPath(): String\n\n\u00a9 getMessage(): String\n\ne setType(type: String): void\n\ne setCode(code: String): void\n\ne setPath(path: String): void\n\ne setMessage(message: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne Error()\n\n7) ErrorResponse.java :\nThis class show the Error Response Acknowledgement, like example\nSubscriber id already exists/Subscribe id does not exist.\n\n\u00a9 ErrorResponse\n\noO message: ErrorResponseACK\nOo error: Error\n\n\u00a9 getMessage(): ErrorResponseACK\n\ne getError(): Error\n\ne setMessage(message: ErrorResponseACk): void\ne setError(error: Error): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ErrorResponse()\n\n8) ErrorResponseACK java :\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is\nunsuccess it gives NACK.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 91 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ErrorResponseack\nO ack: Ack\n\n\u00a9 equals(o: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ng tolndentedString(o: Object): String\n\u00a9 getAck(): Ack\n\ne setAck(ack: Ack): void\n\ne ErrorResponseACk()\n\n9) KarzaGstRequest.java :\nThis class contains the information of GST and Consent .\n\n\u00a9 KarzaGstRequest\n\n4 gstin: String\n4 consent: String\n\n\u00a9 getGstin(): String\n\ne getConsent(): String\n\ne setGstin(gstin: String): void\n\n\u00a9 setConsent(consent: String): void\n\u00a9 equals(a: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne KarzaGstRequest()\n\n10) KarzaPanRequest.java:\n\nThis Class contains the values of PAN number, Name, Date of birth,\nConsent.\n\n\u00a9 KarzaPanRequest\n\n4 pan: String\n\n4 name: String\n4 dob: String\n\n4 consent: String\n\ne getPan(): String\n\ne getName(): String\n\ne getDob(): String\n\ne getConsent(): String\n\ne setPan(pan: String): void\n\ne setName(name: String): void\n\ne setDob(dob: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne KarzaPanRequest()\n\n11) KeyPair.java:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 92 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 ErrorResponseack\nO ack: Ack\n\n\u00a9 equals(o: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ng tolndentedString(o: Object): String\n\u00a9 getAck(): Ack\n\ne setAck(ack: Ack): void\n\ne ErrorResponseACk()\n\n9) KarzaGstRequest.java :\nThis class contains the information of GST and Consent .\n\n\u00a9 KarzaGstRequest\n\n4 gstin: String\n4 consent: String\n\ne getGstin(): String\n\ne getConsent(): String\n\ne setGstin(gstin: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne KarzaGstRequest()\n\n10) KarzaPanRequest.java:\n\nThis Class contains the values of PAN number, Name, Date of birth,\nConsent.\n\n\u00a9 KarzaPanRequest\n\n4 pan: String\n\n4 name: String\n4 dob: String\n\n4 consent: String\n\ne getPan(): String\n\ne@ getName(): String\n\ne getDob(): String\n\n@ getConsent(): String\n\ne setPan(pan: String): void\n\ne setName(name: String): void\n\ne setDob(dob: String): void\n\ne setConsent(consent: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne KarzaPanRequest()\n\n11) KeyPair.java:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 92 of 125\n\nOpen Network for Digital Commerce\n\nThis Class contains the information about Signing public key, encryption public key, valid from\nand valid until which are in string format.\n\n\u00a9 KeyPair\n\nO signingPublickey: String\n\nO encryptionPublickey: String\nO validFrom: String\n\na validUntil: String\n\ne KeyPair(signingPublickey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\ne KeyPair(signingPublickey: String, encryptionPublicKey: String)\n\u00a9 KeyPair()\n\n\u00a9 getSigningPublickey(): String\n\ne getEncryptionPublickey(): String\n\n\u00a9 getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\ne setSigningPublickey(signingPublickey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\n12) Logs.java: This class contains Server Name and request id.\n\n\u00a9 Lous\n\nO requestid: String\n\n4 request: String\n\n4 type: String\n\n4 priority: String\n\n4 exception: String\n\n4 javaStackTrace: String\n+ serverName: String\n\n4 Logs(requestid: String, request: String, type: String, priority: String, exception: String, javaStackTrace: String, serverName: String)\n builder(): Logs. LogsBuilder\n\n@ getRequestid(): String\n\n\u00a9 getRequest(): Sting\n\n getType(): String\n\n\u00a9 getPriority(): String\n\ne getException(). String\n\n\u00a9 getJavaStackTrace(): String\n\n\u00a9 getServerName(): String\n\ne setRequestid(requestid: String): void\n\ne setRequest(request: String): void\n\n@ setType(type: String): void\n\n\u00a9 setPriority(priority: String): void\n setException(exception: String): void\n\ne setJavaStackTrace(javaStackTrace: String): void\n\u00a9 setServerName(serverName: String): void\n equals(o: Object): boolean\n\n\u00a9 canEqual(otner: Object): boolean\n\n@ hashCode(): int\n\n\u00a9 taString(): String\n\n13) NetworkParticipant java:\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And\nalso seller on record, city code list.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 93 of 125\n\nOpen Network for Digital Commerce\n\nThis Class contains the information about Signing public key, encryption public key, valid from\nand valid until which are in string format.\n\nKeyPair\n\nO signingPublickey: String\n\n\u00a9 encryptionPublickey: String\nO validFrom: String\n\no validUntil: String\n\ne KeyPair(signingPublickey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\ne KeyPair(signingPublickey: String, encryptionPublicKey: String)\n\u00a9 KeyPair()\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncryptionPublickey(): String\n\n\u00a9 getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\ne setSigningPublickey(signingPublickey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\n12) Logs.java: This class contains Server Name and request id.\n\n\u00a9 Lous\n\nco requestid: String\n\n4 request: String\n\n4 type: String\n\n4 priority: String\n\n4 exception: String\n\n4 javaStackTrace: String\n4 serverName: String\n\n4 Logs(requestid: String, request: String, type: String, priority: String, exception: String, javaStackTrace: String, serverName: String)\n builder(): Logs. LogsBuilder\n\n@ getRequestid(): String\n\n\u00a9 getRequest(): Sting\n\n getType(): String\n\n\u00a9 getPriority(): String\n\ne getException(). String\n\n\u00a9 getJavaStackTrace(): String\n\n\u00a9 getServerName(): String\n\ne setRequestid(requestid: String): void\n\n@ setRequest(request: String): void\n\n@ setType(type: String): void\n\n\u00a9 setPriority(priority: String): void\n\ne setException(exception: String): void\n\ne setJavaStackTrace(javaStackTrace: String): void\n\u00a9 setServerName(serverName: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(otner: Object): boolean\n\n@ hashCode(): int\n\ne taString(): String\n\n13) NetworkParticipant java:\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And\nalso seller on record, city code list.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 93 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 NetworkParticipant\n\nO subscriberUrl: String\n\n0 domain: String\n\n0 type: String\n\no msn: boolean\n\n0 cityCode: List<String>\n\nO sellerOnRecord: List<SellerOnRecord>\n\ne getKey(subscriberld: String): String\n\n\u00a9 getSubscriberUrl(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne isMsn(): boolean\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 getSellerOnRecord(): List<SellerOnRecord>\ne setSubscriberUrl(subscriberUri: String): void\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecord(sellerOnRecord: List<SellerOnRecord>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 NetworkParticipant()\n\n14) ReqLookup.java:\nThis Class contains the information such as Subscribe id, city, country, domain, type.\n\n\u00a9 ReqLookup\n\nO subscriberld: String\nO city: String\n\nO country: String\n\nOo domain: String\n\nO type: String\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne setSubscriberld(subscriberld: String): void\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\n\u00a9 setType(type: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\n toString(): String\n\ne@ ReqLookup()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 94 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 NetworkParticipant\n\n0 subscriberUri: String\n\n0 domain: String\n\nO type: String\n\no msn: boolean\n\nO cityCode: List<String>\n\nO sellerOnRecord: List<SellerOnRecord>\n\ne getKey(subscriberld: String): String\n\ne getSubscriberUri(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecord(): List<SellerOnRecord>\ne setSubscriberUrl(subscriberUrl: String): void\ne@ setDomain(domain: String): void\n\ne setType(type: String): void\n\ne setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 setSellerOnRecord(sellerOnRecord: List<SellerOnRecord>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode): int\n\ne toString(): String\n\n@ NetworkParticipant()\n\n14) ReqLookup.java:\nThis Class contains the information such as Subscribe id, city, country, domain, type.\n\n\u00a9 ReqLookup\n\nO subscriberld: String\nO city: String\n\nO country: String\n\nOo domain: String\n\nO type: String\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): String\n\ne getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\ne setSubscriberld(subscriberld: String): void\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne setType(type: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ ReqLookup()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 94 of 125\n\nOpen Network for Digital Commerce\n\n15) ReqOnSubscribe.java:\nThis Class shows Subscriber ID and challenge.\n\n\u00a9 Regonsubsribe\n\nO subscriberld: String\nO challenge: String\n\n\u00a9 getSubscriberld(): String\n\ne getChallenge(): String\n\ne setSubscriberld(subscriberld: String): void\ne setChallenge(challenge: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne ReqOnSubsribe()\n\n14) RequestOldSearch.java:\nThis class contains the values city name, country name, domain, type, subscriber id, unique\nkey id, message.\n\n\u00a9 RequestOldSearch\n\nO city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4ukld: String\n\n4 statusCode: String\n4 msg: String\n\ne getCity(): String\n\ne getCountry(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne getSubscriberld(): String\n\ne getUkld(): String\n\n\u00a9 getStatusCode(): String\n\n\u00a9 getMsg(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\n\u00a9 setType(type: String): void\n\ne setSubscriberld(subscriberld: String): void\ne setUKid(ukld: String): void\n\n\u00a9 setStatusCode(statusCode: String): void\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestOldSearch()\n\n15) RequestSearch.java:\nThis class contains the values such as Sender subscriber id, request id, time stamp, search,\nparameters, signature, status code and message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 95 of 125\n\nOpen Network for Digital Commerce\n\n15) ReqOnSubscribe.java:\nThis Class shows Subscriber ID and challenge.\n\n\u00a9 Regonsubsribe\n\nO subscriberld: String\nOo challenge: String\n\ne getSubscriberld(): String\n\ne getChallenge(): String\n\ne setSubscriberld(subscriberld: String): void\n\u00a9 setChallenge(challenge: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne@ ReqOnSubsribe()\n\n14) RequestOldSearch.java:\nThis class contains the values city name, country name, domain, type, subscriber id, unique\nkey id, message.\n\n\u00a9 RequestOldSearch\n\nO city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4. ukld: String\n\n4 statusCode: String\n4 msg: String\n\ne getCity(): String\n\ne getCountry(): String\n\ne@ getDomain(): String\n\ne getType(): String\n\ne getSubscriberld(): String\n\ne getUkKld(): String\n\n\u00a9 getStatusCode(): String\n\n\u00a9 getMsg(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne@ setDomain(domain: String): void\n@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): void\ne setUKld(ukld: String): void\n\n\u00a9 setStatusCode(statusCode: String): void\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestOldSearch()\n\n15) RequestSearch.java:\nThis class contains the values such as Sender subscriber id, request id, time stamp, search,\nparameters, signature, status code and message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 95 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestSearch\n\n4 sender_subscriber_id: String\n\nA requestid: String\n\n4 timestamp: String\n\n4 searchParameters: RequestSearchParam\n4 signature: String\n\n4 statusCode: String\n\n4 msg: String\n\ne getSender_subscriber_id(): String\n\ne getRequestlid(): String\n\n\u00a9 getTimestamp(): String\n\n\u00a9 getSearchParameters(): RequestSearchParam\n\ne getSignature(): String\n\n\u00a9 getStatusCode(): String\n\ne getMsg(): String\n\ne setSender_subscriber_id(sender_subscriber_id: String): void\ne setRequestid(requestid: String): void\n\ne setTimestamp(timestamp: String): void\n\ne setSearchParameters(searchParameters: RequestSearchParam): void\ne setSignature(signature: String): void\n\ne setStatusCode(statusCode: String): void\n\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearch()\n\n16)RequestSearchParam java:\nThis class contains the values such as city, country, domain, type, subscriber id, data.\n\n\u00a9 RequestSearchParam\n\n0 city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4 data: String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n\u00a9 getType(): String\n\n\u00a9 getSubscriberld(): String\n\ne getData(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): vaid\n\u00a9 setData(data: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearchParam()\n\n17) RequestText java:\nThis class contains the values such as client public key, challenge,\nclient private key\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 96 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestSearch\n\n4 sender_subscriber_id: String\n\nA requestid: String\n\n4 timestamp: String\n\n4 searchParameters: RequestSearchParam\n4 signature: String\n\n4 statusCode: String\n\n4 msg: String\n\ne getSender_subscriber_id(): String\n\ne getRequestid(): String\n\n\u00a9 getTimestamp(): String\n\n\u00a9 getSearchParameters(): RequestSearchParam\n\ne getSignature(): String\n\n\u00a9 getStatusCode(): String\n\ne getMsg(): String\n\ne setSender_subscriber_id(sender_subscriber_id: String): void\ne setRequestid(requestid: String): void\n\ne setTimestamp(timestamp: String): void\n\ne setSearchParameters(searchParameters: RequestSearchParam): void\ne setSignature(signature: String): void\n\ne setStatusCode(statusCode: String): void\n\ne setMsg(msg: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\ne@ RequestSearch()\n\n16)RequestSearchParam java:\nThis class contains the values such as city, country, domain, type, subscriber id, data.\n\n\u00a9 RequestSearchParam\n\n0 city: String\n\n0 country: String\n\n0 domain: String\n\no type: String\n\n4 subscriberld: String\n4 data: String\n\n\u00a9 getCity(): String\n\n\u00a9 getCountry(): String\n\ne getDomain(): String\n\n@ getType(): String\n\ne getSubscriberld(): String\n\ne getData(): String\n\ne setCity(city: String): void\n\ne setCountry(country: String): void\ne setDomain(domain: String): void\ne@ setType(type: String): void\n\ne setSubscriberld(subscriberld: String): vaid\n\u00a9 setData(data: String): void\n\n@ equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne@ RequestSearchParam()\n\n17) RequestText java:\nThis class contains the values such as client public key, challenge,\nclient private key\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 96 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestText\n\n4 clientPublickey: String\n4 challenge: String\n4 clientPrivateKey: String\n\ne getClientPublicKey(): String\n\n\u00a9 getChallenge(): String\n\n\u00a9 getClientPrivateKey(): String\n\n@ setClientPublickey(clientPublicKey: String): void\ne setChallenge(challenge: String): void\n\ne setClientPrivateKey(clientPrivateKey: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne RequestText()\n\n18) SellerOnRecord.java :\nThis entity contains the values such as unique key id, key pair, city code.\n\n\u00a9 selleronRecord\n\nO uniqueKeyld: String\nOo keyPair: KeyPair\nO cityCode: List<String>\n\ne getKey(subscriberld: String): String\n\n\u00a9 getUniquekKeyld(): String\n\n\u00a9 getKeyPair(): KeyPair\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 setUniqueKeyld(uniqueKeyld: String): void\ne setKeyPair(keyPair: KeyPair): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 SellerOnRecord()\n\n19) SubscribeBody.java :\n\nThis class contains the values such as subscribe context details, subscribe\nmessages. Gives error message details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 97 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n\u00a9 RequestText\n\n4 clientPublicKey: String\n4 challenge: String\n4 clientPrivateKey: String\n\ne getClientPublicKey(): String\n\n\u00a9 getChallenge(): String\n\n\u00a9 getClientPrivateKey(): String\n\ne setClientPublickey(clientPublicKey: String): void\ne setChallenge(challenge: String): void\n\ne setClientPrivateKey(clientPrivateKey: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne RequestText()\n\n18) SellerOnRecord.java :\nThis entity contains the values such as unique key id, key pair, city code.\n\n\u00a9 selleronRecord\n\nO uniqueKeyld: String\nOo keyPair: KeyPair\nO cityCode: List<String>\n\ne getKey(subscriberld: String): String\n\n@ getUniqueKeyld(): String\n\n\u00a9 getKeyPair(): KeyPair\n\n\u00a9 getCityCode(): List<String>\n\ne setUniqueKeyld(uniqueKeyld: String): void\ne setKeyPair(keyPair: KeyPair): void\n\ne setCityCode(cityCode: List<String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n@ SellerOnRecord()\n\n19) SubscribeBody.java :\nThis class contains the values such as subscribe context details, subscribe\nmessages. Gives error message details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 97 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscriveBody\n\nO context: SubscribeContext\n\nOo message: SubscribeMessage\n4 edit: boolean\n\n4 msgError: Map<String,String>\n\n\u00a9 getContext(): SubscribeContext\n\n\u00a9 getMessage(): SubscribeMessage\n\ne isEdit(): boolean\n\n\u00a9 getMsgError(): Map<String,String>\n\ne setContext(context: SubscribeContext): void\n\n\u00a9 setMessage(message: SubscribeMessage): void\ne setEdit(edit: boolean): void\n\ne setMsgError(msgError: Map<String,String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeBody()\n\n20) SubscribeContext.java :\nThis class contains the values of subscribe context details. shows the operation details.\n\n\u00a9 SubscribeContext\n\n0 operation: Context\n\n\u00a9 getOperation(): Context\n\n\u00a9 setOperation(operation: Context): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 SubscribeContext()\n\n21) SubscribeMessage.java:\nThis class contains the values of entity, network participant, time stamp, request id.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 98 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscriveBody\n\n0 context: SubscribeContext\n\nOo message: SubscribeMessage\n4 edit: boolean\n\n4 msgError: Map<String,String>\n\ne getContext(): SubscribeContext\n\ne getMessage(): SubscribeMessage\n\ne isEdit(): boolean\n\ne getMsgError(): Map<String,String>\n\ne setContext(context: SubscribeContext): void\n\ne setMessage(message: SubscribeMessage): void\ne setEdit(edit: boolean): void\n\ne setMsgError(msgError: Map<String, String>): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\ne SubscribeBody()\n\n20) SubscribeContext.java :\nThis class contains the values of subscribe context details. shows the operation details.\n\n\u00a9 SubscribeContext\n\n0 operation: Context\n\n@ getOperation(): Context\n\ne setOperation(operation: Context): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne@ SubscribeContext()\n\n21) SubscribeMessage.java:\nThis class contains the values of entity, network participant, time stamp, request id.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 98 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscrivemessage\n\n0 entity: Entity\n\n0 networkParticipant: List<NetworkParticipant>\nOo timestamp: String\n\noreqid: String\n\n\u00a9 getEntity(): Entity\n\ne getNetworkParticipant(): List<NetworkParticipant>\n\u00a9 getTimestamp(): String\n\n\u00a9 getReqid(): String\n\ne setEntity(entity: Entity): void\n\ne setNetworkParticipant(networkParticipant: List<NetworkParticipant>): void\ne setTimestamp(timestamp: String): void\n\ne setReqid(reqld: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeMessage()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 99 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 subscrivemessage\n\n0 entity: Entity\n\n0 networkParticipant: List<NetworkParticipant>\nOo timestamp: String\n\noreqid: String\n\n\u00a9 getEntity(): Entity\n\n\u00a9 getNetworkParticipant(): List<NetworkParticipant>\ne getTimestamp(): String\n\ne getReqid(): String\n\ne setEntity(entity: Entity): void\n\ne setNetworkParticipant(networkParticipant: List<NetworkParticipant>): void\ne setTimestamp(timestamp: String): void\n\ne setReqid(reqld: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\ne SubscribeMessage()\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 99 of 125\n\nOpen Network for Digital Commerc\n\nCom.nsdl.beckn.np.model.response:\n\n1)ApiEntityMasterProjection.java:\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption,\nvalid from and valid until details, Subscriber URL.\n\n\u00a9@ ApientitymasterProjection\n\ngetiID(): UUID\n\ngetCREATED(): Timestamp\ngetUPDATED(): Timestamp\ngetCALLBACK(): String\ngetCITYCODE(): String\ngetECITYCODE(): String\ngetCOUNTRY(): String\ngetENCRYPT(): String\ngetSIGNING(): String\ngetSTATUS(): String\ngetSUBSCRIBERID(): String\ngetUNIQUEKEYID(): String\ngetVALIDFROM(): Timestamp\ngetVALIDUNTIL(): Timestamp\ngetDOMAIN(): String\n\ngetTYPE(): String\ngetSELLERENCRYPTION(): String\ngetSELLERSIGNING(): String\ngetSELLERCITYCODE(): String\ngetSELLERUNIQUEKEYID(): String\ngetSELLERVALIDFROM(): Timestamp\ngetSELLERVALIDUNTIL(): Timestamp\ngetSUBSCRIBERURL(): String\ngetMSN(): boolean\n\n2) MessageCustomeResponse.java:\nIn this class there is a relationship between Message Customer response and message\nresponse.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 100 of 125\n\nOpen Network for Digital Commerce\n\nCom.nsdl.beckn.np.model.response:\n\n1)ApiEntityMasterProjection.java:\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption,\nvalid from and valid until details, Subscriber URL.\n\n\u00a9@ ApientitymasterProjection\n\ngetiID(): UUID\n\ngetCREATED(): Timestamp\ngetUPDATED(): Timestamp\ngetCALLBACK(): String\ngetCITYCODE(): String\ngetECITYCODE(): String\ngetCOUNTRY(): String\ngetENCRYPT(): String\ngetSIGNING(): String\ngetSTATUS(): String\ngetSUBSCRIBERID(): String\ngetUNIQUEKEYID(): String\ngetVALIDFROM(): Timestamp\ngetVALIDUNTIL(): Timestamp\ngetDOMAIN(): String\n\ngetTYPE(): String\ngetSELLERENCRYPTION(): String\ngetSELLERSIGNING(): String\ngetSELLERCITYCODE(): String\ngetSELLERUNIQUEKEYID(): String\ngetSELLERVALIDFROM(): Timestamp\ngetSELLERVALIDUNTIL(): Timestamp\ngetSUBSCRIBERURL(): String\ngetMSN(): boolean\n\n2) MessageCustomeResponse.java:\nIn this class there is a relationship between Message Customer response and message\nresponse.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 100 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9essageResponse\n\n\u00a9 MessageCustomeResponse\n\nA list: T\n\n\u00a9 MessageCustomeResponse(message: T)\n\u00a9 getList(): T\n\ne setList(list: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n3) MessageResponse.java:\n\n\u00a9 MessageResponse\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\u00a9 hashCode(): int\n\ne toString(): String\n\n\u00a9 MessageResponse()\n\n4) Response.java:\nThis class contains the response of the status message.\n\n\u00a9 Response \u201cy\n\nO status: String\nOo message: T\n\ne Response(status: String, message: T)\n\ne ok(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<T>\n\u00a9 error(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<Response<T>>\n\u00a9 getStatus(): String\n\n\u00a9 getMessage(): T\n\ne setStatus(status: String): void\n\ne setMessage(message: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n5) ResponseKeyPair.java:\n\nThis class contains the details of signing public key, encryption public key, valid from and valid\nuntil.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 101 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n@\u00a9essageResponse\n\n\u00a9 MessageCustomeResponse\n\n4 list: T\n\n\u00a9 MessageCustomeResponse(message: T)\n\u00a9 getList(): T\n\ne setList(list: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne@ hashCode(): int\n\ne toString(): String\n\n3) MessageResponse.java:\n\n\u00a9 MessageResponse\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n\u00a9 MessageResponse()\n\n4) Response.java:\nThis class contains the response of the status message.\n\nResponse mn\n\nO status: String\noO message: T\n\ne Response(status: String, message: T)\n\ne ok(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<T>\n\u00a9 error(message: T, onboardingService: OnboardingSubscirberService): ResponseEntity<Response<T>>\n\u00a9 getStatus(): String\n\n\u00a9 getMessage(): T\n\ne setStatus(status: String): void\n\ne setMessage(message: T): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n5) ResponseKeyPair.java:\n\nThis class contains the details of signing public key, encryption public key, valid from and valid\nuntil.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 101 of 125\n\nOpen Network for Digital Commerc\n\n\u00a9 ResponseKeyPair\n\nO signingPublicKey: String\n\n5 encryptionPublickey: String\nO validFrom: String\n\no validUntil: String\n\n\u00a9 ResponseKeyPair(signingPublicKey: String, encryptionPublicKey: String, validFrom: String, validUntil: String)\n\u00a9 getSigningPublickey(): String\n\n\u00a9 getEncryptionPublickey(): String\n\ne getValidFrom(): String\n\n\u00a9 getValidUntil(): String\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): void\n\ne setEncryptionPublicKkey(encryptionPublicKey: String): void\n\u00a9 setValidFrom(validFrom: String): void\n\n\u00a9 setValidUntil(validuntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n hashCode(): int\n\n\u00a9 toString(): String\n\ne ResponseKeyPair(signingPublickey: String, encryptionPublickey: String, validFrom: OffsetDateTime, validUntil: OffsetDateTime)\n\n6) ResponseNetworkParticipant.java:\n\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or\n\nSellerApp, MSN value, city code and seller on record details and map seller details.\n\n\u00a9 ResponseNetworkParticipant\n\n4 subscriberUrl: String\n\n4 domain: String\n\n4 type: String\n\nmsn: boolean\n\n4 cityCode: List<String>\n\n4 sellerOnRecordMasters: ListcResponseSellerOnRecord>\n4 mapSeller: Map<String Integer>\n\ne ResponseNetworkParticipant(obj: ApiEntityMasterProjection)\ne addSeller(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberUrl(): String\n\n\u00a9 getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecordMasters(): ListsResponseSellerOnRecord>\n\u00a9 getMapSeller(): Map<String Integer>\n\ne setSubscriberUrl(subscriberUrl: String): void\n\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne@ setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecordMasters(sellerOnRecordMasters: List<ResponseSellerOnRecord>): void\n\u00a9 setMapSeller(mapSeller: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n7) ResponsEntityMaster.java:\n\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing\npublic key, encryption public key, created updated, unique key id, and network participant\n\ndetails.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 102 of 125\n\nOpen Network for Digital Commerc\n\n\u00a9 ResponsekeyPair\n\nO signingPublicKey: String\n\n\u00a9 encryptionPublickey: String\nO validFrom: String\n\noO validUntil: String\n\ne ResponseKeyPair(signingPublicKey: String, encryptionPublicKey: String, validFrom: OffsetDateTime, validUntil: OffsetDateTime)\n\u00a9 ResponseKeyPair(signingPublickey: String, encryptionPublickey: String, validFrom: String, validUntil: String)\n\u00a9 getSigningPublickey(): String\n\ne getEncryptionPublicKey(): String\n\n\u00a9 getValidFrom(): String\n\ne getValidUntil(): String\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): void\n\ne setEncryptionPublickey(encryptionPublickey: String): void\n\n\u00a9 setValidFrom(validFrom: String): void\n\n\u00a9 setValidUntil(validuntil: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n hashCode(): int\n\n\u00a9 toString(): String\n\n6) ResponseNetworkParticipant.java:\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or\nSellerApp, MSN value, city code and seller on record details and map seller details.\n\n\u00a9 ResponseNetworkParticipant\n\n4 subscriberUrli: String\n\n4 domain: String\n\n4 type: String\n\nmsn: boolean\n\n4 cityCode: List<String>\n\n4 sellerOnRecordMasters: List<ResponseSellerOnRecord>\n4 mapSeller: Map<String Integer>\n\n\u00a9 ResponseNetworkParticipant(obj: ApiEntityMasterProjection)\ne addSeller(obj: ApiEntityMasterProjection): void\n\ne getSubscriberUrl(): String\n\ne getDomain(): String\n\ne getType(): String\n\ne isMsn(): boolean\n\ne getCityCode(): List<String>\n\n\u00a9 getSellerOnRecordMasters(): ListsResponseSellerOnRecord>\n\u00a9 getMapSeller(): Map<String Integer>\n\ne setSubscriberUrl(subscriberUri: String): void\n\ne setDomain(domain: String): void\n\n\u00a9 setType(type: String): void\n\ne@ setMsn(msn: boolean): void\n\n\u00a9 setCityCode(cityCode: List<String>): void\n\ne setSellerOnRecordMasters(sellerOnRecordMasters: List<ResponseSellerOnRecord>): void\n\u00a9 setMapSeller(mapSeller: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode\u2018): int\n\ne toString(): String\n\n7) ResponsEntityMaster.java:\n\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing\npublic key, encryption public key, created updated, unique key id, and network participant\ndetails.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 102 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ResponsentityMaster\n\n0 subscriberld: String\n\nO city: List<String>\n\n\u00a9 country: String\n\nOo validFrom: String\n\nO validUntil: String\n\nO signingPublickey: String\n\nO encrPublickey: String\n\nO created: String\n\n0 updated: String\n\n0 uniqueKeyld: String\n\n4 networkParticipantMasters: ListsResponseNetworkParticipant>\n4 mapNP: Map<String,Integer>\n\n\u00a9 ResponsEntityMaster()\n\ne ResponsEntityMaster(obj: ApiEntityMasterProjection)\n\u00a9 addNp(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): List<String>\n\n\u00a9 getCountry(): String\n\n\u00a9 getValidFram(): String\n\n\u00a9 getValidUntil(): String\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncrPublicKey(): String\n\n\u00a9 getCreated(): String\n\n\u00a9 getUpdated(): String\n\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getNetworkParticipantMasters(): ListsResponseNetworkParticipant>\ne getMapNP(): Map<String,Integer>\n\ne setSubscriberld(subscriberld: String): void\n\n\u00a9 setCity(city: List<String>): void\n\ne setCountry(country: String): void\n\n\u00a9 setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 setSigningPublickey(signingPublickey: String): vaid\ne setEncrPublickey(encrPublickey: String): void\n\ne setCreated(created: String): void\n\n\u00a9 setUpdated(updated: String): void\n\ne setUniquekeyld(uniquekeyld: String): void\n\n\u00a9 setNetworkParticipantMasters(networkParticipantMasters: List<ResponseNetworkParticipant>): void\n\u00a9 setMapNP(mapNP: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n8) ResponseOnSubscribe.java :\nThis class contains the answers of the response.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 103 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\n(\u00a9) ResponsEntityMaster\n\nO subscriberld: String\n\nO city: List<String>\n\nO country: String\n\na validFrom: String\n\n0 validUntil: String\n\nO signingPublickey: String\n\nO encrPublickey: String\n\nO created: String\n\noO updated: String\n\nO uniquekeyld: String\n\n4 networkParticipantMasters: ListsResponseNetworkParticipant>\n4 mapNP: Map<String,Integer>\n\n\u00a9 ResponsEntityMaster()\n\ne ResponsEntityMaster(obj: ApiEntityMasterProjection)\n\u00a9 addNp(obj: ApiEntityMasterProjection): void\n\n\u00a9 getSubscriberld(): String\n\n\u00a9 getCity(): List<String>\n\n\u00a9 getCountry(): String\n\n\u00a9 getValidFram(): String\n\n@ getValidUntil(): String\n\n\u00a9 getSigningPublicKey(): String\n\ne getEncrPublicKey(): String\n\n\u00a9 getCreated(): String\n\n\u00a9 getUpdated(): String\n\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getNetworkParticipantMasters(): ListsResponseNetworkParticipant>\ne getMapNP(): Map<String,Integer>\n\ne setSubscriberld(subscriberld: String): void\n\n\u00a9 setCity(city: List<String>): void\n\ne setCountry(country: String): void\n\ne setValidFrom(validFrom: String): void\n\ne setValidUntil(validUntil: String): void\n\n\u00a9 setSigningPublicKey(signingPublicKey: String): vaid\ne setEncrPublickey(encrPublicKey: String): void\n\ne setCreated(created: String): void\n\n\u00a9 setUpdated(updated: String): void\n\ne setUniquekeyld(uniquekeyld: String): void\n\n\u00a9 setNetworkParticipantMasters(networkParticipantMasters: List<ResponseNetworkParticipant>): void\n\u00a9 setMapNP(mapNP: Map<String,Integer>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\ne hashCode(): int\n\n toString(): String\n\n8) ResponseOnSubscribe.java :\nThis class contains the answers of the response.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 103 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 Responseonsubsribe\n\nO answer: String\n\n\u00a9 getAnswer(): String\n\ne setAnswer(answer: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\ne ResponseOnSubsribe()\n\n9) ResponseSellerOnRecord.java:\n\nThis class contains the details of unique key id, key pair value, and city code. Gives the\nresponse of seller on record details.\n\n\u00a9 ResponseSellerOnRecord\n\n4 uniqueKeyld: String\n4 keyPair: ResponsekKeyPair\n4 cityCode: List<String>\n\ne ResponseSellerOnRecord(obj: ApiEntityMasterProjection)\n\u00a9 getUniqueKeyld(): String\n\n\u00a9 getKeyPair(): ResponsekeyPair\n\n\u00a9 getCityCode(): List<String>\n\n\u00a9 setUniquekKeyld(uniquekKeyld: String): void\n\ne setKeyPair(keyPair: ResponseKeyPair): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n@ hashCode(): int\n\ne toString(): String\n\n10) ResponseText.java:\nThis class contains the details answer of response text.\n\n\u00a9 ResponseText\n4 answer: String\n\ne ResponseText(answer: String)\n\ne getAnswer(): String\n\ne setAnswer(answer: String): void\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n11) ResponsOldCityArrayEntityMaster java:\nThis class contains the details of city, here there is a relation with response old entity parent\nmaster and response old city array entity master.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 104 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 Responseonsubsribe\n\nO answer: String\n\n@ getAnswer(): String\n\ne setAnswer(answer: String): void\ne equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne@ hashCode(): int\n\ne toString(): String\n\ne@ ResponseOnSubsribe()\n\n9) ResponseSellerOnRecord.java:\n\nThis class contains the details of unique key id, key pair value, and city code. Gives the\nresponse of seller on record details.\n\n\u00a9 ResponseSellerOnRecord\n\n4 uniqueKeyld: String\n4 keyPair. ResponseKeyPair\nA cityCode: List<String>\n\ne ResponseSellerOnRecord(obj: ApiEntityMasterProjection)\n\u00a9 getUniqueKeyld(): String\n\ne getKeyPair(): ResponsekKeyPair\n\n\u00a9 getCityCode(): List<String>\n\ne setUniqueKeyld(uniqueKeyld: String): void\n\ne setKeyPair(keyPair: ResponseKeyPair): void\n\u00a9 setCityCode(cityCode: List<String>): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n10) ResponseText.java:\nThis class contains the details answer of response text.\n\n\u00a9 ResponseText\n4 answer: String\n\ne ResponseText(answer: String)\n\ne getAnswer(): String\n\ne setAnswer(answer: String): void\n@ equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\ne hashCode(): int\n\ne toString(): String\n\n11) ResponsOldCityArrayEntityMaster java:\nThis class contains the details of city, here there is a relation with response old entity parent\nmaster and response old city array entity master.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 104 of 125\n\nOpen Network for Digital Co\n\n12) ResponsOldCityEntityMaster java:\n\n|@esponscntyParentastr\n\nI\n\n\u00a9 ResponsolacityarrayEntityMaster\n\nO city: String\n\ne ResponsOldCityArrayEntityMaster(master: ResponsEntityMaster, np: ResponseNetworkParticipant)\n\ne initValue(master: ResponsEntityMaster, np: ResponseNetworkParticipant): void\n\ne ResponsOldCityArrayEntityMaster(item: ResponsEntityMaster, np: ResponseNetworkParticipant, seller: ResponseSellerOnRecord)\n\u00a9 toStringCity(city: List<String>): String\n\n\u00a9 getCity(): String\n\ne setCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nThis class contains the details of city and there is relation between response old entity parent\nmaster and response old city entity master.\n\n\u00a9 responsoraent ParentMaster\n\n\u00a9 ResponsOldCityEntityMaster\nOciy: String\n\n ResponsOldCityEntityMaster(abj: ResponsOldEntityParentMaster, city. String)\n\u00a9 getCtty(): String\n\n\u00a9 setCity(city: String): void\n\n equals(o: Gbject): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\n\u00a9 hashCode(): int\n\n toString|): String\n\n13) ResponsOldEntityParentMaster.java:\n\nThis class contains the details of subscriber id, status information, unique key\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption\npublic key, created, updated, brid, and city details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 105 of 125\n\nOpen Network for Digital Commerc\n\n12) ResponsOldCityEntityMaster java:\n\n|@esponscntyParentaster\n\nI\n\n\u00a9 ResponsolacityarrayEntityMaster\n\no city: String\n\n\u00a9 ResponsOldCityArrayEntityMaster(master: ResponsEntityMaster, np: ResponseNetworkParticipant)\n\ne initValue(master: ResponsEntityMaster, np: ResponseNetworkParticipant): void\n\ne ResponsOldCityArrayEntityMaster(item: ResponsEntityMaster, np: ResponseNetworkParticipant, seller: ResponseSellerOnRecord)\n\u00a9 toStringCity(city: List<String>): String\n\n\u00a9 getCity(): String\n\ne setCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nThis class contains the details of city and there is relation between response old entity parent\nmaster and response old city entity master.\n\n\u00a9 ResponsOldEntityParentMaster\n\n\u00a9 ResponsOldCityEntityMaster\n\nO city: String\n\n\u00a9 ResponsOldCityEntityMaster(abj: ResponsOldEntityParentMaster, city. String)\n\u00a9 getCity(): String\n\n\u00a9 setCity(city: String): void\n\n\u00a9 equals(a: Object): boolean\n\n\u00a9 canEqual(ather: Object): boolean\n\n\u00a9 hashCode(): int\n\n\u00a9 toString(): String\n\n13) ResponsOldEntityParentMaster.java:\n\nThis class contains the details of subscriber id, status information, unique key\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption\npublic key, created, updated, brid, and city details.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 105 of 125\n\nn Network for Digital Commerce\n\n\u00a9 ResponsoldentityParentmaster\n\nsubscriberld: String\n\nstatus: String\n\nuklid: String\n\nsubscriberUrl: String\n\ncountry: String\n\ndomain: String\n\nvalidFrom: String\n\nvalidUntil: String\n\ntype: String\n\nsigningPublickey: String\nencrPublickey: String\n\ncreated: String\n\nupdated: String\n\nbrid: String\n\ncity: String\nResponsOldEntityParentMaster()\nResponsOldEntityParentMaster(obj: ApiEntityMasterProjection, type: String, city: String)\ntoStringCity(city: List<String>): String\ngetSubscriberld(): String\n\ngetStatus(): String\n\ngetUkid(): String\n\ngetSubscriberUr|(): String\ngetCountry(): String\n\ngetDomain(): String\n\ngetValidFrom(): String\ngetValidUntil(): String\n\ngetType(): String\ngetSigningPublickey(): String\ngetEncrPublickey(): String\ngetCreated(): String\n\ngetUpdated(): String\n\ngetBrid(): String\n\ngetCity(): String\nsetSubscriberld(subscriberld: String): void\nsetStatus(status: String): void\nsetUkld(ukld: String): void\nsetSubscriberUrl(subscriberUrl: String): void\nsetCountry(country: String): void\nsetDomain(domain: String): void\nsetValidFrom(validFrom: String): void\nsetValidUntil(validUntil: String): void\nsetType(type: String): void\nsetSigningPublickey(signingPublickey: String): void\nsetEncrPublickey(encrPublickey: String): void\nsetCreated(created: String): void\nsetUpdated(updated: String): void\nsetBrid(brid: String): void\n\nsetCity(city: String): void\n\n\u00a9 equals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\n\u00a9 hashCode(): int\n\ne toString(): String\n\nC@oovovevevoevoeoenoeoeoeoevoeoeoeoeoeoeoe0000000000000/000000000000000\n\nF. Sequence diagrams\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 106 of 125\n\nOpen Network for Digital Commerce\n\n\u00a9 ResponsoldentityParentmaster\n\nsubscriberld: String\nstatus: String\n\nuklid: String\nsubscriberUrl: String\ncountry: String\ndomain: String\nvalidFrom: String\nvalidUntil: String\ntype: String\nsigningPublickey: String\nencrPublickey: String\ncreated: String\nupdated: String\n\nbrid: String\n\ncity: String\n\nResponsOldEntityParentMaster()\nResponsOldEntityParentMaster(obj: ApiEntityMasterProjection, type: String, city: String)\ntoStringCity(city: List<String>): String\ngetSubscriberld(): String\n\ngetStatus(): String\n\ngetUkId(): String\n\ngetSubscriberUr|(): String\n\ngetCountry(): String\n\ngetDomain(): String\n\ngetValidFrom(): String\n\ngetValidUntil(): String\n\ngetType(): String\n\ngetSigningPublickey(): String\ngetEncrPublickey(): String\n\ngetCreated(): String\n\ngetUpdated(): String\n\ngetBrid(): String\n\ngetCity(): String\nsetSubscriberld(subscriberld: String): void\nsetStatus(status: String): void\n\nsetUkld(ukld: String): void\nsetSubscriberUrl(subscriberUrl: String): void\nsetCountry(country: String): void\nsetDomain(domain: String): void\nsetValidFrom(validFrom: String): void\nsetValidUntil(validUntil: String): void\nsetType(type: String): void\nsetSigningPublickey(signingPublickey: String): void\nsetEncrPublickey(encrPublickey: String): void\nsetCreated(created: String): void\nsetUpdated(updated: String): void\nsetBrid(brid: String): void\n\nsetCity(city: String): void\n\nequals(o: Object): boolean\n\n\u00a9 canEqual(other: Object): boolean\n\ne hashCode(): int\n\ne toString(): String\n\n@\u00a9000000000000000000000000000000000/000000000000000\n\nF. Sequence diagrams\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 106 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Controller\n\nController | Service |\n\nSending an Invalid Entity\n\n1g. 102 Please provide valid Entity: \"entity\nSending an Invalid Pan details\n\npa an Invalid Subscriber ID\n\n\u201c14 Pease provide valid Subscriber ID-\u201centity |\nseu an Invalid Pan Number\n\n~4--\n\n\u201csevtings an Invalid Network Parga\n108 Please provide valid Network Participant- \u201cnt\n\n| Sending an Invalid City code\n\n_ Sending an Invalid City code\n1g 500 Application failed to process the request- \u201centity |\n\nending an Invalid Country code\n\n1.133 Please provide a valid Country code- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 107 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Controller\n\n\u201cContraler | Senice\n\nrr T\n| Sending an Invalid Entity '\n1.102 Please provide valid Eritity: \"entity sunt\n' Sending an Invalid Pan details '\n1.103 Please provide valid Pan Detalls \"entity\n| Sending an Invalid Subscriber ID '\na\n\\e 104 Please provide valid Subscriber ID- \u201centity !\n\n\u00ab106 Please provide valid GST Number \"entity\n' Sending an Invalid Network Participant '\n37a\n1.108 Please provide valid Network Participant: \"entity |\n\n| Sending an Subscriber id already exists\n1.125 Please provide valid Subscriber identity\n\n| Sending an Invalid City code\n\n\u00ab\u00a300 Application failed to process the request. \"entity\n| Sending an Invalid Country code\n1<_133 Please provide a valid Country code- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 107 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Service\n\n1\n' '\n| Save Logs Response '\n' '\n'\n\n\u00ab10s response is saved \u2014 emtty a eeeeeeeeeeeeeee\n\n'\n| Save NApi Logs '\n\n! !\nwwe NADI logs SAVE. \"OMtity a csassccccssnseessesnnseessensseeneeson\n'\n' Save LogsResponse time\n!\n\nae Logs Response time is saved - \u201centity\n\n!\n\n' cahe Refresh\n\nit >\n'\n\n'\n\nae Cahe Refreshed- \"entity '\n\nsend validate entity\n\nentity validated- \"entity\n\nverify Authenticator header\n\n.Vetified Authenticator header-\"entity\nVerify Domain Value\nDomain Value Verified- \"entity\nverify unique key id\nunique key id is verified- \"entity\n\nvalidate city code\n\ncity code is verified- \"entity\n\nValidate Network Participant\n\nNetwork Participant is validated- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 108 of 125\n\nOpen Network for Digital Commerce\n\nOnboarding Subscriber Service\n\n1\n\n' 1\n| Save Logs Response '\ner\n\n! '\n1\n\n\u00ab10s response is saved \u2014 emtty a eeeeeeeeeeeeeee\n\n'\n| Save NApi Logs '\n\n! !\nwwe NADI logs SAVE. \"OMtity a csassccccssnseessesnnseessensseeneeson\n'\n\n' Save LogsResponse time\n\n!\n\nae Logs Response time is saved - \u201centity\n\n!\n\n' cahe Refresh '\nit >\n'\n'\n\nae Cahe Refreshed- \"entity '\n\nsend validate entity\n\nentity validated- \"entity\n\nverify Authenticator header\n\nverified Authenticator header- \"entity\n\nVerify Domain Value\n\nDomain Value Verified- \"entity\n\nverify unique key id\nunique key id is verified- \"entity\n\nvalidate city code\n\ncity code is verified- \"entity\n\nValidate Network Participant\n\nNetwork Participant is validated- \"entity\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 108 of 125\n\nOpen Network for Digital Commerce\n\n<\n| Validate No seller On Record ;\n\n\\\n\\\u201cg No seller on Record is validated- \"entity\n\ncere seacuattesvetantescantasstesnsvsssencnrsnstenrsseed ceseaseaceaceeseaseaceacease |\n' Validate No Network participant\n\\< No Network Participants validated -\"entity\nGet operational number\n\u201cOperational number is verified: \"entity a caasecccseeeens !\nValidate Seller On Record >\n\u201cSeller on record is Validated: \"entity a csssssssesesecesssssees !\nValidate schema >\n\u00a2 sohema is verified: \"emtity oc cccssesnnesseneee !\n\n' Valid OCSP '\n$A\n4 \"\niat OCSP is validated- \"entity '\n\neelese anes neetsnserscsscetneencenuedecueceesceeeeeeeseeesseneeeesseeeseeeeeeessees 4\nValidate data entity\nLe. data entity is validated: \"entity\nConvert Body to entity master ,!\n\u201cConverted o entity master \u201centity a cscsscsosssssseeeeeeeeed !\nenter Response text get encrypt text >\n\n| give initRkey\na -?\u00bb SS\n\nverified initRkey- \"entity\n\ncheck Authorization\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 109 of 125\n\nOpen Network for Digital Commerce\n\n<\n| Validate No seller On Record ;\n\n\\\n\\\u201cg No seller on Record is validated- \"entity\n\ncere seacuattesvetantescantasstesnsvsssencnrsnstenrsseed ceseaseaceaceeseaseaceacease |\n' Validate No Network participant\n\\< No Network Participants validated -\"entity\nGet operational number\n\u201cOperational Sumber is verified: \"entity a cassscccccecnnns !\nValidate Seller On Record >\n\u201cSeller on record is Validated: \"entity a csssssssesesecesssssees !\nValidate schema >\n\u00a2 sohema is verified: \"emtity oc cccssesnnesseneee !\n\n' Valid OCSP '\n>\n4 \"\niat OCSP is validated- \"entity '\n\nValidate data entity\nLe. data entity is validated: \"entity\nConvert Body to entity master\n\u201cConverted to entity master: \"entity, sssssssssseseeeseeeenee !\nenter Response text get encrypt text >\n\n| give initRkey\na -?\u00bb SS\n\nverified initRkey- \"entity\n\ncheck Authorization\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 109 of 125\n\nONG C\n\nOpen Ne\n\nG. Database Design\nThe registry component describes the following data models:\n\n- domain_master: This data model likely stores information about the various domains\nthat are supported by the registry. A domain could represent a specific business\ncontext, such as a particular industry or market segment, and the domain_master data\nmodel would store details about each domain, such as its name and any relevant\nmetadata.\n\n-  entity_master: This data model likely stores information about the various entities that\nare registered with the registry. An entity could represent a person, company, or other\ntype of organisation, and the entity_master data model would store details about each\nentity, such as its name, address, and contact information.\n\n- network_participant_master: This data model likely stores information about the\nvarious network participants that are registered with the registry. A network participant\ncould represent a user, device, or other type of entity that is participating in the network,\nand the network_participant_master data model would store details about each\nparticipant, such as its domain, status, and subscriber.\n\n-  registry_keys: This data model likely stores information about the various keys that are\nused to secure communications between the registry and other components. These\nkeys could include public and private keys, as well as any other types of keys that are\nused to encrypt or decrypt data.\n\n-  seller_on_record_master: This data model likely stores information about the various\nsellers that are registered with the registry. A seller could represent an individual or\ncompany that is offering products or services for sale, and_ the\nseller_on_record_master data model would store details about each seller, such as\nunique id, subscriber id and keys.\n\nH. ER Diagram\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 110 of 125\n\nOpen Ne\n\nG. Database Design\nThe registry component describes the following data models:\n\n- domain_master: This data model likely stores information about the various domains\nthat are supported by the registry. A domain could represent a specific business\ncontext, such as a particular industry or market segment, and the domain_master data\nmodel would store details about each domain, such as its name and any relevant\nmetadata.\n\n-  entity_master: This data model likely stores information about the various entities that\nare registered with the registry. An entity could represent a person, company, or other\ntype of organisation, and the entity_master data model would store details about each\nentity, such as its name, address, and contact information.\n\n- network_participant_master: This data model likely stores information about the\nvarious network participants that are registered with the registry. A network participant\ncould represent a user, device, or other type of entity that is participating in the network,\nand the network_participant_master data model would store details about each\nparticipant, such as its domain, status, and subscriber.\n\n-  registry_keys: This data model likely stores information about the various keys that are\nused to secure communications between the registry and other components. These\nkeys could include public and private keys, as well as any other types of keys that are\nused to encrypt or decrypt data.\n\n-  seller_on_record_master: This data model likely stores information about the various\nsellers that are registered with the registry. A seller could represent an individual or\ncompany that is offering products or services for sale, and_ the\nseller_on_record_master data model would store details about each seller, such as\nunique id, subscriber id and keys.\n\nH. ER Diagram\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 110 of 125\n\nONG C Sa\n\nOpen Network for Digital Commerce\n\nnetwork_participant_master ntity_master\nsoller_on_record_master\nid character ia character\nid character\n\n1\nentity_master_id character =a spi_version integer *\nentity, master_id character\napi_version integer dby character\napi_version integer\nd_by character dion timestamp\naby character\ndon timestamp cxt_tm_stmp umestamp\ndon timestamp\nort_tm_stmp timestamp source_ip character\ncxt_tm_simp timestamp\nsoutce_ip character updated_by character\nsource_ip character\nupdated_by character updated_on timestamp\nupdated_by character\nupdated_on timestamp updated_source_ip character\nupdated_on umestamp\nupdated_source_ip character version integer\nupdated_souroe_ip character\nversion integer address_cf_authorised_signatory character\nversion integer\ncity_code json business_address character\ncity_code jsonb\ndomain character callback_urt character\nencryption _public_key character\nmsn boolean city_code jsonb\nsigning_public_key character\nstatus character country character\nstatus character\n\u2018subscriber_id character date_of_incorporation date\nsubscriber_id character\n\u2018subsoniber_urt character effective_date_ot_registration timestamp\nunique_hay_id character\ntype character email_id character\nvalid_from fimestamp\nencryption_public_key character\nvalid_unfi fimestamp\npee soca al\nnetwork_participant_master_i\u00a2 character\nid character tegal_entty_name character\n@pi_varsion integer mobile_no. character\nd_by character name_as_per_pan character np_apl_logs\ndon timestamp name_of_authonsed_signatory character be chesecter\noti ae fimeataenp pan_number character So integer\nsource _ip character signing: public_key pe by character\nupdated _by character status character LE are\nupdated_on timestamp eubectber:32 eae ert_tm_stmp timestamp\nupdated_source_ip character unique_key_id character mate a \u2014-_\nversion integer valid_from timestamp tipdatedt_by =\nallow boolean valid _until timestamp hysgcseoa perce:\nupdated_source_ip character\nregistry_keys version integer\nid character\ngraph_analysis jsn_rqst jon\na api_version integer jsn_repns jsonb\nharacter\nkey character aa oe Les ne ed iin ad\ndon timestamp imeanaiees sere\nupdated_date timestamp pemyrncar ai rasta\ncxt_tm_strm umestam\npanne, Jeon aemiadl e typ character\nsource_ip character\nupdated_by character\nupdated_on timestamp\nupdated_source_ip character\nversion intoger\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 111 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\ncharacter\n> {_version Integer\naby character\ndion timestamp\ncat_tm_stmp timestamp\nsource_ip character\ncrt_tm_simp timestamp\nupdated_by character\nsource_ip character\ntt updated_by character\ncharacter\nupdated_source_ip Pa\ncharacter\nUpdated_source_ip version Integer pitas ae\nversion integer address_ot_authorised_signatory character\nversion integer\ncity_code json\u2019: business address character\ncity_code jsonb\ndomain character callback _url character\n\u2018encryption _public_key character\nboole: sede b\nmsn an city. \u00a2 json! ae abiae\nstatus character country character\nstatus character\n\u2018subsoriber_id character date_of_incorporation date\nsubscriber_id character\nsubscriber_urt character effective_date_ot_ragisiration timestamp\nunique_key_id character\ntype character \u2018email_id character\nvalid_from timestamp\nke charactor\nencryption_public_key misinn\neats pa =\nnetwork _participant_master_id character\nid character legal_entity_name character\napi_varsion integer mobile_na character\naby character Sass charactor\ndon timestamp name_of_authorised_signatory character\nShiau stop Sno pan_number character\nsource_ip character signing_public_key character ity character\nupdated_by character status character don betes\nupdated_on timestamp subscriber_id character bre soar heainoaarn\ntupdated_source_ip character unique_key_id character source_ip character\nversion integer valid_from umestamp hiarazst cgseaieine\nalow Seni updated_on timestamp:\nupdated_source_ip character\nversion integer\nid character pied jonb\napl_version mteger pee pas\ndby character fae joie\ndon Seer: subscriber_id character\ncat_tm_simp timestamp typ character\nsource_ip character\nupdated_by character\nupdated_on timestamp\nupdated_source_ip character\nversion integer\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 111 of 125\n\nOpen Net\n\nI. Registration Scenarios\n\nNetwork participants can register as Buyer App, Seller App or both.\n\nTo register as either, almost same steps are to be followed as shown in the next section barring\nthe following differences:\n\na. Register as Buyer App\n- ops_no=1\n- \"type \": \"buyerApp\u201d,\u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App alone.\n\nb. Register as Seller (Non-MSN)\n- ops _no=2\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a seller App alone that\n\nhas their own inventory.\n\nc. Register as Multi-Seller Node (MSN) Seller\n- ops_no=3\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a seller App that has\nmultiple merchants on boarded to their application.\n\nd. Register as Buyer and Non-MSN Seller\n- ops _no=4\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App and a seller\n\napp that has their own inventory.\n\ne. Register as Buyer and MSN Seller\n- ops _no=5\n- \"type\": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has multiple merchants on boarded to their application.\n\nJ. User Flow to create subscribe request (Aud: Network Participant)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 112 of 125\n\nOpen Net\n\nI. Registration Scenarios\n\nNetwork participants can register as Buyer App, Seller App or both.\n\nTo register as either, almost same steps are to be followed as shown in the next section barring\nthe following differences:\n\na. Register as Buyer App\n- ops_no=1\n- \"type\": \"buyerApp\u201d,\u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App alone.\n\nb. Register as Seller (Non-MSN)\n- ops _no=2\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a seller App alone that\n\nhas their own inventory.\n\nc. Register as Multi-Seller Node (MSN) Seller\n- ops_no=3\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a seller App that has\nmultiple merchants on boarded to their application.\n\nd. Register as Buyer and Non-MSN Seller\n- ops _no=4\n\"type \": \"buyerApp\u201d , \u201cmsn\u201d: false\n- \"type\": \u201csellerApp\u201d, \u201cmsn\u201d: false\nThis option is used when the network participant wants to register as a buyer App and a seller\n\napp that has their own inventory.\n\ne. Register as Buyer and MSN Seller\n- ops no=5\n- \"type\": \"buyerApp\u2019\u201d , \u201cmsn\u201d: false\n- \"type\": \"sellerApp\u201d , \u201cmsn\u201d: true\nThis option is used when the network participant wants to register as a buyer App and a seller\napp that has multiple merchants on boarded to their application.\n\nJ. User Flow to create subscribe request (Aud: Network Participant)\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 112 of 125\n\nNetwork for Digital Commerce\n\nStart\n\nPurchase valid\ndomain name\n\nMap domain with\nSSL. TI is\nsubscriber id\n\nCreate signed\npublic and private\nkeys\n\nGet subscriber _id\nwhitelisted from ONDC\n(manual process)\n\nCreate enc_dec\n\npublic private keys request_id using a\n\nUUID generator\n\nCreate ukid or\nCreate html page\n\nPre-requisites\n\nPlace created html at\nsubscriber_id. this is\nthe call back url.\n\nGenerate signature\nsigned_unique_req_id)\n\nAdd created signature\nto call back html\n\nDevelop and host\n/on_subscribe\n\nCongfigure\nJion_subscribe to use\nenc_dec_private key\nand ONDC public key\n\nHit the /subscribe\napi, pass required\nparameters\n\nReceive encrypted\nchallenge_string\nfrom registry\n\nDecrypt using\nlenc_dec private key\n\n\u2018Send back\n\nldecrypted challenge|\n\nstring as reponse to\nJon_subscribe\n\nReceive subscription\n\nacknowledgement\nfrom registry\n\nEnd\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 113 of 125\n\nONG C Sn\n\nOpen Network for Digital Commerce\n\nStart\n\nPurchase valid\ndomain name\n\nPurchase SSL\ncettificate\n\nMap domain with\nSSL. This is\nsubscriber id\n\nGet subscriber _id Create ukid or Create signed\nwhitelisted from ONDC request_id using a public and private\n(manual process) UUID generator keys\n\nCreate enc_dec\npublic private keys\n\nPlace created html at .\n\u2018subscriber_id. this is Generate signature\nthe call Back url. signed_unique_req_id)\n\nAdd created signature\nto call back htm!\n\nCongfigure\nJion_subscribe to use\nenc_dec_private key\nand ONDC public key\n\nHit the /subscribe\napi, pass required\n\nReceive encrypted\nchallenge_string\nfrom re\n\nDecrypt using\nJenc_dec private key|\n\nback\n\nldecrypted challenge|\n\nstring as reponse to\nJon_subscribe\n\nEnd\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 113 of 125\n\nSteps to be followed by Network Participant for getting onboarded on ONDC\n\n1. Gather all pre-requisites\na. Create Subscriber ID\ni. | Purchase a domain name \u2014 Eg. - ondc.example.com.\ni. Purchase SSL certificate\nii. Map it with purchased domain. Eg. \u2014 https://ondc.example.com\niii. subscriber_Id = SSL + Domain Name\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual\nprocess.\nv. Configure your system with the domain name and SSL. All\ncommunication with the ONDC network will happen through this domain.\nb. Generate Signing key pair\ni. | Method name: generateSigningKeyPair()\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/signature/key\nVv Pre-prod - https://preprod.registry.ondc.org/generate-sign-keys or\n\nv. Input (body) with example: No input needed\nvi. xpected output with example: signing_public key and\nsigning_private_key\n\n\"publicKey\": \"SSh8gLhvW1AWP8k5spsGGSWXIIOpAL6Z78bHpDF\n1SbE=\",\n\n\"privateKey\": \"vIk+FxxD5n8LcGOmgR6qL0SIn+Qo/AUQdZGzpeoU\nUno=\"\n\n}\n\nc. Generate request_Id or unique key id (ukld)\n\ni. | Method name: NA\n\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing. It should be unique for each network\nparticipant.\n\niii. | URL - https://www.uuidgenerator.net/\n\niv. Input (body) with example \u2014 No input needed\n\nv. Expected output with example - 64963e85-47c4-41b1-94ab-\n6f3acc490f4d\n\nd. Create an html page. Eg - ondc-site-verification.html\n\ne. Generate encryption-decryption key pair\ni. Method name: generateEncDecKey()\nii. | Description: Generate encryption decryption key pair using x25519 key\nexchange algorithm.\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/encrypt/decrypt/key\nVv Preprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key\n\nv. Input (body) with example: No input needed\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 114 of 125\n\nSteps to be followed by Network Participant for getting onboarded on ONDC\n\n1. Gather all pre-requisites\na. Create Subscriber ID\ni. | Purchase a domain name \u2014 Eg. - ondc.example.com.\ni. Purchase SSL certificate\nii. Map it with purchased domain. Eg. \u2014 https://ondc.example.com\niii. subscriber_Id = SSL + Domain Name\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual\nprocess.\nv. Configure your system with the domain name and SSL. All\ncommunication with the ONDC network will happen through this domain.\nb. Generate Signing key pair\ni. | Method name: generateSigningKeyPair()\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/signature/key\nVv Pre-prod - https://preprod.registry.ondc.org/generate-sign-keys or\n\nv. Input (body) with example: No input needed\nvi. xpected output with example: signing_public key and\nsigning_private_key\n\n\"publicKey\": \"SSh8gLhvW1AWP8k5spsGGSWXIIOpAL6Z78bHpDF\n1SbE=\",\n\n\"privateKey\": \"vIk+FxxD5n8LcGOmgR6qLOSIn+Qo/AUQdZGzpeoU\nUn0d=\"\n\n}\n\nc. Generate request_Id or unique key id (ukld)\n\ni. | Method name: NA\n\nii. | Description: This method generates ED25519 32 byte/256 bits key pair\n(Private and Public) for Signing. It should be unique for each network\nparticipant.\n\niii. | URL - https://www.uuidgenerator.net/\n\niv. Input (body) with example \u2014 No input needed\n\nv. Expected output with example - 64963e85-47c4-41b1-94ab-\n6f3acc490f4d\n\nd. Create an html page. Eg - ondc-site-verification.html\n\ne. Generate encryption-decryption key pair\ni. Method name: generateEncDecKey()\nii. | Description: Generate encryption decryption key pair using x25519 key\nexchange algorithm.\niii. | API: post/signature/key\n\niv. URL-\nVv Generic - {{pilot_url}}/crypto/encrypt/decrypt/key\nVv Preprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key\n\nv. Input (body) with example: No input needed\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 114 of 125\n\nvi. Expected output with example (enc_dec_private_key and\nenc_dec_public_key)\n\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dxX2amsNb1zyq\nBiLLT+e2+mzJ2QHO=\",\n\n\"privateKey\": \"MFECAQEwWBQYDK2VuBCIEINhPuAXdILHJvfhngONl0alQ8\nlJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dxX2amsNb1zyqBiLLT+e2\n+mzJ2QHO0=\"\n\n}\n\nf. Set-up for key verification via HTML\ni. Place the created HTML at subscriber_Id. The new url to access the\nHTML will be in the format: https//<subscriber_Id>/<html page title>.\nRegistry shall check existence of this url in later stages. And will be\nreferred as callback_url.\nEg. https://ondc.example.com/ ondc-site-verification.html\n\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate\nwhat is termed as signed_unique_req_id or signature.\ni. Method name: sign(byte[] privateKey, byte[] message)\nii. | Description: This method generates signature using given ED25519 32\nbyte/ 256 bits Private key.\niii. | API: post/signature/generate\n\niv. URL:\nVv Generic - {{pilot_url}}/crypto/signature/generate\nVv Preprod -\n\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\n\ngq\nv. Input with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"CcDWjNpLHYFFF8zFXBQoBlirmsXezndSj1JZRzZSZZoKB\n4=\"\n}\nvi. | Expected output with example\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP\nX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\nh. Add created signature (5.2.2, signed_unique_req_id) to callback html (5.2.1).\nEg:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 115 of 125\n\nvi. Expected output with example (enc_dec_private_key and\nenc_dec_public_key)\n\n\"publicKey\": \"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dxX2amsNb1zyq\nBiLLT+e2+mzJ2QHO=\",\n\n\"privateKey\": \"MFECAQEwWBQYDK2VuBCIEINhPuAXxXdILHJvfhngONl0alQ8\nlJ1 pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2\n+mzJ2QHO0=\"\n\n}\n\nf. Set-up for key verification via HTML\ni. Place the created HTML at subscriber_Id. The new url to access the\nHTML will be in the format: https//<subscriber_Id>/<html page title>.\nRegistry shall check existence of this url in later stages. And will be\nreferred as callback_url.\nEg. https://ondc.example.com/ ondc-site-verification.html\n\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate\nwhat is termed as signed_unique_req_id or signature.\ni. Method name: sign(byte[] privateKey, byte[] message)\nii. | Description: This method generates signature using given ED25519 32\nbyte/ 256 bits Private key.\niii. | API: post/signature/generate\n\niv. URL:\nVv Generic - {{pilot_url}}/crypto/signature/generate\nVv Preprod -\n\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\n\ng\nv. Input with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f22\",\n\"clientPrivateKey\":\"CcDWjNpLHYFFF8zFXBQoBirmsXezndSj1JZRZSZZoKB\n4=\"\n}\nvi. | Expected output with example\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+10LUInOkk43g/SpzVAP\nX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\nh. Add created signature (5.2.2, signed_unique_req_id) to callback html (5.2.1).\nEg:\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 115 of 125\n\nOpen Net\n\n<!--Contents of ondc-site-verification.html. -->\n<!--Please replace SIGNED UNIQUE REO ID with actual value-->\n<html>\n\n<head>\n\n<metaname='ondc-site-verification'\ncontent='SIGNED UNIQUE REQ ID' />\n</head>\nondc-site-verification.html\n<body>\nONDC Site Verification Page\n</body>\n</html>\n\ni. Configure /on_subscribe implementation to decrypt encrypted\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi).\nONDC registry public key will available publically.\n\ni. Click here for reference link\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[]\nprivateKey, byte[] publicKey (to be confirmed)\niii. | API name: crypto/decrypt/text\niv. URL: {{pilot_url}}/crypto/decrypt/text\nv. Input:\n\n\"value\": \"CNK5xU6tKn2VJ47AKL6cQQCOgnbpnByqvEXboCJPnbA=\",\n\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iIMHx0Zo\ndBnOP9UTHcOkeczDmeOVkKU=\",\n\n\"Subscriber_PrivateKey\": \"MFECAQEwWBQYDK2VuBCIEIAj5U1DVAX5eGI\n\nAjllcj mZWgPQIlg/T1Q6A3pZOAIWp6gSEAJGnKRTAEcSvpgDOmw9gBHv94E\n3w8sTtmPlszuXIEAFO=\"\n\n}\nvi. | Expected Output: decrypted challenge_string\n\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback\nhtml (5.2.3).\n\nSend decrypted \u2018challenge_string\u2019 as a response to /on_subscribe.\n\nj. Create /subscribe request\nPlease refer to Github (ONDC_ official) for more information.\nMethod: Following items must be kept ready\n\n- ops_no: based on which registration / amendment scenario is applicable, pass\n1,2,3,4,5 as ops_no parameter (refer 3.5)\n\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile\nNo., Country, Subscriber ID, Signing and Enc-Dec Keys (all parameters are either\nexistence proofs or generated pre-requisites)\n\n- Network Participant Details (Domain Name, Subscriber Type)\n\nURL: {{pilot_url}}/ondc/subscribe\nSample Input with example:\n\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 116 of 125\n\nOpen Net\n\n<!--Contents of ondc-site-verification.html. -->\n<!--Please replace SIGNED UNIQUE REO ID with actual value-->\n<html>\n\n<head>\n\n<metaname='ondc-site-verification'\ncontent='SIGNED UNIQUE REQ ID' />\n</head>\nondc-site-verification.html\n<body>\nONDC Site Verification Page\n</body>\n</html>\n\ni. Configure /on_subscribe implementation to decrypt encrypted\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi).\nONDC registry public key will available publically.\n\ni. Click here for reference link\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[]\nprivateKey, byte[] publicKey (to be confirmed)\niii. | API name: crypto/decrypt/text\niv. URL: {{pilot_url}}/crypto/decrypt/text\nv. Input:\n\n\"value\": \"CNK5xU6tKn2VJ47AKL6cQQCOgnbpnByqvEXboCJPnbA=\",\n\n\"ONDC_PublicKey\": \"MCowBQYDK2VuAyEASfWOME2kQQ75i5iIMHx0Zo\ndBn0OP9UTHcOkeczDmeOVkKU=\",\n\n\"Subscriber_PrivateKey\": \"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI\n\nAjllcj mZWgPQIlg/T1Q6A3pZOAIWp6gSEAJGnKRTAEcSvpgDOmw9gBHv94E\n3w8sTtmPlszuXIEAFO=\"\n\n}\nvi. | Expected Output: decrypted challenge_string\n\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback\nhtml (5.2.3).\n\nSend decrypted \u2018challenge_string\u2019 as a response to /on_subscribe.\n\nj. Create /subscribe request\nPlease refer to Github (ONDC_ official) for more information.\nMethod: Following items must be kept ready\n\nops_no: based on which registration / amendment scenario is applicable, pass\n\n1,2,3,4,5 as ops_no parameter (refer 3.5)\n\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile\nNo., Country, Subscriber ID, Signing and Enc-Dec Keys (all parameters are either\nexistence proofs or generated pre-requisites)\n\n- Network Participant Details (Domain Name, Subscriber Type)\n\nURL: {{pilot_url}}/ondc/subscribe\nSample Input with example:\n\n\"context\": {\n\"operation\": {\n\"ops_no\": 5 // change input depending on registration scenario\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 116 of 125\n\nOpen Network for Digital Commerce\n\n\"message\": {\n\"entity\": {\n\"gst\": {\n\"legal_entity_name\": \"Protean E-Gov\",\n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati\n\nBapat Marg, Lower Parel, Mumbai 013.\",\n\n\"city_code\": [\n\"std:080\"\n1\n\"gst_no\": \"27AAECF8760H1ZC\"\n},\n\"pan\": {\n\"name_as_per_pan\": \"Protean E-Gov\",\n\n\"pan_no\":\"AAECF8760H\",\n\"date_of_incorporation\": \"05/01/2022\"\n\n}\n\"callback_url\": \"/test\",\n\"name_of_authorised_signatory\": \"NSDL\",\n\"address_of_authorised Signatory\": \"Lower Parel,\",\n\n\"email_id\": \"contact@nsdl.co.in\",\n\n\"country\": \"IND\",\n\"mobile_no\": \"8734598345\",\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",\n\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\n\ncy5Zzul0inWWf5fGZBs=\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.1012Z\"\n\n}\n}\n// change type and msn input depending on registration scenario\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\n\"type\": \"buyerApp\",\n\n\"msn\":false,\n\n\"city_code\": [\n\"std:080\"\n\niF\n\n// change input depending on registration scenario; the second network participant block only\nused in registration scenarios 4 and 5.\n\"network_participant\u201d: [\n\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 117 of 125\n\nOpen Network for Digital Commerce\n\n}\n}\n\"message\": {\n\"entity\": {\n\"gst\": {\n\"legal_entity_name\": \"Protean E-Gov\",\n\"business_address\": \"1st Floor, Times Tower, Kamala Mills Compound, Senapati\nBapat Marg, Lower Parel, Mumbai 013.\",\n\"city_code\": [\n\"std:080\"\n]\n\n\"gst_no'' \"27AAECF8760H1ZC\"\n}\n\"pan\": {\n\"name_as_per_pan\": \"Protean E-Gov\",\n\"pan_no\":\"AAECF8760H\",\n\n\"date_of_incorporation\": \"05/01/2022\"\n\n\"callback_url\": \"/test\",\n\n\"name_of_authorised_signatory\": \"NSDL\",\n\n\"address_of_authorised Signatory\": \"Lower Parel,\",\n\n\"email_id\": \"contact@nsdl.co.in\",\n\n\"country\": \"IND\",\n\n\"mobile_no\": \"8734598345\",\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"unique_key_id\": \"061e6399-8ce3-4048-8256-a73e4207be67\",\n\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\n\ncy5Zzul0inWWf5fGZBs=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\n},\n\n// change type and msn input depending on registration scenario\n\"network_participant\u201d: [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\":false,\n\"city_code\": [\n\"std:080\"\n1\n\n// change input depending on registration scenario; the second network participant block only\nused in registration scenarios 4 and 5.\n\"network_participant\u201d: [\n{\n\"subscriber_url\": \"/\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 117 of 125\n\nOpen Network for Digital Commerce\n\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n\n]\n\nseller_on_record\": [\n\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiT obEI66k=\n\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\nAmYqU6Aak/XiOFKDFAnUt0gRhM=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\ncity_code\": [\n\"std:080\"\n]\n\n}\n\n1,\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\n\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for\nlist of possible errors and their resolutions in the document attached.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 118 of 125\n\nOpen Network for Digital Commerce\n\n\"msn\": true,\n\"city_code\": [\n\"std:080\"\n\n]\n\nseller_on_record\": [\n\n\"unique_key_id\": \"343ff54ererf7334-1a13-4095-afe0-abb745654\",\n\"key_pair\": {\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiT obEI66k=\n\n\"encryption_public_key\": \"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\nA4mY qU6Aak/XiOFKDFAnUt0gRhM=\",\n\n\"valid_from\": \"2022-07-03T06:27:54.101Z\",\n\n\"valid_until\": \"2023-07-03T06:27:54.101Z\"\n\n}\n\ncity_code\": [\n\"std:080\"\n]\n\n}\n\n1,\n\"timestamp\": \"2022-12-08T12:35:54.101Z\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\"\n}\n}\n\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for\nlist of possible errors and their resolutions in the document attached.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 118 of 125\n\nOpen Network for Digital Commerce\n\nK. User Flow to create On_subscribe request (Aud: Network Participant)\n\nNetwork .\n\n\u2018subscribe (1)\n\ndomain validation\n\nSSL (OCSP) validation\nsigned keys verification\n\nencrypted challenge_string\n\nfon_subscribe (2)\n(with encrypted challenge_string)\n\nreturn decrypted challenge_string\ncompare existing challenge_string\nwith decrypted challenge_string\n\nequal / not equal\nack / nack\n\n8.1 Receive /subscribe request\n8.2 Verify OCSP and domain\n8.2.1 API: {{pilot_url}}/crypto/ocsp/verify\n8.2.2 Description: Deduplication check?\n8.2.3.Input: <subscriber_id>; Eg - ondc.example.com\n8.2.4. Expected output: Valid / Not Valid\n\n8.3 Verify signed keys / signature\n8.3.1 API: {{pilot_url}}/crypto/signature/verify\n8.3.2 Input data with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\n\"clientPublicKey\": \"KOel1kYfJI222a8Zja9jOsU68ZU+zqT6/AiTobEI66k=\",\n\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\n8.3.3 Output: Valid / Not Valid (Error code, error message (eg - Signature is not valid header\nformat.))\n\n8.4 Create on_subscribe request\n8.4.1 Click here to access reference link.\n\n8.4.2 Generate challenge_string.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 119 of 125\n\nOpen Network for Digital Commerce\n\nK. User Flow to create On_subscribe request (Aud: Network Participant)\n\nNetwork 7\n\n\u2018subscribe (1)\n\ndomain validation\n\nSSL (OCSP) validation\nsigned keys verification\n\nencrypted challenge_string\n\nfon_subscribe (2)\n(with encrypted challenge_string)\n\nreturn decrypted challenge_string\ncompare existing challenge_string\nwith decrypted challenge_string\n\nequal / not equal\nack / nack\n\n8.1 Receive /subscribe request\n8.2 Verify OCSP and domain\n8.2.1 API: {{pilot_url}}/crypto/ocsp/verify\n8.2.2 Description: Deduplication check?\n8.2.3.Input: <subscriber_id>; Eg - ondc.example.com\n8.2.4. Expected output: Valid / Not Valid\n\n8.3 Verify signed keys / signature\n8.3.1 API: {{pilot_url}}/crypto/signature/verify\n8.3.2 Input data with example:\n\n\"requestData\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\n\"clientPublicKey\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"sign\": \"52082d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\nAPX9z8ay/VENpjqHLOtPpQHPNrubpZutNCA==\"\n\n8.3.3 Output: Valid / Not Valid (Error code, error message (eg - Signature is not valid header\nformat.))\n\n8.4 Create on_subscribe request\n8.4.1 Click here to access reference link.\n\n8.4.2 Generate challenge_string.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 119 of 125\n\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key\nreceived from /subscribe to generate encrypted_challenge_string.\ni. API: {{pilot_url}}/crypto/encrypt/text\nii. Input with example:\n\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFIS5oUrH/33bA/KulLErqGstIgSEA+XpYc09S8X8mkgNTIf6nIPRbL46T CwEX!\n\nAlkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkirkyxT qyssjt\u00a5J3KRN\n\nD5FnzKSMDrwiK3kC8=\"\n}\n\niii. Expected output: encrypted_challenge_string\n\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.\n\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg.\nhttps://ondc.example.com/ ondc-site-verification.html/on_subscribe\nV. Input:\n\n\"subscriber_id\": \"abc.com\",\n\"challenge\": \"encrypted_challenge_string\"\n\n}\nvi. Expected output:\nReceive decrypted_challenge_string from the subscriber.\n\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If\nboth are equal return ACK, else return NACK with error message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 120 of 125\n\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key\nreceived from /subscribe to generate encrypted_challenge_string.\ni. API: {{pilot_url}}/crypto/encrypt/text\nii. Input with example:\n\n\"value\": \"67d8b568-5b0d-4a34-aac3-8f761c22f541\",\n\"clientPrivateKey\": \"MFECAQEwWBQYDK2VuBCIEIBCERTCvWIEYuontGk5\nFFIS50UrH/33bA/KulLErqGstIgSEA+XpYc09S8X8mkgNTIf6nIPRbL46T CwEXI\n\nAlkjP5tRh4=\",\n\"proteanPublicKey\": \"MCowBQYDK2VuAyEALtPj74XkirkyxT qyssjtY J3KRN\n\nD5FnzKSMDrwiK3kC8=\"\n}\n\niii. Expected output: encrypted_challenge_string\n\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.\n\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg.\nhttps://ondc.example.com/ ondc-site-verification.html/on_subscribe\nVv. Input:\n\n\"subscriber_id\": \"abc.com\",\n\"challenge\": \"encrypted_challenge_string\"\n\nvi. Expected output:\nReceive decrypted_challenge_string from the subscriber.\n\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If\nboth are equal return ACK, else return NACK with error message.\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 120 of 125\n\nL. Lookup and Viookup APIs\n\nThese APIs are used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases in which there APIs are used\n\ne By gateways and/or adapters for search details about network participants\n\ne By network participants to querying existing details\n\n/vlookup is the more advanced and secure version of /lookup.\n/lookup is still in use for backward compatibility with older network participants.\n1. LOOKUP\ne Input parameters: only search parameters are sent as inputs. Minimum 2 search\nparameters are mandatory\no Input parameters:\n\n= country\n\u00ab= domain\n\u00abtype\n\u00abcity\n\u00ab  subscriber_id\no Example:\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\"\n\no Output Response for the API is a list of network participants satisfying the\n\nsearch parameters passed via input.\ne Output Parameters:\n\no Output Response of /lookup will show all details sequentially as a renormalized\nflat list. For example, if the response contains 2 network participants, one is a\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response\nis 4 blocks of details, 2 of network participants and 2 of sellers on record.\n\no Example:\n\n[\n{\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber1\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"buyerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 121 of 125\n\nL. Lookup and Viookup APIs\n\nThese APIs are used by the network participants to get details about other network participants\nin the network.\nCurrently there are 2 main use cases in which there APIs are used\n\ne By gateways and/or adapters for search details about network participants\n\ne By network participants to querying existing details\n\n/vlookup is the more advanced and secure version of /lookup.\n/lookup is still in use for backward compatibility with older network participants.\n1. LOOKUP\ne Input parameters: only search parameters are sent as inputs. Minimum 2 search\nparameters are mandatory\no Input parameters:\n\n= country\n\u00ab= domain\n\u00abtype\n\u00abcity\n\u00ab  subscriber_id\no Example:\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\"\n\no Output Response for the API is a list of network participants satisfying the\n\nsearch parameters passed via input.\ne Output Parameters:\n\no Output Response of /lookup will show all details sequentially as a renormalized\nflat list. For example, if the response contains 2 network participants, one is a\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response\nis 4 blocks of details, 2 of network participants and 2 of sellers on record.\n\no Example:\n\n[\n{\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber1\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"buyerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 121 of 125\n\nONG C\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 122 of 125\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/\nac7kk=\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\n\"br_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\n\"city\": \"std:080\"\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\"status\": \"SUBSCRIBED\",\n\n\"ukld\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"subscriber_url\": \"/subscriber2\",\n\n\"country\": \"IND\",\n\n\"domain\": \"nic2004:52110\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"type\": \"sellerApp\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 122 of 125\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"city\": \"std:080\"\n}\n]\n\n2. WVLOOKUP [To be deprecated]\ne Input parameters:\no Along with search parameters as inputs, few input parameters are also sent as\ninputs.\no Signature is sent as one of the input parameters makes it highly secured as\ncompared to /lookup.\no Minimum 2 search parameters are mandatory.\no API Input Parameters:\n\"  sender_subscriber_id\n\"  request_id\n\u00abtimestamp\n*  search_parameters ( min 2 parameters):\n\ne country\ne domain\ne type\n\ne city\n\ne  subscriber_id\n\u00absignature key\n\"Example:\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option5\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+tEwOa77fJcqSxuj4+JGr1 150MtlVKdyG8febGjivv\nOpZZUAXOtLAgapmDIX+xQhIi3RS2qpCX3s6mS3u0Cw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n\ne Output Parameters:\n\no Output Response for the API is a list of network participants satisfying the search\nparameters passed via input.\n\no Output Response of /lookup will show all details in a hierarchical manner. For\nexample, if the response contains 2 network participants, one is a buyer and other\nis a MSN seller with 2 sellers on record, then /vlookup response will show the\ndetails of two sellers on record as a subset of the MSN seller.\n\no Example:\n\n[\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 123 of 125\n\nONC C\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\nLHOU=1\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"br_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"city\": \"std:080\"\n}\n]\n\n2. WVLOOKUP [To be deprecated]\ne Input parameters:\no Along with search parameters as inputs, few input parameters are also sent as\ninputs.\no Signature is sent as one of the input parameters makes it highly secured as\ncompared to /lookup.\no Minimum 2 search parameters are mandatory.\no API Input Parameters:\n\"  sender_subscriber_id\n\"  request_id\n\u00abtimestamp\n*  search_parameters ( min 2 parameters):\n\ne country\ne domain\ne type\n\ne city\n\ne  subscriber_id\n\u00absignature key\n\"Example:\n{\n\"sender_subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/optionS\",\n\"request_id\": \"27baa06d-f90a-486c-85e5-cc621b787f04\",\n\"timestamp\": \"2022-12-20T14:53:07.060Z\",\n\"signature\": \"RZvA+EwOa77fJcqSxuj4+JGr1150MtlVKdyG8febGjivv\nOpZZUAXOtLAgapmDIX+xQhI3RS2qpCX3s6mS3u0Cw==\",\n\"search_parameters\": {\n\"country\": \"IND\",\n\"domain\": \"nic2004:52110\"\n}\n\ne Output Parameters:\n\no Output Response for the API is a list of network participants satisfying the search\nparameters passed via input.\n\no Output Response of /lookup will show all details in a hierarchical manner. For\nexample, if the response contains 2 network participants, one is a buyer and other\nis a MSN seller with 2 sellers on record, then /vlookup response will show the\ndetails of two sellers on record as a subset of the MSN seller.\n\no Example:\n\n[\n\n\"subscriber_id\": \"pilot-gateway-1.beckn.nsdl.co.in/option10\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 123 of 125\n\n\"city\": [\n\"std:080\"\n\n1\n\n\"country\": \"IND\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/ac7\n\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": []\n\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": [\n\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\u00e9LH\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.1012\"\n},\n\"city_code\": [\n\"std:080\"\n]\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\"key_pair\": {\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 124 of 125\n\n\"city\": [\n\"std:080\"\n\n1\n\n\"country\": \"IND\",\n\n\"valid_from\": \"2022-07-14T06:48:54.101Z\",\n\n\"valid_until\": \"2023-07-20T11:57:54.101Z\",\n\n\"signing_public_key\": \"KOel1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEI66k=\",\n\n\"encr_public_key\":\n\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmY Oj9ZyVDEyC3BwzDinp/ac7\n\nkk=\",\n\"created\": \"2022-07-14T06:48:54.101Z\",\n\"updated\": \"2023-01-25T11:39:53.8682Z\",\n\"unique_key_id\": \"2233bd55-6a80-4219-823e-b9e157976d4g\",\n\"network_participant\u201d: [\n\n{\n\n\"subscriber_url\": \"/subscriber1\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"buyerApp\",\n\"msn\": false,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": []\n\n\"subscriber_url\": \"/subscriber2\",\n\"domain\": \"nic2004:52110\",\n\"type\": \"sellerApp\",\n\"msn\": true,\n\"city_code\": [\n\n\"std:080\"\n]\n\n\"seller_on_record\": [\n\n{\n\"unique_key_id\": \"99b25419-2587-42bf-9559-ca0ac91e3808\",\n\"key_pair\": {\n\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68zZU+zqT6/AiTobEI66k=\",\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWnt+QG3uxmEqSEDYr6\u00e9LH\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.1012\"\n},\n\"city_code\": [\n\"std:080\"\n]\n},\n\n\"unique_key_id\": \"67b25419-5555-42bf-9559-ca0ac91e7878\",\n\n\"key_pair\": {\n\"signing_public_key\":\n\"KOel1kYfJI222a8Zja9jOsU68ZU+zqT6/AiTobEI66k=\",\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 124 of 125\n\nONG C\n\nOpen Network for Digital Commerce\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr\u00e96LH\n\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.1012\",\n\"valid_until\": \"2023-07-20T 11:57:54.101Z\"\n\n},\n\n\"city_code\": [\n\"std:080\"\n\n]\n\n}\n]\n}\n]\n}\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 125 of 125\n\nOpen Network for Digital Commerce\n\n\"encryption_public_key\":\n\"MCowBQYDK2VuAyEApnurlktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr\u00e96LH\n\nOU=1\",\n\n\"valid_from\": \"2022-07-14T06:49:54.101Z\",\n\"valid_until\": \"2023-07-20T11:57:54.101Z\"\n\n}\n\n\"city_code\": [\n\"std:080\"\n\n]\n\n}\n]\n}\n]\n}\n\nRequest for Proposals for upgrade and maintenance of ONDC Registry | Page 125 of 125", "compliance_retries": 0, "optimize_attempts": 1, "llm_usage_count": 0}