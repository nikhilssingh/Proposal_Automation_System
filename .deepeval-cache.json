{"test_cases_lookup_map": {"{\"actual_output\": \"# Business Proposal for Managed Services Provider (MSP) for ONDC Registry Upgrade and Maintenance\\n\\n**Submitted to:**  \\nOpen Network for Digital Commerce (ONDC)  \\n**Submitted by:**  \\n[Your Company Name]  \\n[Your Company Address]  \\n[Your Company Email]  \\n[Your Company Phone Number]  \\n**Date:** [Insert Date]\\n\\n---\\n\\n## 1. Cover Letter\\n\\nDear [Client's Name],\\n\\nWe are thrilled to present our proposal in response to your Request for Proposal (RFP) for a Managed Services Provider (MSP) to enhance and maintain the ONDC Registry. At [Your Company Name], we recognize the transformative potential of the Open Network for Digital Commerce and are eager to partner with you in fortifying its digital infrastructure.\\n\\nWith a wealth of experience in managing intricate IT systems and a proven history of delivering innovative, scalable solutions, we are poised to not only meet but exceed your expectations. Our commitment to collaboration, innovation, and excellence ensures that the ONDC Registry will remain a secure and efficient platform for all participants.\\n\\nWe look forward to the opportunity to discuss our proposal in detail and explore how we can contribute to the success of ONDC.\\n\\nWarm regards,  \\n[Your Name]  \\n[Your Title]  \\n[Your Company Name]\\n\\n---\\n\\n## 2. Understanding of Client Needs\\n\\nThe Open Network for Digital Commerce (ONDC) is set to revolutionize e-commerce in India by enabling seamless transactions across diverse platforms through open protocols. The ONDC Registry is pivotal to this initiative, acting as a secure repository for network participants and facilitating efficient transactions.\\n\\nKey needs identified from the RFP include:\\n\\n- **Scalability:** Support for an increase in network participants from 300 to 10,000 over the next five years.\\n- **Performance:** Efficient handling of peak transaction loads, currently at 1500 TPS.\\n- **Security:** Implementation of robust security measures to protect sensitive data and ensure regulatory compliance.\\n- **User Experience:** A user-friendly interface for network participants to manage registrations and transactions seamlessly.\\n\\n---\\n\\n## 3. Proposed Solution\\n\\n### Overview\\n\\nOur solution focuses on upgrading the ONDC Registry to a multi-tiered architecture that enhances scalability, performance, and security. Key components of our solution include:\\n\\n- **API-First Design:** A robust API layer for seamless integration and service expansion.\\n- **Enhanced Data Management:** Utilizing a denormalized, key-value pair database for optimized data retrieval and storage.\\n- **Security Framework:** State-of-the-art encryption standards (ECDH X25519) and multi-layered security protocols to safeguard data.\\n- **Monitoring and Reporting:** A comprehensive monitoring dashboard for real-time insights into system performance and user activity.\\n\\n### Key Features\\n\\n1. **Scalable Architecture:** Designed to accommodate growth in network participants and transaction volumes.\\n2. **Automated Monitoring:** Real-time performance tracking and alerts for anomalies.\\n3. **User-Centric Dashboard:** An intuitive interface for network participants to manage profiles and transactions.\\n4. **Robust Security Measures:** Advanced encryption and authentication protocols to ensure data integrity.\\n\\n---\\n\\n## 4. Project Plan & Implementation Timeline\\n\\n### Project Phases\\n\\n1. **Initiation (Weeks 1-2):** Kick-off meeting, requirement gathering, and project planning.\\n2. **Design (Weeks 3-6):** Develop detailed design documents and architecture diagrams.\\n3. **Development (Weeks 7-12):** Build and test the upgraded registry components.\\n4. **Deployment (Weeks 13-16):** Migrate existing data, conduct user acceptance testing (UAT), and go live.\\n5. **Post-Deployment Support (Ongoing):** Provide maintenance, support, and regular updates.\\n\\n### Timeline\\n\\n| Milestone                      | Timeline         |\\n|-------------------------------|------------------|\\n| Project Kick-off              | Week 1           |\\n| Design Completion              | Week 6           |\\n| Development Completion         | Week 12          |\\n| Go-Live                        | Week 16          |\\n| Ongoing Support                | Ongoing          |\\n\\n---\\n\\n## 5. Pricing & Payment Terms\\n\\n### Pricing Structure\\n\\n- **Total Project Cost:** [Insert Total Cost]\\n- **Payment Terms:**\\n  - 30% upon project initiation\\n  - 40% upon completion of development\\n  - 30% upon successful go-live\\n\\n### Additional Costs\\n\\n- Out-of-pocket expenses (travel, etc.) will be pre-approved by ONDC and billed separately.\\n\\n---\\n\\n## 6. Technical Approach\\n\\nOur technical approach emphasizes the use of open-source technologies to avoid vendor lock-in and ensure flexibility. We will leverage cloud infrastructure for hosting, ensuring high availability and disaster recovery capabilities. Our team will utilize Agile methodologies to ensure iterative development and continuous feedback.\\n\\n---\\n\\n## 7. Company Experience\\n\\n[Your Company Name] boasts over [X years] of experience in delivering IT solutions across various sectors, including government, healthcare, and finance. Our team comprises experts in cloud computing, cybersecurity, and software development, ensuring that we provide high-quality solutions tailored to your needs.\\n\\n---\\n\\n## 8. Case Studies & Testimonials\\n\\n### Case Study 1: [Project Name]\\n- **Client:** [Client Name]\\n- **Challenge:** [Brief description of the challenge]\\n- **Solution:** [Brief description of the solution provided]\\n- **Outcome:** [Results achieved]\\n\\n### Testimonials\\n- \\\"Working with [Your Company Name] has transformed our digital infrastructure.\\\" - [Client Name, Title]\\n\\n---\\n\\n## 9. Conclusion & Call to Action\\n\\nWe are confident that our proposed solution aligns seamlessly with ONDC's vision for a scalable and secure digital commerce platform. We are excited about the prospect of partnering with ONDC and contributing to the success of this transformative initiative.\\n\\nWe invite you to reach out for further discussions or clarifications regarding our proposal. Thank you for considering [Your Company Name] as your Managed Services Provider.\\n\\n---\\n\\n**Contact Information:**  \\n[Your Name]  \\n[Your Title]  \\n[Your Company Name]  \\n[Your Company Address]  \\n[Your Company Email]  \\n[Your Company Phone Number]  \\n\\n---\\n\\n*This proposal is confidential and intended solely for the use of the individual or entity to whom it is addressed.*\", \"context\": null, \"expected_output\": null, \"hyperparameters\": null, \"input\": \"Ref: ONDC/Tech/Registry/12- 2024/P -101 \\n \\n  \\n \\n \\nRequest for Proposal (RFP) for Selection of \\nManaged Services Provider (MSP) for upgrade \\nand maintenance of ONDC Registry  \\n \\n \\n10th Feb 2025  \\n  \\n \\n   \\n \\n  \\n \\n \\n \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 33 of 125 \\nAPPENDIX 2  \\n1. Considerations:  \\nService Fee\\u2026\\u2026\\u2026\\u2026\\u2026\\u2026\\u2026..  \\na) The Service Fee will be exclusive of GST as applicable in India. The GST shall be \\nmarked up in the invoice for Service Fee on actual basis and shall be borne and paid by Client to the Service Provider. The responsibility to pay such taxes to the applicable authorities will be that of the Service Provider. The Service Provider \\nshall ensure timely deposit of GST amount as well as filing of GST returns with the applicable authorities such that the Client is able to avail input credit on such GST amount. The Service Provider shall raise invoice on a m onthly basis /as per \\npayment milestones  which shall include monthly progress report.   \\nc) The Service Fee payable hereunder shall be paid subject to deduction of income tax at source / withholding taxes, levies or other deductions at the applicable rates. If payment to a Service Provider is subject to Tax Deduction at Source (TDS), the Clien t agrees to comply with the relevant rules and regulations under the Income \\nTax Act and to provide the TDS certificates to the Service Provider within the \\nprescribed timelines.  \\nd)  \\nFor out of pocket expenses , the Service Provider shall seek prior approval of all \\nsuch expenses from the designated authorised representative of the Client \\nduring incurring any such expense.  \\ne)  If work for Client requires that personnel perform Services outside the city, state, \\nprovince, or country in which such personnel are based, Client will reimburse the \\nService Provider for increased tax and administrative costs incurred by the Service \\nprovi der and/or its personnel. Client will be responsible for the payment of taxes in \\nconnection with this Agreement incurred on transactions between and among the \\nService Provider, its Affiliates, and third -party subcontractors to the extent \\napplicable to the performance of Services under this Agreement.  \\n  \\nf)     Payment terms and conditions : \\nSubmission and Payment of Invoices.  The Service Provider shall submit an invoice \\nfor performance of the Services and Deliverables as per this APPENDIX 2.  Invoices \\nshall be submitted to the designated contact of the Client. Invoices must include a SLA \\nreports,  description of tasks performed, deliverables delivered and hours spent \\nperforming such tasks broken down by dates, as applicable.  \\nSubject to (i) satisfactory performance of the Services and/ or Deliverables and/ or (ii) \\nthe terms of this Agreement, invoices will be paid within thirty (30) days after receipt of such invoices.  \\nAny eligible pre- approved out of pocket expenses (including travel expenses) incurred \\nby the Service Provider for the performance of the Services and/ or Deliverables will \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 34 of 125 \\nbe reimbursable within thirty (30) days after receipt of debit note.  Such debit note for \\nout of pocket expenses shall be supported by receipts, tickets (or other evidence verifying such expense to the reasonable satisfaction of Client) and in the case of a \\ndispute concerning any expense the decision of Client shall be final and binding.\\n  \\n \\n    \\n \\n    \\n \\n     \\n \\n    \\n \\n   \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 35 of 125 \\nSection 3 - Change Management Process  \\nDue to the evolving nature of the project requirements and the complexity of the project, ONDC \\nand Registry MSP recognize that changes may be required during the project. ONDC also \\nrecognizes that these changes may require modification to the manpower requirements and/or tools and may thus have a financial impact. The MSP will endeavour, wherever reasonably practicable, to effect change without an increase in the contract value, and ONDC or its nominated agencies will work with the MSP to ensure that all changes are discussed and \\nmanaged in a constructive manner. This Change Control Schedule sets out the provisions \\nwhich will apply to changes to the agreement.  \\n \\n1. Conditions for Change Order  \\nThe change order will be initiated only in case, if ONDC directs in writing to the MSP or MSP \\nrequests to carry out the following changes in relation to the services rendered by MSP:  \\n1.1. Request for changes to the infrastructure  \\n1.2. Request for change in manpower requirements because of change in scope of work as set out in Section 4 - Terms of reference or due to changes in the \\nservice level agreements.   \\n1.3. Request for enhancement of features of a particular component of registry \\narchitecture.  \\n1.4. Request for rendering services of third party software/hardware tools to enhance Registry functionality, such as a CRM tool for managing participants' grievances.  \\n \\n2. Change Management Process  \\n2.1. Post award of the contract, MSP and ONDC shall devise a mechanism to perform the effort estimation for application related changes, as mentioned in \\nsection 1 above. MSP and ONDC may use the Function Point analysis (FPA) \\nor T-Shirt sizing or any other indus try defined model for effort estimation. MSP \\nshall develop the estimation model in consultation with ONDC. Post approval from ONDC, for every type of change request, this model shall be used for \\nestimation purposes by MSP and ONDC shall review/approve the effort basis \\nof this model.  \\n2.2. Change Request in respect of the Agreement will emanate from the ONDC or \\nMSP. MSP\\u2019s Program Manager will be responsible for obtaining approval for \\nthe change and will initiate the Change Request by completing Change Control \\nNote (CCN) (refer Change Control  Note Form). CCNs will be submitted to the \\nClient, who will acknowledge receipt of the CCN.  \\n2.3. The MSP and ONDC or its nominated agencies, during the term of the \\nAgreement and while preparing the CCN, shall determine whether the change \\nis beyond the scope of services as detailed in Section 4- Terms of reference.  \\n2.4. The total value of all change orders to be issued under this contract shall not \\nexceed 50% of the total contract value. It is hereby also clarified that any \\nchange control suggested beyond 50 % (fifty percent) of the total contract value \\nwill be beyond the  scope of the change control process. It is hereby clarified \\nthat the 50% (fifty percent) of the total contract value as stated in herein above is calculated on the basis of bid value (exclusive of taxes) submitted by the \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 36 of 125 \\nMSP and accepted by the ONDC or its nominated agencies or as decided and \\napproved by ONDC or its Nominated Agencies.  \\n \\n3. Quotation \\n3.1. The MSP shall assess the CCN. In completing the CCN the MSP shall provide as a minimum:  \\n3.1.1.  a description of the change;  \\n3.1.2.  a list of deliverables required for implementing the change;  \\n3.1.3.  a time table for implementation;  \\n3.1.4.  an estimate of effort (using the estimation model, approved by ONDC) for the proposed change;  \\n3.1.5.  any relevant acceptance criteria;  \\n3.1.6.  an assessment of the value of the proposed change;  \\n3.1.7.  Profiles of Resources to be added to the team to effect the change.  \\n3.2. Prior to submission of the completed CCN to ONDC, the MSP will undertake its own internal review of the proposal and obtain all necessary internal \\napprovals. As a part of this internal review process, the MSP shall consider the \\nmateriality of the proposed change in the context of the agreement and the total \\neffect that may arise from implementation of the change.  \\n4. Cost  \\n4.1. Cost for preparing CCN: MSP shall be responsible for its own costs incurred in \\nthe quotation, preparation of CCNs and in the completion of its obligations described in the change management process, provided the MSP meets the \\nobligations as set out in the CCN. In the event the MSP is unable to meet the \\nobligations as defined in the CCN then the cost of getting it done by a third \\nparty by ONDC shall be borne by the MSP.  \\n4.2. Cost for Change Order:  \\n4.2.1.  For the purpose of estimating the value with respect to staff costs and \\ntools associated with change order approved by ONDC, the rates (exclusive of taxes) submitted by the MSP in their commercial bid shall \\nbe used. Taxes will be applicable as per the prev ailing laws and rates \\nspecified therein.  \\n4.2.2.  If a new skill set is required, the cost of such resource(s) should not be \\nmore than an equivalent resource in terms of number of years of \\nexperience for the resource for another skill set deployed during that \\nparticular time period.  \\n4.2.3.  If a new infrastructure component or tool is required to implement the change, the cost of such a tool or infrastructure component should not \\nbe more than the prevailing market rate or the unit cost submitted by \\nthe Bidder in their commercial proposal, whichever is lower.  \\n \\n5. Change order and SLAs  \\n5.1. For activities carried out against change orders, the applicability of existing SLAs shall be evaluated by the ONDC and if found applicable, the same shall \\ncontinue to be in force.  \\n5.2. For activities to be performed in a time bound manner against change orders, \\nONDC may define additional milestone SLAs which will have an appropriate \\nSLA Level as defined in the Service Level Agreement. Such milestone SLAs \\nshall be agreed upon  between OND C and MSP prior to submission of \\nquotation by the MSP.  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 37 of 125 \\n5.3. In the event that any of the change orders requires definition of new SLAs, \\nClient may add additional SLAs to cover the additional scope of activities as \\ndefined in the change orders. Such milestone SLAs shall be agreed upon  \\nbetween ONDC and MSP prior to submission of quotation by the MSP.  \\n5.4. Any changes to SLAs, it shall be mutually agreed between ONDC and the MSP and communicated by the ONDC in writing as part of the change order issued to the MSP.  \\n6. Obligations  \\n6.1. It shall be binding on MSP to implement any proposed changes as per the \\nterms and conditions of the change order, once approval in accordance with \\nabove provisions has been given.  \\n6.2. The acceptance criteria for any such \\u2018Change\\u2019 will remain the same as described in the Agreement with respect to the performance and quality \\nparameters.  \\n6.3. The MSP\\u2019s obligations with respect to such change order shall remain in \\naccordance with the Agreement.  \\n6.4. Agreed manpower requirements for additional scope of work through a change order process will not be revised during the implementation of the change \\nrequest.  \\n \\nChange control note Form  \\n \\nPART A: INITIATION  \\nChange Request Number:    \\nDate:    \\nTitle:    \\nInitiator:    \\nBrief Description of Proposed \\nChange:    \\nName & Designation:  \\n(On behalf of Initiator)    \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 38 of 125 \\nChange Submitted to    \\n  \\nPart B: EVALUATION  \\nChange Request Number:    \\nDate:    \\nDetailed Description of Change:    \\nImpact:  \\n\\u00b7       Cost   \\n\\u00b7       Risk   \\n\\u00b7       On Overall Project    \\n \\nDeliverables Involved:   \\nDetailed Timelines:    \\nAvailable alternatives (if any):   \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 39 of 125 \\nAny Other Relevant Information:  Payment Terms:  \\n  \\n  \\nName & Designation:  \\n(On behalf of Initiator)    \\nSignature:  \\n  \\n  \\nAuthority to Proceed (YES/NO):    \\nApproved  \\nComments:  Rejected  \\nComments:  \\nFor ONDC For MSP  \\nSignature:  Signature:  \\n  \\nName:    \\nDesignation:    \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 40 of 125 \\nDate:    \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 41 of 125 \\nSection 4 - Terms of Reference  \\n1. Introduction  \\nOpen Network for Digital Commerce (ONDC) is Govt. of India\\u2019s initiative which enables e-\\ncommerce networks based on open protocols which will enable commerce across different \\ndomains. Unlike a platform, sellers and buyers will be connected through separate applications \\nin the network and they will communicate using open protocols. For enabling this broadly there \\nare two infrastructure components that are essential to the network namely Gateway and \\nRegistry. Incumbent agency ( M/s Protean)  has been supporting both of these integral \\ncomponents as per the requirements of ONDC.  \\n The Gateway enables discovery in the network. When a buyer (seeker) application wants to search the network for goods/services it sends the search intent to the Gateway which broadcasts it to all the eligible sellers  through seller applications (provider applications) who \\nmay service this request. The seller applications in turn send their catalogues back to the buyer applications asynchronously against the same intent as broadcast by the Gateway. The response to search intent is directly cascaded by seller apps to buyer apps, on end points defined by buyer apps as part of the intent.  \\n The Registry is a repository for storing the details of the network participants including seller app, buyer app and gateways. It is the meta data repository for all entities in the network, that includes end point URLs, Public Keys etc.. All the network participants use the Registry to get details of other entities in the network. Registry has four main features:  \\n1. Onboard (subscribe) or deboard (unsubscribe) a new entity or update the credentials of the existing NP on to the network  \\n2. Provide meta data details of onboarded entities to other authenticated network participants.  \\n3. Respond to gateway resolving the discovery intent from buyer apps.  \\n4. Host and provide authentication information for respective network participants to the requester.  \\n  \\nIt is responsible for registering the network participants on the ONDC network . This involves \\nverifying the identity and credentials of the participant, and adding them to a list of approved \\nentities that are allowed to access and operate on the network. It ensures that only authorised entities are able to access the network and participate in transactions on the ONDC network. All the transactions on the registry are authenticated using a state of an art key based signing \\nalgorithm.  \\n \\nThe Registry plays a pivotal role in discovering Network Participants (\\u201cNP\\u201d) on ONDC network \\nso that they can perform ecommerce transactions digitally. The Registry hosts verified, up -to-\\ndate data of the NPs and Gateway and enables the buyer and seller apps to perform querying \\npost authentication of their signatures.  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 42 of 125 \\nThe number of network participants (NP) is expected to grow from 300 (Three hundred) to \\n10,000 (Ten thousand) over a period of 5 years. The solution should be scalable to cater to the expected growth in NPs. As of Nov, 2024, the number of monthly transacti ons being \\nenabled on the ONDC network has reached 15 Million across various domains including consumer goods, logistics, mobility, financial services, among others. The peak TPS of registry that we have observed so far, is of the tune 1500.   \\n At present, ONDC registry is hosted by M/s Protean on Google Cloud Platform virtual \\nmachines and uses PostgreSQL as the persistent storage platform. It is proposed to enhance \\nthe design of the Registry based on the design principles and functional requirem ents \\nspecified in this document and select a service provider to manage and maintain the Registry on an ongoing basis.  \\n An overview of the current design of Registry is provided in Annexure - 3 of the RFP.  \\n2. Design principles of Registry  \\n2.1. Open source and avoidance of vendor lock -in: The Registry shall be \\ndesigned and implemented using open source  components and avoid usage \\nof proprietary components that may result in vendor lock -in(s).  \\n \\n2.2. Multi -tiered architecture: The Registry shall be designed as a multi -tiered \\narchitecture with independently scalable layers as depicted in the logical \\narchitecture provided below in Figure 1.  \\n \\n2.2.1.  API layer -  The Registry will follow an API first design philosophy. It \\nprovides three APIs -  the Subscribe, Lookup and Admin APIs at present \\nwhich enable Network Participants to be added to the Registry and querying of Network Participant data. The API la yer shall expose the \\nend points to be accessed via the API Gateway(s) after due \\nauthentication of incoming requests. The existing APIs may be enhanced further and new APIs may also be added during the course \\nof this contract based on emerging business requ irements of ONDC.  \\n \\n2.2.2.  Application layer -  The application layer will perform the necessary \\nrequest processing which can be an update to Registry or a Registry \\ndata lookup.  \\n \\n2.2.3.  Data layer - The data layer will host the core Registry database and \\nobject store along with a data cache. All data access of the Registry database will include a writeback to the cache.  \\n The core Registry database can be a denormalized, key -value pair \\ndatabase. The solution may incorporate any contemporary consistent data architecture using any database technology.  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 43 of 125 \\nThis layer shall also have features to classify and manage core Registry \\nand log data based on frequency of access as well as recency of data as Hot, Warm and Cold and retaining data for up to 7 years based on \\nbusiness and regulatory requirements.  Correspondingly, different \\nstorage technologies shall be utilised in the infrastructure layer for efficient and cost effective management of Registry data.  \\n                                     \\n \\n         Figure - 1: Indicative Logical architecture of Registry  \\n  \\n2.2.4.  Authentication and Authorization - This layer will authenticate and \\nauthorise incoming requests from the NPs through the ONDC Network \\nGateway(s)  or directly as the case may be and enable secure access \\nto the Registry.   The authentication and authorization layer must cater to API authentication and user authentication as the case may be.  \\n \\n2.2.5.  Perimeter security layer -  This layer will contain perimeter security \\ndevices that will include Web Application Firewall, L3 firewalls, Advanced Threat Protection and DDoS protection.  \\n \\n2.2.6.  Monitoring and management services -  This will comprise a set of \\ncomponents to monitor the performance and availability of the entire Registry stack on a real time basis. This will also report data to the \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 44 of 125 \\nONDC Network Health Monitoring dashboard which will be accessible \\nto the public at large. Such monitoring data of Registry shall be made available through APIs or any other mechanism determined by ONDC \\nas part of the design of the Network Health Monitoring system.  \\n \\nAs part of monitoring and measurement of performance and availability metrics of the Registry at overall data center level and at application level, the MSP should create a \\u201c/health\\u201d API which may simulate \\nsynthetic transactions of the nature expected to be performed on \\nRegistry.  \\n \\n2.2.7.  Infrastructure layer - This layer will include the cloud hosting \\ninfrastructure along with the automated disaster recovery and business continuity cutovers. The system integrator may implement the solution either on bare metal or virtualized or containeriz ed infrastructure \\nkeeping in view the performance and availability requirements of the Registry.  \\n \\n2.3. Zero data loss : The Registry shall be designed to be a zero data loss.  \\n \\n2.4. Data security : Considering that the Registry will be primarily sharing data over \\nthe internet with Network Participants, the minimum encryption standard for the \\nRegistry shall be ECDH (Elliptic -curve Diffie \\u2013Hellman) using X25519 or better \\nencryption curves.  \\n \\nThe Registry communication can be either peer -to-peer or in a broadcast \\nmode. For all Registry broadcasts the minimum encryption standard shall be ECDH X25519.  \\n For peer to peer communications, given that different network participants may be following different encryption methods, the Registry must hold the details of \\nthe encryptions standards followed by each NP. In such cases, the Registry will \\nneed to support look up of the relevant encryption standard of a NP and adopt the corresponding standard for peer to peer communication with the NP. The MSP is required to propose a suitable architecture for supporting multiple \\nencryption keys in the Registry. Requirement s for implementing data vaults \\nmay be evaluated and proposed by the MSP if needed and Registry shall be \\ndesigned to support the same.  \\n \\n2.5. Data residency : The Registry shall be hosted on public cloud infrastructure. \\nRegistry data of entities registered or incorporated in India shall be stored on public cloud infrastructure within India.  \\n \\n2.6. Disaster recovery: The Registry shall be hosted in a highly available manner \\nwith 99.99% availability. It shall have an optimum usage of infrastructure as \\npart of disaster recovery design across the two data centers. It is pertinent to \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 49 of 125 \\nEvery participant will have certain contact coordinates in the form of SPOCs or support or \\nother specific contact persons details that need to be published in the registry so that it is accessible to other participants. Eg: Authorised Signatory, Grievance Redressal Officer  \\n Key Record  \\nThe Registry plays a vital role in developing a trust on the network as it remains the source of truth for any authentication mechanism as it houses in the public keys for signing and encryption for each participant hence allowing other participants to acc ess it and perform \\nrelevant security measures.  \\n Location Record  \\nGeographical transactability presence of a participant is vital for optimal broadcast of a \\ndemand on the network. To meet this requirement each participant would define their \\ngeographical presence in the registry which can be accessed by other participants  to evaluate \\ntheir presence and ability to transact in a given location. The definition of location can range from being a Country, CIty, Pincode, Geo Json supported as well.  \\n \\nURI Record  \\nThe endpoint at which the participants exposed APIs are hosted where the transacting and \\nrouting APIs are hosted. The record will be mapped to which scenario this URI is to be reached out to which usage in the mapping record.  \\n \\nMapping Record  \\nCertain configurations of the participant and association to other records found in the mapping \\nrecord will be crucial to address the filtration and policy executing information to be available for the participants.  \\n Policy Record  \\nEvery network would adhere to a policy and agreements that are linked between networks and these needs to be stored at a common source of truth which would lead to enforcement at the receiving end. These records will be the place holders of these policies but the execution \\nof them is not a responsibility of the registry or the record itself.  \\n \\nFuture Record  \\nThis is a place holder or making sure that the design enables or allows storing newer records \\nthat may emerge with the network requirements and functionalities in the future  \\n \\n6.2 Data to be captured in Registry  \\nBelow is the list of data fields for the proposed structure  \\n \\nS.No.  Data Field/Records  Description  \\n1 Participant Id  Unique Participant Id provided by the registry  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 50 of 125 \\n2 Cred  Participant credential records  \\n3 Cred.id  Credential record unique id  \\n4 Cred.type  Credential type  \\n5 Cred.key_1  Place holder field purposed based on type  \\n6 Cred.key_2  Place holder field purposed based on type  \\n7 Cred.key_3  Place holder field purposed based on type  \\n8 Contact  Participant contact records  \\n9 Contact.id  Contact record unique id  \\n10 Contact.type  Contact type  \\n11 Contact.key_1  Place holder field purposed based on type  \\n12 Contact.key_2  Place holder field purposed based on type  \\n13 Contact.key_3  Place holder field purposed based on type  \\n14 Contact.key_4  Place holder field purposed based on type  \\n15 Key Participant key records  \\n16 Key.uk_id  Unique Key Id provided by Registry  \\n17 Key.signing_pub  Signing Public Key  \\n18 Key.encryption_pub  Encryption Public Key  \\n19 Key.valid_from  Key valid from timestamp  \\n20 Key.valid_to  Key valid till timestamp  \\n21 URI Participant URI records  \\n22 URI.id  participant unique uri id  \\n23 URI.url  url of the participant  \\n24 Location  Participant location records  \\n25 Location.id  Location record unique id  \\n26 Location.city  Array of city reference identifiers  \\n27 Location.country  Array of country reference identifiers  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 51 of 125 \\n28 Location.geojson  geo json format definition of location  \\n29 Mapping  Mapping Records  \\n30 Mapping.id  Mapping record unique identifier  \\n31 Mapping.domain  Participant transactional domain  \\n32 Mapping.type  Participant transactional type  \\n33 Mapping.uri_id  URI record reference id  \\n34 Mapping.location_id  Location record reference id  \\n35 Request ID  unique request id, generated by participant for \\neach request  \\n36 callback_uri  Participant callback uri for validation & \\nverification on each request  \\n \\n6.3 APIs  \\n \\nAll APIs of registry are authenticated and can only be accessed by participants/prospective participants of the registry. The Authentication will follow the same signature pattern as proposed by the base commerce protocol i.e. beckn  \\nQuery API - /lookup  \\nQuery APIs are to query the registry for records. The query shall have various formats and \\nstructure and will result in appropriate responses. A few possible queries are listed below these are projected but not the entire list.  \\n \\n\\u25cf Query for Participant Records -  Single Record  \\nAny participant can query for a single participant record this encompasses of all the sub records of the participant to name a few : Creds, Contact, URI, Keys, Location, Mapping Records  \\n\\u25cf Query for Key Records -  Single Record  \\nAny participant can query for a particular or all key records associated with a particular \\nparticipant  \\n\\u25cf Query for URI Records -  Single Record  \\nAny participant can query for a particular or all URI records associated with a particular participant  \\n\\u25cf Query for Participant List -  Multiple Records  \\nSome designated participants can query for a complete dump or a filtered dump of participant records based on the lookup query.  \\nParticipant Registration/Management API -  /subscribe  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 52 of 125 \\nRegistration APIs are to register/subscribe a participant to the registry with their records. The \\nregistration process will adhere to adequate validation against the information shared during the process. Along the life- cycle of a participant  there will b e multiple phases or milestones \\nand management activities where they need to manage their records. These APIs in its entirety and different shapes will address the needs to support it with adequate validation and authorization needed. A few possible usages  are listed below; these are projected but not the \\nentire list.  \\n\\u25cf New Registration -  /subscribe - POST  \\nA post request created to make a new entry of a participant with all the adequate information and records that needs to be added to the registry this would be preceded by a whitelisting action from Admin.  \\n\\u25cf Update Record -  /subscribe - PUT & PATCH \\nEvery network participant would require  to modify, update and add records in the \\nregistry during the tenure in the network these APIs would help supporting such functionalities  \\nAdmin APIs -  /admin/domains, /admin/subscribe \\nPrimary te admin has 2 fundamental roles or actions to perform which are only accessible to \\nadmins:  \\n\\u25cf Enable/Disable Domains  \\n\\u25cf Whitelist & Un -subscribe participants  \\nThe two admin apis with its method of POST/PATCH & Delete shall cater to the needs of these \\nfunctions of the registry  \\nThe Authentication  and Authorization of an Admin and its associated workflows are managed by an external system to the core registry function and these APIs will be secured via MTLS and other secure tunnel communication between the identified such registr y management \\nservice/s.  \\n \\n6.3.1  Existing Registry APIs  \\n6.3.1.1  lookup API  \\n \\nlookup API is used by the network participants to get details about other network participants \\nin the network.  \\nCurrently there are 2 main use cases of lookup API and being used:  \\n\\u25cf By gateways and/or adaptors for search details about network participants  \\n\\u25cf By network participants to querying existing details  \\n \\nNote: Current API specification is provided in Annexure - 3 of the RFP.  \\n \\n6.3.1.2  vlookup API [TO BE DEPRECATED]  \\n\\\\vlookup API is used by the network participants to get details about other network participants \\nin the network. This API is currently hosted on ONDC Registry. vlookup API is the more \\nadvanced and secure version of lookup API, as it contains the signature parameter of the \\nsender as one of the input parameters.  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 53 of 125 \\nvlookup API will enable NPs to cache the keys apart from the functionality currently enabled \\nthrough lookup API.  \\n \\nNote: Current API specification is provided in Annexure - 3 of the RFP.  \\n \\n6.3.1.3  subscribe API  \\nSubscriber API is used to get registered on ONDC registry by Network Participants. Currently \\nthe registry is supporting the following types of registrations. Same needs to be enabled in the \\nupdated Registry.  \\n \\n\\u25cf Buyer App New entity Registration  \\n\\u25cf Non-MSN Seller New entity registration  \\n\\u25cf MSN Seller new entity registration  \\n\\u25cf Buyer App and Non- MSN Seller new registration \\n\\u25cf Buyer App and MSN Seller new registration  \\n\\u25cf RSP new entity registration and record updates  \\n\\u25cf SA new entity registration and record updates  \\n\\u25cf ODRSP new entity registration and record updates  \\n\\u25cf SSP new entity registration and record updates  \\n\\u25cf CA  new entity registration and record updates  \\n\\u25cf Adding new seller on records  \\n\\u25cf Updating records of buyer app, seller app and seller on records  \\n\\u25cf Validation of GSTIN  \\n\\u25cf Validation of PAN  \\n\\u25cf Validation of Bank Account number  \\n\\u25cf Deduplication of all types of participants, ukId, signing key and encryption key  \\n \\nThe subscribe API should only be carried out for the NPs that are whitelisted.  \\n Note: Current API specification is provided in Annexure - 3 of the RFP.  \\n \\n6.4 Dashboard  \\n6.3.2  The admin dashboard is to be developed for ONDC internal teams, ONDC officials  and MSP. The dashboard will have the following features:  \\n6.3.3  Admin dashboard should have the functionality of Registration and login for users  \\n6.3.4  Dashboard need to have two- factor authentication enabled for every user  \\n6.3.5  Dashboard content should support the English language.  \\n6.3.6  Dashboard should not allow concurrent sessions for the same user. The system should automatically log out a user in case of session breakdowns (e.g., communication failure, high inactivity period -  these should be \\nparameterized)  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 54 of 125 \\n6.3.7  Dashboard should have Role based access control (RBAC) enabled. This \\nfunctionality will enable ONDC admin to authorize users by assigning privileges to roles and assigning roles to users or group  \\n6.3.8  Dashboard should implement security features such as captcha, password complexity, automatic blocking (temporary/permanent) of user logins after a given number of unsuccessful attempts.  \\n6.3.9  Dashboard must be developed as per Guidelines for Indian Government Websites (GIGW) guidelines  \\n6.3.10  Portal should support HTTPS protocol on Secure Socket Layer (SSL)  \\n6.3.11  Graphical representation of the current status of their subscription, registration across all environments (Sandbox, Pre- prod & production)  \\n6.3.12  Dashboard shall be built on 3 -tier architecture with separate presentation, \\nbusiness and database layer  \\n6.3.13  Dashboard must have the capability to integrate issue management system of ONDC  \\n6.3.14  It must support configuration of customizable workflows to define the flow of issues  \\n6.3.15  Dashboard shall have the ability to send email and SMS notifications to users regarding issue status or any other information \\n6.3.16  It  should be able to support user access management, user control and creating customized pages or dashboards for different set of users  \\n6.3.17  Dashboard  should have responsive UX design supporting different screen \\nsizes \\n6.3.18  The Dashboard should have the capability to monitor Registry related \\nmetrics/parameters. The monitoring module should have the following capabilities:  \\n6.3.18.1  The below required parameters need to be displayed on the dashboard. Dashboard shall have and not limited to the following functionalities. Below API calls latency along with Response time:  \\n6.3.18.1.1  Subscriber API  \\n6.3.18.1.2  Lookup API  \\n6.3.18.2  Number of NPs (Buyer Apps, Seller Apps and LSPs, Seller on Records, Gateways, RSPs, ODRSP, SSP, and others)  \\n6.3.18.3  Throughput  \\n6.3.18.4  Availability - Uptime & Downtime of Registry  \\n6.3.18.5  Concurrent Users  \\n6.3.18.6  CPU, RAM and Storage Usage \\n6.3.18.7  Volume of API calls  \\n6.3.18.8  Seller App and Buyer App Wise number of serving categories and products  \\n6.3.19  Dashboard should have the capability to project data on Daily, Weekly and Monthly basis  \\n6.3.20  Registry monitoring dashboard should have the capability to show graphical representation of the data available \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 55 of 125 \\n6.3.21  Dashboard should have the capability to generate reports required by \\nONDC. Reports shall support at the least xlsx, PDF, csv, Doc formats. Further, if any other format is required by ONDC  \\n6.3.22  Dashboard should have the capability to send alerts and notifications to respective admins, MSP SPOCs on any change  \\n \\n6.5 Infrastructure  \\n \\nFollowing are the infrastructure requirement for the various environments:  \\n \\nS.No.  Requirement Type  Sandbox  Pre Production  Production  \\n1 Uptime  >=99%  >=99.9%  >=99.99%  \\n2 RPO  - 15 mins  0 \\n3 RTO  - 30  mins  10 mins  \\n4 Application response \\ntime(except subscribe \\nAPI) <100 milli -sec <100 milli -sec <10 milli -sec \\n5 Response Time as \\nmeasured at data \\ncenter edge(except \\nsubscribe API)  <1000 milli -sec <1000 milli -sec <200 milli -sec \\n6 Throughput  10 TPS  50 TPS  5000 TPS  \\n7 Concurrent users (live \\nnetwork participants)  100 500 1000. Scalable to \\n5,000  \\n8 High Availability  NA NA DC and DR in Active -\\nactive mode on the \\nbidder selected cloud \\nplatform  \\n \\n6.5 Migration  \\nThe MSP shall migrate the data from the existing registry for all the three environments - \\nstaging (sandbox), pre- production and production to the new registry application.  \\n   \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 70 of 125 \\nS. \\nNo. Type of \\ncomponent / \\nproduct / \\nservice  Unit of \\nmeasure  Number \\nof units  Uni\\nt \\nrate Sub-\\nTotal  Taxe\\ns Total \\nincl. \\ntaxes  \\n2 Cost of \\nsecure cloud \\ninfrastructure \\nmeeting all \\nthe technical \\nspecifications \\ncapable of \\nprocessing \\nadditional \\n1,000 \\ntransactions \\nper second \\nover and \\nabove the \\nminimum \\n1,000 TPS  Per-month  36     \\n \\nNote : Transactions per second (TPS) is defined as the number of API calls (Subscribe APIs + lookup \\nAPIs) to the registry performed in a second. TPS will be computed as the simple average of the daily peak TPS for a given month. The callbacks to the API will not  be included in the computation of  the \\nnumber of API calls.   \\nTPS for a month =  \\n\\ud835\\udef4\\ud835\\udef4 \\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43  \\ud835\\udc47\\ud835\\udc47\\ud835\\udc43\\ud835\\udc43\\ud835\\udc47\\ud835\\udc47 \\ud835\\udc53\\ud835\\udc53\\ud835\\udc53\\ud835\\udc53\\ud835\\udc53\\ud835\\udc53 \\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc43\\ud835\\udc52\\ud835\\udc52\\u210e \\ud835\\udc51\\ud835\\udc51\\ud835\\udc43\\ud835\\udc43\\ud835\\udc51\\ud835\\udc51\\u00f7 \\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc41\\ud835\\udc43\\ud835\\udc43\\ud835\\udc53\\ud835\\udc53  \\ud835\\udc53\\ud835\\udc53\\ud835\\udc53\\ud835\\udc53 \\ud835\\udc51\\ud835\\udc51\\ud835\\udc43\\ud835\\udc43\\ud835\\udc51\\ud835\\udc51\\ud835\\udc51\\ud835\\udc51 \\ud835\\udc56\\ud835\\udc56\\ud835\\udc56\\ud835\\udc56 \\ud835\\udc43\\ud835\\udc43 \\ud835\\udc41\\ud835\\udc41\\ud835\\udc53\\ud835\\udc53\\ud835\\udc56\\ud835\\udc56\\ud835\\udc5a\\ud835\\udc5a\\u210e \\n Note: Peak TPS will be computed as the 99 percentile of all the TPS in a day. In this context, this means that TPS greater than the 99th percentile reading will be discarded and not considered for the \\ncomputation purposes. This approach is being adopted to ignore few outlier values which could have \\noccurred due to longer service start up times or some exception scenarios.  \\n \\nIllustrative example for computation of secure cloud infrastructure costs for payment purposes:  \\nTPS for a month (P) = 2,306  \\nCost of 1,000 TPS (Q) = INR 1,00,000 [Value of FIN -5 #1 Cost of secure cloud infrastructure meeting \\nall the technical specifications capable of processing 1,000 TPS]  \\nCost of additional 1,000 TPS (R) = INR 50,000 [Value of FIN -5 #2 Cost of secure cloud infrastructure \\nmeeting all the technical specifications capable of processing additional 1,000 TPS]  \\n \\nAmount payable during the month for cloud infrastructure (A) = \\ud835\\udc44\\ud835\\udc44  + (\\ud835\\udc43\\ud835\\udc43/1000  \\u22121)\\u2217\\ud835\\udc45\\ud835\\udc45 = 1,00,000 + \\n1.3*50,000 = INR 1,65,000/ - \\n \\n  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 72 of 125 \\nB. Service Level Agreements  \\n1. Introduction  \\na. The Service Level Agreements (SLA) defined for the project specify the expected levels of baseline service to be provided by the MSP to ONDC. The \\nobjectives of SLA governance model are to:  \\ni. Provide clear reference to service ownership, accountability, roles and \\nresponsibilities.  \\nii. Present a clear, concise and measurable description of service provisioning at each level.  \\niii. Bridge the gap between perceptions of expected service provisioning and actual service support and delivery.  \\nb. The SLAs are intended to:  \\ni. Make explicit and strict expectations that ONDC has for performance and availability of business services.  \\nii. Help ONDC control and ensure the planned level and performance of business services.  \\niii. Trigger a process that brings ONDC and MSP\\u2019s management attention \\nto situations when any aspect drops below an agreed upon threshold, \\nor target.  \\nc. The performance of the MSP services shall be measured against the SLAs detailed below. The service level targets define the levels of service to be \\nprovided by the MSP to ONDC for the applicability period or duration of this \\ncontract, whichever is earlier,  or until the stated SLA targets are amended.  \\nd. Any degradation in the performance of the services undertaken by the MSP project team during the contract duration, will be subject to levy of liquidated damages. The liquidated damages mentioned in this RFP are a pre- estimate \\nof damages likely to flow from the breach of timelines and service levels. In case of breach of multiple SLAs:  \\ni. the cumulative liquidated damages applicable on the MSP for timeline/milestone linked SLAs shall not exceed 10% of the total amount \\npayable against the respective milestone.  \\nii. the cumulative liquidated damages applicable on the MSP for \\noperational SLAs computed on a quarterly basis shall not exceed 10% of the total amount payable for the quarter.  \\ne. MSP shall not be relieved from any obligations under this contract by virtue of \\npayment of such liquidated damages.  \\nf. MSP shall implement a SLA reporting tool to provide live status of conformance \\nto various SLAs to ONDC.  \\ng. Any change in the SLAs during the term of Project [in terms of addition, \\nalteration or deletion of certain parameters], would be initiated at the discretion \\nof ONDC, which would be subsequently discussed and agreed with the MSP before putting the amended S LAs into effect.  \\n  \\n2. Definitions of measurement and reporting intervals  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 73 of 125 \\na. Measurement interval  - For some of the SLAs, the Reporting interval has been \\nbroken down into multiple Measurement intervals. This has been done to \\nprovide the MSP an opportunity to rectify any SLA non- compliance during a \\nparticular measurement interval in the remaining measurement intervals available in the Reporting interval.  \\ni. For example, during a quarter, a SLA could be measured every month and even if there was a certain non- compliance during one of the three \\nmonths, the MSP would have an opportunity to rectify the non-\\ncompliance in the other two months.  \\nii. For each of the SLAs, all observations regarding the SLA recorded will \\nbe aggregated and the SLA will be computed for every measurement interval. The applicable percentage of liquidated damages will be the \\nsimple average of the liquidated damages computed for each \\nmeasurement interval.  \\niii. For example, for availability of solutions, all \\\"system up check\\\" data \\ngathered, all planned and unplanned downtimes during the measurement interval (i.e., a given month) will be aggregated and the \\nSLA will be computed. Accordingly, as per the LD computati on \\nguidelines defined in this document, the percentage of LD applicable \\nfor the measurement interval will be computed.  \\n \\nb. Reporting interval : Reporting interval for all SLAs is quarterly.  The \\npercentage of LD to be applied for a Reporting interval is computed as an average of the LD percentages computed for each of the Measurement intervals.  \\n \\n3. Timelines and associated liquidated damages, if any  \\nS. No.  Milestone / Deliverable  Timeline  Liquidated damages, if any, \\napplicable  \\n1 Signing of the contract  T Not applicable  \\n2 Submission of detailed \\ndesign document  T+6 weeks  1% of cost head (A) as \\nmentioned in commercial bid \\ncontract for every week of delay  \\n3 Submission of the UAT \\nplan with detailed test \\ncases and test data  T+12 weeks  1% of cost head (A) as \\nmentioned in commercial bid \\ncontract for every week of delay  \\n4 Security testing (VAPT \\nand App scan by a CERT-\\nIn empanelled agency), \\nPerformance testing and \\nbenchmarking of system \\nprior to go- live and \\nnecessary fine -tuning  T+18 weeks  1% of cost head (A) as \\nmentioned in commercial bid \\ncontract for every week of delay  \\n5 Completion of UAT and T+18 weeks (= 1% of cost head (A) as \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 74 of 125 \\nS. No.  Milestone / Deliverable  Timeline  Liquidated damages, if any, \\napplicable  \\nsolution Go -Live along \\nwith replication of the \\nexisting data in the \\nRegistry database  T1) mentioned in commercial bid \\ncontract for every week of delay  \\n6 Submission of quarterly \\nSLA compliance report  Before 15th of \\nnext month \\nafter end of \\nquarter  1% of quarterly amount payable \\nfor every week of delay  \\n7 Submission of the \\nKnowledge transition \\nreport and complete \\nregistry documentation  T1+ 12 \\nquarters  1% of quarterly amount payable \\nfor every week of delay  \\n \\n4. Solution SLAs and associated liquidated damages  \\na. Availability of Registry  \\nSLA \\nDescription  Availability of Registry as a solution  \\nScope of SLA  Applies to availability of Registry as a solution, specifically the APIs \\nthrough which Network Participants access the Registry.  \\nTools, methods \\nor scripts to be \\nused to \\nmeasure SLA  Healthcheck service  to be implemented by MSP \\u2013 a custom monitoring \\nscript shall be executed once every minute from the SLA monitoring \\nserver.  \\nProcess to \\ncapture data or \\nmeasure the \\nparameter  The availability of registry shall be measured as follows:  \\ni. From the SLA monitoring server(s) invoke the service under \\nmeasurement. In the case of Registry, each API shall be \\nconsidered as a separate service.  \\nii. Based to the response obtained from each API, availability shall \\nbe computed.  \\n \\nThe monitoring script shall be executed once every minute from the SLA \\nmonitoring server.  \\n \\nThe Service is deemed to have a downtime if either the service request \\ntimes out or returns a failure. The down time is measured from the last \\nfailed service request script to the next successful script execution.  \\nSLA calculation  Will be calculated using the below formula.  \\n \\nFormula: Availability % for each API = {1-  [(Total Downtime -Planned \\ndowntime) / (Total Time \\u2013 Planned Downtime)]} *100   \\n \\nPlanned Downtime permissible for each API = 15 minutes per quarter     \\n \\nTotal Time = 24 X 7 measured over a period of one calendar month.   \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 75 of 125 \\n \\n[If there are 3 APIs providing services, the downtimes recorded for each \\nAPI automatically by the monitoring script as per the process defined in \\n\\u201cMeasurement for Registry service\\u201c above will be summed up to arrive \\nat cumulative downtime)]  \\n \\nOverall Availability % of Registry = ROUND ( \\ud835\\udef4\\ud835\\udef4[Availability % for each \\nAPI]/Number of APIs, 2)  \\n \\nSLA target and \\nSeverity level \\nfor computation \\nof Liquidated \\nDamages for \\nProduction \\nenvironment   \\nSLA Level  Applicable LD as % of quarterl  \\nof quarterly payment due  \\n>=99.99%  None  \\n<99.99% and >= 99.9%  1% \\n<99.9% and >= 99%  2% \\n<99% and >=98%  3% \\n<98% and >=97%  4% \\n<97%  5% \\n \\nSLA target and \\nSeverity level \\nfor computation \\nof Liquidated \\nDamages for \\nPre-\\nProduction \\nenvironment   \\nSLA Level  Applicable LD as % of quarterl  \\nof quarterly payment due  \\n>=99.9%  None  \\n<99.9%  0.5%  \\n \\nSLA target and \\nSeverity level \\nfor computation \\nof Liquidated \\nDamages for \\nSandbox \\nenvironment   \\nSLA Level  Applicable LD as % of quarterl  \\nof quarterly payment due  \\n>=99%  None  \\n<99%  0.5%  \\n \\nAssumptions, if \\nany The MSP should implement custom scripts to enable the measurement \\nof various metrics when such functionalities are not available out of the \\nbox in open source monitoring tools.  \\nMeasurement \\ninterval  Monthly  \\nReporting \\ninterval  Quarterly  \\nReporting  Automated SLA dashboard to be provided by MSP  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 76 of 125 \\n \\nb. Response time of Registry  \\n \\nSLA Description  Response time of Registry as a solution  \\nScope of SLA  Applies to response time of Registry as a solution, \\nspecifically the APIs through which Network Participants \\naccess the Registry.  \\nTools, methods or scripts \\nto be used to measure \\nSLA Tool to be implemented by MSP \\u2013 a custom monitoring script \\nshall be executed once every 10 minutes from the SLA \\nmonitoring server for each Registry API.  \\nProcess to capture data or \\nmeasure the parameter  The response time of registry shall be measured as follows:  \\n \\nFrom the SLA monitoring server(s) invoke the service under \\nmeasurement. In the case of Registry, each API shall be \\nconsidered as a separate service.  \\n \\nThe monitoring script shall be executed once every 10 \\nminutes from the SLA monitoring server.  \\n \\nSLA calculation  Will be calculated using the below formula.  \\n \\nFormula: Average response time of Registry = \\nROUND(simple average of response times of each API \\nexcluding outliers,2)  \\n \\nOutliers will be removed using the percentile capping \\n(Winsorization) method at the 1st and 99th percentile. Values \\nthat are less than the value at 1st percentile are replaced by \\nthe value at 1st percentile, and values that are greater than \\nthe value at 99 th percentile are replaced by the value at 99th \\npercentile.  \\nSLA target and Severity \\nlevel for computation of \\nLiquidated Damages for \\nProduction  environment   \\nSLA Level  Applicable LD \\nas % of \\nquarterly \\npayment  \\nAverage response time of Registry \\napplication <= 10 millisecond  None  \\nAverage response time of Registry \\napplication > 10 millisecond  3% \\n \\nAverage response time of Registry \\nas measured from data center \\nedge <= 200 millisecond  None  \\nAverage response time of Registry 3% \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 77 of 125 \\napplication > 200 millisecond  \\n \\nSLA target and Severity \\nlevel for computation of \\nLiquidated Damages for \\nPre-Production \\nenvironment   \\nSLA Level  Applicable LD \\nas % of \\nquarterly \\npayment  \\nAverage response time of Registry \\napplication <= 100 millisecond  None  \\nAverage response time of Registry \\napplication > 100 millisecond  1% \\n \\nAverage response time of Registry \\nas measured from data center \\nedge <= 1000 millisecond  None  \\nAverage response time of Registry \\napplication > 1000 millisecond  1% \\n \\nSLA target and Severity \\nlevel for computation of \\nLiquidated Damages for \\nSandbox environment   \\nSLA Level  Applicable LD \\nas % of \\nquarterly \\npayment  \\nAverage response time of Registry \\napplication <= 100 millisecond  None  \\nAverage response time of Registry \\napplication > 100 millisecond  0.5%  \\n \\nAverage response time of Registry \\nas measured from data center \\nedge <= 1000 millisecond  None  \\nAverage response time of Registry \\napplication > 1000 millisecond  0.5%  \\n \\nAssumptions, if any  The MSP should implement custom scripts to enable the \\nmeasurement of various metrics when such functionalities \\nare not available out of the box in open source monitoring \\ntools.  \\nMeasurement interval  Monthly  \\nReporting interval  Quarterly  \\nReporting  Automated SLA dashboard to be provided by MSP  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 78 of 125 \\n5. Support SLAs  and associated liquidated damages  \\na. Incident response  \\nSLA Description  Incident Response Time  \\nScope of SLA  Applies to all Incidents  \\nTools, methods or \\nscripts to be used to \\nmeasure SLA  Incident and Service Desk Management tool to be implemented by MSP  \\nProcess to capture \\ndata or measure the \\nparameter for \\nProduction  \\nenvironment  Once an incident is logged through one of the agreed channels, the \\npriorities have to be set using agreed channels for incidents based on \\nONDC requirements to meet the business objectives.  \\n  \\nMeasurement of SLA  \\nResponse Time is measured from the time of creation of the incident \\nuntil the \\u201cIn Progress\\u201d status update.  \\nPriority  Response time  \\nP1 15 minutes  \\nP2 60 minutes  \\nP3 2 hours  \\n \\nProcess to capture \\ndata or measure the \\nparameter for \\nSandbox and Pre -\\nProduction  \\nenvironments  Once an incident is logged through one of the agreed channels, the \\npriorities have to be set using agreed channels for incidents based on \\nONDC requirements to meet the business objectives.  \\n  \\nMeasurement of SLA  \\nResponse Time is measured from the time of creation of the incident \\nuntil the \\u201cIn Progress\\u201d status update.  \\nPriority  Response time  \\nP1 30 minutes  \\nP2 90 minutes  \\nP3 3 hours  \\n \\nSLA calculation  Formula:  \\nResponse time % for P1 incidents = Number of P1 incidents opened \\nduring the period and for which response is provided within defined \\ntimelines during the period / Number of P1 incidents opened during the \\nperiod \\n \\nResponse time % for P2 incidents = Number of P2  incidents opened \\nduring the period and for which response is provided within defined \\ntimelines during the period / Number of P2 incidents opened during the \\nperiod \\n \\nResponse time % for P3 incidents = Number of P3 incidents opened \\nduring the period and for which response is provided within defined \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 79 of 125 \\nSLA Description  Incident Response Time  \\ntimelines during the period / Number of P3 incidents opened during the \\nperiod  \\nSLA target  Response Time compliance =100%  \\n \\nLiquidated \\nDamages  2% of quarterly payment if SLA target is not met  \\nMeasurement \\ninterval  Monthly  \\n \\nReporting interval  Quarterly  \\n \\nReporting  Using SLA reporting tool  \\n \\n \\nb. Incident resolution  \\nSLA Description  Incident Resolution Time   \\nScope of SLA  Applies to all incidents  \\nTools, methods or \\nscripts to be used to \\nmeasure SLA  Incident and Service Desk Management tool to be implemented by \\nMSP  \\nProcess to capture \\ndata or measure the \\nparameter for \\nProduction \\nenvironment  Measurement of SLA  \\nResponse time is the time from incident creation until the \\\"Work in \\nProgress\\\" status update with assignment by MSP.  \\nResolution Time is the time from incident creation until the \\\"Resolved\\\" \\nstatus update.  \\nPriority  Resolution time  \\nP1 8 Hours  \\nP2 2 Days   \\nP3 5 days  \\nP4 - Service Request  15 days  \\n \\nProcess to capture \\ndata or measure the \\nparameter for \\nSandbox and Pre-\\nProduction  \\nenvironments  Measurement of SLA  \\nResponse time is the time from incident creation until the \\\"Work in \\nProgress\\\" status update with assignment by MSP.  \\nResolution Time is the time from incident creation until the \\\"Resolved\\\" \\nstatus update.  \\nPriority  Resolution time  \\nP1 15 Hours  \\nP2 3 Days   \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 80 of 125 \\nP3 6 days  \\nP4 - Service Request  15 days  \\n \\nSLA calculation  Formulae : \\n \\n \\nResolution time % for P1 incidents = Number of P1 incidents opened \\nduring the period and for which resolution is provided within defined \\ntimelines during the period / Number of P1 incidents opened during \\nthe period \\n \\nResolution time % for P2 incidents = Number of P2 incidents opened \\nduring the period and for which resolution is provided within defined \\ntimelines during the period / Number of P2 incidents opened during \\nthe period \\n \\nResolution time % for P3 incidents = Number of P3 incidents opened \\nduring the period and for which resolution is provided within defined \\ntimelines during the period / Number of P3 incidents opened during \\nthe period \\n \\nResolution time % for P4 incidents = Number of P4 incidents opened \\nduring the period and for which resolution is provided within defined \\ntimelines during the period / Number of P4 incidents opened during \\nthe period \\n \\nSLA target  Resolution Time % = 100%  \\nSeverity level for \\ncomputation of \\nLiquidated Damages  2% of quarterly payment due  \\nMeasurement interval  Monthly  \\n \\nReporting interval  Quarterly  \\n \\nReports or Data to be \\nsubmitted, if any  Automated SLA dashboard in Service Request tools but not limiting to \\nfollowing reports can be customizable as required.  \\n1. Incident Resolution Report  \\n2. Incident Request Work \\u201cIn Progress\\u201d Report  \\n3. Incident average resolution report  \\n4. Incident number of duplicates  \\n5. % of incidents converted as Problem  \\n6. % repeat unknown cause of/incident  \\n7. Number of incidents with priorities modified during their course \\nof resolution report  \\n8. RCA of P1 and P2 resolved.  \\n \\n \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 81 of 125 \\n \\n  \\n \\n    \\n \\n   \\n \\n     \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 83 of 125 \\n- The dependency injection feature allows you to define the dependencies that your \\napplication needs in configuration classes, and the framework will automatically create \\nand inject the required beans at runtime. This can make it easier to manage \\ndependencies and keep your code modular and maintainable.  \\n- It also provides CRUD (create, read, update, delete) services that can be used to simplify the implementation of common persistence tasks. These services are built on top of the Spring Data project, which provides a consistent interface for interacting with \\na variety of data stores.  \\n \\n \\nFigure 1 Registry Software Architecture  \\n At a high level, application consists of the following components:  \\n- Controller:   \\n- Vlookup:  An API that handles requests related to retrieving subscriber information and \\nnetwork participant information would require an authentication mechanism to ensure \\nthat only authorised users are able to access this information.  \\n- LookUp:  An API that retrieves subscriber information but does not have any \\nauthentication mechanism in place.  \\n- Subscribe:  An API mentioned here is a way for entities such as buyers, sellers, or \\nnetwork participants to register with ONDC registry.  \\n- Service:  \\n- Validation Keys:  This logic is used to verify the signing_public_key and \\nencryption_public_key that are provided at the time of subscription through the subscribe API. The validation keys are used to ensure that the keys provided by the entity are authentic and have not been tampered with.  \\n- Domain Verification:  The subscriber\\u2019s URL is verified as part of the subscription \\nprocess. This process can ensure that the subscriber_id corresponds to a specific domain, and that the subscriber has control over that domain. It also provides a way \\nfor the system to confirm t hat the subscriber is who they claim to be, and that the \\ndomain is being used for legitimate purposes.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 84 of 125 \\n- Audit/Logging:  The application allows for the logging and storage of information \\nrelated to certain events that occur within a system. This information can include details \\nsuch as who performed an action, when it was performed, and what the action was.  \\n- Validate Network Participant:  \\n- One level of validation is JSON Schema validation, it is a way to ensure that the \\ndata received from the network participant conforms to a specific schema, this schema could contain certain rules for the message structure, data types, and \\nformat. This step of validation helps to ensure that the data received from the network participant is well -formed and can be processed correctly by the system.  \\n- Another level of validation is city code validation , This can be used to confirm that \\nthe network participant is physically located in a specific city, this information can be used to determine the correct time zone, currency, or other data relevant to the \\napplication.  \\n- Another level of validation is domain validation , which is used to confirm that the \\nnetwork participant has ownership of a specific domain name. This can help to prevent spoofing or phishing attempts.  \\n- The subscriber URL validation  is a way to verify that the network participant is \\nauthorised to access specific resources or services, by checking that the network participant's URL matches a whitelisted or trusted domain.  \\n- It's important to note that these methods of validation can be used together or \\nindividually depending on the security requirements and the complexity of the network.  \\n \\nC. High Level Architecture  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 85 of 125 \\n \\n     Figure 2 Registry High Level Architecture  \\n \\n \\nPresentation Layer:  \\n- The presentation layer is the interface through which users interact with the registry. It \\nis responsible for presenting the information stored in the registry to the user, as well as receiving and validating requests from the user.  \\n- The presentation layer would receive requests from the user, validate them to ensure that they are properly structured and contain all necessary information, and then pass them on to the registry. The registry would then process the request and return the requested information to the presentation layer, which would in turn present it to the \\nuser.  \\n- The presentation layer can also include additional functionality, such as authentication \\nand authorisation, to ensure that only authorised users are able to access the registry \\nand that they are only able to perform actions that they are permitted to perform.  \\n \\nBusiness Layer:  \\n- The business layer sits between the presentation layer and the database layer. It is \\nresponsible for implementing the business logic of the registry, including verifying \\ndomain names, validating keys, and verifying the identity and credentials of network \\nparticipants and sellers.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 86 of 125 \\n- The business layer can also include additional functionality, such as data \\ntransformation and mapping, to ensure that the data is properly formatted and \\nstructured for use by the presentation layer and the database.  \\n \\nPersistence Layer:  \\n- It is responsible for storing and retrieving information from the registry's database. It \\nimplements the logic for storing and organizing the data in the database, as well as for \\nexecuting requests from the business layer to retrieve or update the data.  \\n- The persistence layer can include a variety of different components, such as database \\nmanagement systems, data storage systems, and data access and retrieval \\nmechanisms, to ensure that the data is stored and retrieved efficiently and effectively.  \\n \\nDatabase:  \\n- The database is responsible for storing the data that is managed by the registry.  \\n- The database stores the data in tables, with each table representing a different entity \\nor type of information. For example, there might be tables for storing information about \\nnetwork participants, sellers, and transactions.  \\n- Refer to Section 2 [Database Design]  for more details.  \\n \\n   \\n \\n       \\nD. Deployment Architecture  \\nIn this setup, the HTTP(S) Load Balancer serves as a global entry point for the application, \\nand it routes incoming requests to the appropriate location backend based on the configured \\nrules.  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 87 of 125 \\n \\nFigure 3 Deployment Architecture  \\nThe HTTP(S) Load Balancer provides below features:  \\n- Deploy multiple instances of the application to different servers / virtual machines.  \\n- Create an HTTP(S) Load Balancer and configure it to route traffic to the different \\nlocations where your application is deployed.  \\n \\nAuthentication and authorization:  \\n- Having a white list of authorised network participants can help to ensure the security \\nand integrity of the registry by limiting access to only those participants that have been \\nvetted and deemed trustworthy.  \\n- By exposing a URL and public key information, network participants can demonstrate \\ntheir identity and authenticity to the registry, which helps to ensure that only authorised \\nparticipants are granted access.  \\nE. Registry Class Diagrams  \\nClass Diagrams: Com.nsdl.beckn.np.model.request :  \\n1) Ack.java:  \\n      Status: ACK for success, NACK for unsuccess. Delivers the message for the \\nstatus. The status should be represented in string format.  \\n \\n          \\n  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 88 of 125 \\n2) Context.java :  \\n                         In this class it should give the details of operation number, whereas operation \\nnumber should be represented in integer format.  \\n \\n      3) Entity.java:  \\n                  In this Entity class it should contain the details such as GST number, PAN number, \\nName and Address of Authorised Signatory, email id, Mobile number, country. And also, should give the details of effective date of registration.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 89 of 125 \\n \\n  \\n4)EntityGst.java:  \\nThis EntityGst class contains the values such as Legal entity name, Business address, city \\ncode, GST number.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 90 of 125 \\n                                       \\n \\n5) EntityPan.java:  \\n                         This EntityPan class contains name as per PAN, pan number, and date of \\nincorporation description.  \\n \\n6)  Error.java:  \\nIn case of any failure scenarios this model gives the necessary \\ninformation.   \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 91 of 125 \\n \\n7) ErrorResponse.java :  \\n                                This class show the Error Response Acknowledgement, like example \\nSubscriber id already exists/Subscribe id does not exist.  \\n \\n8) ErrorResponseACK.java :  \\nThis Class contains the Acknowledgement details like if it is success it gives ACK, If it is \\nunsuccess it gives NACK.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 92 of 125 \\n \\n9) KarzaGstRequest.java :  \\n                            This class contains the information of GST and Consent .  \\n  \\n \\n10) KarzaPanRequest.java:  \\n                                         This Class contains the values of PAN number, Name, Date of birth, \\nConsent.  \\n \\n11) KeyPair.java:  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 93 of 125 \\nThis Class contains the information about Signing public key, encryption public key, valid from \\nand valid until which are in string format.  \\n \\n \\n12) Logs.java: This class contains Server Name and request id.      \\n \\n13) NetworkParticipant.java:  \\nThis Class contains the information about Subscribe URL, Domain, type and MSN details. And \\nalso seller on record, city code list.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 94 of 125 \\n \\n14) ReqLookup.java:  \\nThis Class contains the information such as Subscribe id, city, country, domain, type.  \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 95 of 125 \\n15) ReqOnSubscribe.java:  \\nThis Class shows Subscriber ID and challenge.  \\n \\n14) RequestOldSearch.java:  \\nThis class contains the values city name, country name, domain, type, subscriber id, unique \\nkey id, message.  \\n \\n15) RequestSearch.java:  \\nThis class contains the values such as Sender subscriber id, request id, time stamp, search, \\nparameters, signature, status code and message.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 96 of 125 \\n \\n16)RequestSearchParam.java:  \\nThis class contains the values such as city, country, domain, type, subscriber id, data.  \\n \\n17) RequestText.java:  \\n   This class contains the values such as client public key, challenge, \\nclient private key  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 97 of 125 \\n \\n18) SellerOnRecord.java :  \\n                 This entity contains the values such as unique key id, key pair, city code.  \\n \\n19) SubscribeBody.java :  \\n  This class contains the values such as subscribe context details, subscribe \\nmessages. Gives error message details.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 98 of 125 \\n \\n20) SubscribeContext.java :  \\nThis class contains the values of subscribe context details. shows the operation details.  \\n \\n21) SubscribeMessage.java:  \\n This class contains the values of entity, network participant, time stamp, request id.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 99 of 125 \\n \\n \\n  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 100 of 125 \\nCom.nsdl.beckn.np.model.response:  \\n \\n 1)ApiEntityMasterProjection.java:  \\nThis class contains id, city code, country, status, unique key id, valid until, seller encryption, \\nvalid from and valid until details, Subscriber URL.  \\n \\n2) MessageCustomeResponse.java:  \\nIn this class there is a relationship between Message Customer response and message \\nresponse.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 101 of 125 \\n \\n3) MessageResponse.java:  \\n \\n4) Response.java:  \\nThis class contains the response of the status message.  \\n \\n5) ResponseKeyPair.java:  \\nThis class contains the details of signing public key, encryption public key, valid from and valid \\nuntil.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 102 of 125 \\n \\n6) ResponseNetworkParticipant.java:  \\nThis class contains the details of Subscriber URL, domain value, the type like buyerApp or \\nSellerApp, MSN value, city code and seller on record details and map seller details.  \\n \\n7) ResponsEntityMaster.java:  \\nThis class contains the details of subscriber id, city, country, valid from, valid until, signing \\npublic key, encryption public key, created updated, unique key id, and network participant details.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 103 of 125 \\n \\n8) ResponseOnSubscribe.java  :  \\nThis class contains the answers of the response.  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 104 of 125 \\n \\n9) ResponseSellerOnRecord.java:  \\nThis class contains the details of unique key id, key pair value, and city code. Gives the \\nresponse of seller on record details.  \\n \\n10) ResponseText.java:  \\nThis class contains the details answer of response text.  \\n \\n11) ResponsOldCityArrayEntityMaster.java:  \\nThis class contains the details of city, here there is a relation with response old entity parent master and response old city array entity master.  \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 105 of 125 \\n12) ResponsOldCityEntityMaster.java:  \\n \\nThis class contains the details of city and there is relation between response old entity parent \\nmaster and response old city entity master.  \\n \\n 13) ResponsOldEntityParentMaster.java:  \\n                        This class contains the details of subscriber id, status information, unique key \\nid, subscriber URL, country, domain, valid from, valid until, type, signing public key, encryption public key, created, updated, brid, and city details . \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 106 of 125 \\n \\n \\n \\n \\n   \\n \\n   \\n \\nF. Sequence diagrams  \\n                    \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 107 of 125 \\n Onboarding Subscriber Controller  \\n \\n  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 108 of 125 \\n  \\n Onboarding Subscriber Service \\n     \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 109 of 125 \\n \\n \\n \\n \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 110 of 125 \\nG. Database Design  \\nThe registry component describes the following data models:  \\n- domain_master: This data model likely stores information about the various domains \\nthat are supported by the registry. A domain could represent a specific business \\ncontext, such as a particular industry or market segment, and the domain_master data \\nmodel w ould store details about each domain, such as its name and any relevant \\nmetadata.  \\n- entity_master: This data model likely stores information about the various entities that are registered with the registry. An entity could represent a person, company, or other \\ntype of organisation, and the entity_master data model would store details about each \\nentity, such as its name, address, and contact information.  \\n- network_participant_master: This data model likely stores information about the various network participants that are registered with the registry. A network participant \\ncould represent a user, device, or other type of entity that is participating in the network, \\nand the network_participant_master data model would store details about each \\nparticipant, such as its domain, status, and subscriber.  \\n- registry_keys: This data model likely stores information about the various keys that are \\nused to secure communications between the registry and other components. These \\nkeys could include public and private keys, as well as any other types of keys that are \\nused to encrypt or decrypt data.  \\n- seller_on_record_master: This data model likely stores information about the various sellers that are registered with the registry. A seller could represent an individual or \\ncompany that is offering products or services for sale, and the \\nseller_on_record_m aster data model would store details about each seller, such as \\nunique id, subscriber id and keys.  \\n  \\n \\n \\n \\n \\n \\n  \\n \\n \\n \\n  \\n \\n \\n \\n  \\n \\n \\nH. ER Diagram  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 111 of 125 \\n \\n  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 112 of 125 \\nI. Registration Scenarios  \\nNetwork participants can register as Buyer App, Seller App or both.  \\n  \\nTo register as either, almost same steps are to be followed as shown in the next section barring \\nthe following differences:  \\n \\na. Register as Buyer App  \\n- ops_no = 1  \\n- \\\"type \\\": \\\"buyerApp\\u201d ,\\u201cmsn\\u201d: false  \\nThis option is used when the network participant wants to register as a buyer App alone.  \\nb. Register as Seller (Non- MSN)  \\n- ops_no = 2  \\n- \\\"type\\\" : \\u201csellerApp\\u201d, \\u201cmsn \\u201d: false  \\nThis option is used when the network participant wants to register as a seller App alone that \\nhas their own inventory.  \\nc. Register as Multi -Seller Node (MSN) Seller  \\n- ops_no = 3  \\n- \\\"type \\\": \\\"sellerApp\\u201d  , \\u201cmsn\\u201d: true \\nThis option is used when the network participant wants to register as a seller App that has \\nmultiple merchants on boarded to their application.  \\nd. Register as Buyer and Non- MSN Seller  \\n- ops_no = 4  \\n- \\\"type \\\": \\\"buyerApp\\u201d  , \\u201cmsn\\u201d: false  \\n- \\\"type\\\" : \\u201csellerApp\\u201d, \\u201cmsn \\u201d: false  \\nThis option is used when the network participant wants to register as a buyer App and a seller app that has their own inventory.  \\ne. Register as Buyer and MSN Seller  - ops_no = 5  \\n- \\\"type \\\": \\\"buyerApp\\u201d  , \\u201cmsn\\u201d: false  \\n- \\\"type \\\": \\\"sellerApp\\u201d  , \\u201cmsn\\u201d: true \\nThis option is used when the network participant wants to register as a buyer App and a seller \\napp that has multiple merchants on boarded to their application.  \\n \\nJ. User Flow to create subscribe request (Aud: Network Participant)  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 113 of 125 \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 114 of 125 \\nSteps to be followed by Network Participant for getting onboarded on ONDC  \\n \\n1. Gather all pre- requisites  \\na. Create Subscriber ID  \\ni. Purchase a domain name \\u2013  Eg. - ondc.example.com.  \\ni. Purchase SSL certificate  \\nii. Map it with purchased domain. Eg. \\u2013  https://ondc.example.com  \\niii. subscriber_Id = SSL + Domain Name  \\niv. Get subscriber _Id whitelisted by ONDC. Currently, this is a manual \\nprocess.  \\nv. Configure your system with the domain name and SSL. All \\ncommunication with the ONDC network will happen through this domain.  \\nb. Generate Signing key pair  \\ni. Method name: generateSigningKeyPair()  \\nii. Description: This method generates ED25519 32 byte/256 bits key pair \\n(Private and Public) for Signing  \\niii. API: post/signature/key  \\niv. URL \\u2013  \\n\\u2714 Generic - {{pilot_url}}/crypto/signature/key  \\n\\u2714 Pre-prod - https://preprod.registry.ondc.org/generate- sign-keys or  \\nv. Input (body) with example: No input needed  \\nvi. xpected output with example: signing_public key and \\nsigning_private_key  \\n{ \\n    \\\"publicKey\\\" : \\\"S5h8gLhvW1AWP8k5spsGGSWXII0pAL6Z78bHpDF\\n1SbE=\\\" , \\n    \\\"privateKey\\\" : \\\"vIk+FxxD5n8LcG0mgR6qL0Sln+Qo/AUQdZGzpeoU\\nUn0=\\\"  \\n} \\n \\nc. Generate request_Id or unique key id (ukId)  \\ni. Method name: NA  \\nii. Description: This method generates ED25519 32 byte/256 bits key pair \\n(Private and Public) for Signing. It should be unique for each network \\nparticipant.  \\niii. URL - https://www.uuidgenerator.net/  \\niv. Input (body) with example \\u2013  No input needed  \\nv. Expected output with example - b4963e85- 47c4- 41b1 -94ab-\\n6f3acc490f4d  \\n \\nd. Create an html page. Eg - ondc -site-verification.html  \\n \\ne. Generate encryption- decryption key pair  \\ni. Method name: generateEncDecKey()  \\nii. Description: Generate encryption decryption key pair using x25519 key \\nexchange algorithm.  \\niii. API: post/signature/key  \\niv. URL \\u2013  \\n\\u2714 Generic - {{pilot_url}}/crypto/encrypt/decrypt/key  \\n\\u2714 Preprod - https://preprod.registry.ondc.org/crypto/encrypt/decrypt/key  \\nv. Input (body) with example: No input needed  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 115 of 125 \\nvi. Expected output with example ( enc_dec_private_key  and \\nenc_dec_public_key ) \\n{ \\n    \\\"publicKey\\\" : \\\"MCowBQYDK2VuAyEAzqvhDWEwp6JeUn+dX2amsNb1zyq\\nBiLLT+e2+mzJ2QH0=\\\" , \\n    \\\"privateKey\\\" : \\\"MFECAQEwBQYDK2VuBCIEINhPuAXdILHJvfhngONl0aIQ8\\nIJ1pyMX/5W4Pgb8DbpCgSEAzqvhDWEwp6JeUn+dX2amsNb1zyqBiLLT+e2\\n+mzJ2QH0=\\\"  \\n} \\n \\nf. Set-up for key verification via HTML  \\ni. Place the created HTML at subscriber_Id . The new url to access the \\nHTML will be in the format: https//<subscriber_Id>/<html page title>. \\nRegistry shall check existence of this url in later stages. And will be \\nreferred as callback_url .  \\nEg. https://ondc.example.com/ ondc -site-verification.html  \\n \\n \\ng. Sign the request_Id (5.1.3) using signing_private_key (5.1.2) to generate \\nwhat is termed as signed_unique_req_id  or signature.  \\ni. Method name: sign(byte[] privateKey, byte[] message)  \\nii. Description: This method generates signature using given ED25519 32 byte/ 256 bits Private key.  \\niii. API: post/signature/generate  \\niv. URL:  \\n\\u2714 Generic - {{pilot_url}} /crypto/signature/generate  \\n\\u2714 Preprod - \\nhttps://preprod.registry.ondc.org/crypto/signature/generate/onboardin\\ng  \\nv. Input with example:  \\n{ \\n    \\\"requestData\\\" : \\\"27baa06d- f90a-486c -85e5 -cc621b787f22\\\" , \\n   \\\"clientPrivateKey\\\" :\\\"cDWjNpLHYFFF8zFXBQoBlrmsXezndSj1JZRzSZZoKB\\n4=\\\" \\n} \\nvi. Expected output with example \\n\\\"sign\\\" :  \\\"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzVAP\\nX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\\\"  \\n \\nh. Add created signature (5.2.2, signed_unique_req_id)  to callback html  (5.2.1). \\nEg: \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 116 of 125 \\n \\ni. Configure /on_subscribe implementation to decrypt encrypted \\nchallenge_string received from registry using enc_dec_private_key (5.1.5.vi). \\nONDC registry public key will available publically.  \\ni. Click here for reference link  \\nii. Method: encryptDecrypt(int mode, byte[] challenge_string, byte[] \\nprivateKey, byte[] publicKey (to be confirmed)  \\niii. API name: crypto/decrypt/text  \\niv. URL: {{pilot_url}} /crypto/decrypt/text  \\nv. Input:  \\n{ \\n    \\\"value\\\" : \\\"cNK5xU6tKn2VJ47AKL6cQQC0gnbpnByqvEXboCJPnbA=\\\" , \\n    \\\"ONDC_PublicKey\\\" : \\\"MCowBQYDK2VuAyEASfWOME2kQQ75i5iMHx0Zo\\ndBn0P9UTHcOkeczDmeOVkU=\\\" , \\n    \\\"Subscriber_PrivateKey\\\" : \\\"MFECAQEwBQYDK2VuBCIEIAj5U1DVAX5eGI\\n1jIIcjmzWgPQlIg/T1Q6A3pZ0AIWp6gSEAJGnKRTAEcSvpgD0mw9gBHv94E\\n3w8sTtmPlszuXIEAF0=\\\"  \\n} \\n \\nvi. Expected Output: decrypted challenge_string   \\n \\nDevelop and host /on_subscribe implementation (5.2.4) on the signed callback html (5.2.3).  \\n \\nSend decrypted \\u2018 challenge_string\\u2019 as a response to /on_subscribe.  \\n \\nj. Create /subscribe request  \\nPlease refer to Github (ONDC_official) for more information.  \\nMethod: Following items must be kept ready  \\n- ops_no: based on which registration / amendment scenario is applicable, pass \\n1,2,3,4,5 as ops_no parameter (refer 3.5)  \\n- Entity parameters: GSTIN, PAN, Signatory Details (Name, Address, Email ID, Mobile No., Country, Subscriber ID, Signing and Enc -Dec Keys (all parameters are either \\nexistence proofs or generated pre -requisites)  \\n- Network Participant Details (Domain Name, Subscriber Type)  \\nURL: {{pilot_url}} /ondc/subscribe \\nSample Input with example:  \\n{ \\n    \\\"context\\\" : { \\n        \\\"operation\\\" : { \\n            \\\"ops_no\\\" : 5 // change input depending on registration scenario  \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 117 of 125 \\n             } \\n          }, \\n    \\\"message\\\" : { \\n        \\\"entity\\\" : { \\n            \\\"gst\\\": { \\n                \\\"legal_entity_name\\\" : \\\"Protean E -Gov\\\" , \\n                \\\"business_address\\\" : \\\"1st Floor,  Times  Tower,   Kamala  Mills Compound,  Senapati  \\nBapat  Marg,   Lower  Parel,  Mumbai  013.\\\" , \\n                \\\"city_code\\\" : [ \\n                    \\\"std:080\\\"  \\n                ], \\n                \\\"gst_no\\\" : \\\"27AAECF8760H1ZC\\\"  \\n            }, \\n            \\\"pan\\\" : { \\n                \\\"name_as_per_pan\\\" : \\\"Protean E -Gov\\\" , \\n                \\\"pan_no\\\" :\\\"AAECF8760H\\\" , \\n                \\\"date_of_incorporation\\\" : \\\"05/01/2022\\\"  \\n            }, \\n            \\\"callback_url\\\" : \\\"/test\\\" , \\n            \\\"name_of_authorised_signatory\\\" : \\\"NSDL\\\" , \\n            \\\"address_of_authorised Signatory\\\" : \\\"Lower  Parel,\\\" , \\n            \\\"email_id\\\" : \\\"contact@nsdl.co.in\\\" , \\n            \\\"country\\\" : \\\"IND\\\" , \\n            \\\"mobile_no\\\" : \\\"8734598345\\\" , \\n            \\\"subscriber_id\\\" : \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\" , \\n            \\\"unique_key_id\\\" : \\\"061e6399- 8ce3 -4048- 8256- a73e4207be67\\\" , \\n            \\\"key_pair\\\" : { \\n                \\\"signing_public_key\\\" : \\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\" , \\n                \\\"encryption_public_key\\\" : \\\"MCowBQYDK2VuAyEA+vzJVuD4eeLXKV20BUT56KXT\\ncy5ZzuI0inWWf5fGZBs=\\\" , \\n                \\\"valid_from\\\" : \\\"2022- 07-03T06:27:54.101Z\\\" , \\n                \\\"valid_until\\\" : \\\"2023- 07-03T06:27:54.101Z\\\"  \\n            } \\n        }, \\n  \\n// change type and msn input depending on registration scenario       \\n  \\\"network_participant\\\" : [ \\n            { \\n                \\\"subscriber_url\\\" : \\\"/\\\", \\n                \\\"domain\\\" : \\\"nic2004:52110\\\" , \\n                \\\"type\\\" : \\\"buyerApp\\\" ,    \\n                \\\"msn\\\": false , \\n                \\\"city_code\\\" : [ \\n                    \\\"std:080\\\"  \\n                ], \\n \\n// change input depending on registration scenario; the second network participant block only \\nused in registration scenarios 4 and 5.  \\n        \\\"network_participant\\\" : [ \\n            { \\n                \\\"subscriber_url\\\" : \\\"/\\\", \\n                \\\"domain\\\" : \\\"nic2004:52110\\\" , \\n                \\\"type\\\" : \\\"sellerApp\\\" ,    \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 118 of 125 \\n                \\\"msn\\\":  true, \\n                \\\"city_code\\\" : [ \\n                    \\\"std:080\\\"  \\n                ], \\n                \\\"seller_on_record\\\" : [ \\n                    { \\n                        \\\"unique_key_id\\\" : \\\"343ff54ererf7334- 1a13- 4095 -afe0-abb745654\\\" , \\n                        \\\"key_pair\\\" : { \\n                            \\\"signing_public_key\\\" : \\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\n\\\", \\n                            \\\"encryption_public_key\\\" : \\\"MCowBQYDK2VuAyEA1FuQa6lUWgdUms+AW\\n4mYqU6Aak/XiOFKDFAnUt0qRhM=\\\" , \\n                            \\\"valid_from\\\" : \\\"2022 -07-03T06:27:54.101Z\\\" , \\n                            \\\"valid_until\\\" : \\\"2023- 07-03T06:27:54.101Z\\\"  \\n                        }, \\n                        \\\"city_code\\\" : [ \\n                            \\\"std:080\\\"  \\n                        ] \\n                    } \\n                      \\n                ] \\n            } \\n             \\n        ], \\n        \\\"timestamp\\\" : \\\"2022- 12-08T12:35:54.101Z\\\" , \\n        \\\"request_id\\\" : \\\"27baa06d- f90a-486c -85e5 -cc621b787f04\\\"  \\n    } \\n} \\n \\n \\nExpected Output: Ack / Nack (Error code, Error type, Error message). Check for list of possible errors and their resolutions in the document attached.  \\n \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 119 of 125 \\nK. User Flow to create On_subscribe request (Aud: Network Participant)  \\n \\n \\n \\n8.1 Receive /subscribe request  \\n8.2 Verify OCSP and domain \\n8.2.1 API: {{pilot_url}} /crypto/ocsp/verify  \\n8.2.2 Description: Deduplication check?  \\n8.2.3.Input: <subscriber_id>; Eg -  ondc.example.com  \\n8.2.4. Expected output: Valid / Not Valid  \\n \\n8.3 Verify signed keys / signature  \\n8.3.1 API: {{pilot_url}} /crypto/signature/verify  \\n8.3.2 Input data with example:  \\n{ \\n    \\\"requestData\\\" : \\\"27baa06d- f90a-486c -85e5 -cc621b787f04\\\" , \\n    \\\"clientPublicKey\\\" : \\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\" , \\n    \\\"sign\\\" :  \\\"52O82d44LnSfSuPyDAdO/CrRJ75j4e7wR+1OLUInOkk43g/SpzV\\nAPX9z8ay/VENpjqHL0tPpQHPNrubpZutNCA==\\\"  \\n} \\n8.3.3 Output:  Valid / Not Valid   (Error code, error message (eg -  Signature is not valid header \\nformat.)) \\n  \\n8.4 Create on_subscribe request  \\n8.4.1 Click here to access reference link . \\n \\n8.4.2 Generate challenge_string . \\n \\n\\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 120 of 125 \\n8.4.3 Encrypt challenge string with Registry Private Key and Subscriber Public Key \\nreceived from /subscribe to generate encrypted_challenge_string.  \\ni. API: {{pilot_url}} /crypto/encrypt/text  \\nii. Input with example:  \\n{ \\n    \\\"value\\\" : \\\"67d8b568- 5b0d- 4a34- aac3 -8f761c22f541\\\" , \\n    \\\"clientPrivateKey\\\" : \\\"MFECAQEwBQYDK2VuBCIEIBCERTCvWIEYuontGk5\\nFFl5oUrH/33bA/KulLErqGstlgSEA+XpYc09S8X8mkgNTlf6nlPRbL46TCwEXl\\nAIkjP5tRh4=\\\" , \\n    \\\"proteanPublicKey\\\" : \\\"MCowBQYDK2VuAyEALtPj74XkIrkyxTqyssjtYJ3KRN\\nD5FnzK5MDrwlK3kC8=\\\"  \\n} \\n \\niii. Expected output: encrypted_challenge_string \\n \\n8.4.4 Call on_subscribe if OSCP and signature are valid. Else send NACK.  \\niv. on_subscribe URL: <call back url>/on_subscribe. (5.2.1) Eg. \\nhttps://ondc.example.com/ ondc -site-verification.html/on_subscribe  \\nv. Input:  \\n{ \\n  \\\"subscriber_id\\\": \\\"abc.com\\\",  \\n  \\\"challenge\\\": \\\" encrypted_challenge_string\\\"  \\n} \\nvi. Expected output:  \\n \\nReceive decrypted_challenge_string from the subscriber.  \\n \\nCompare challenge_string (6.4.2) with decrypted_challenge_string (6.4.5). If \\nboth are equal return ACK, else return NACK with error message.  \\n \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 121 of 125 \\nL. Lookup and Vlookup APIs  \\n \\nThese APIs are used by the network participants to get details about other network participants \\nin the network.  \\nCurrently there are 2 main use cases in which there APIs are used  \\n\\u25cf By gateways and/or adapters for search details about network participants  \\n\\u25cf By network participants to querying existing details  \\n \\n/vlookup is the more advanced and secure version of /lookup.  \\n/lookup is still in use for backward compatibility with older network participants.  \\n1. LOOKUP  \\n\\u25cf Input parameters:  only search parameters are sent as inputs. Minimum 2 search \\nparameters are mandatory  \\no Input parameters:  \\n\\u25aa country  \\n\\u25aa domain \\n\\u25aa type \\n\\u25aa city \\n\\u25aa subscriber_id  \\no Example:  \\n{ \\n    \\\"country\\\" : \\\"IND\\\" , \\n    \\\"domain\\\" : \\\"nic2004:52110\\\"        \\n} \\no Output Response for the API is a list of network participants satisfying the \\nsearch parameters passed via input.  \\n\\u25cf Output Parameters:  \\no Output Response of /lookup will show all details sequentially as a renormalized \\nflat list. For example, if the response contains 2 network participants, one is a \\nbuyer and other is a MSN seller with 2 sellers on record, then /lookup response is 4 blocks of  details, 2 of network participants and 2 of sellers on record.  \\no Example:  \\n[ \\n{ \\n        \\\"subscriber_id\\\": \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\",  \\n        \\\"status\\\": \\\"SUBSCRIBED\\\",  \\n        \\\"ukId\\\": \\\"2233bd55- 6a80- 4219- 823e -b9e157976d4g\\\",  \\n        \\\"subscriber_url\\\": \\\"/subscriber1\\\",  \\n        \\\"country\\\": \\\"IND\\\",  \\n        \\\"domain\\\": \\\"nic2004:52110\\\",  \\n        \\\"valid_from\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"valid_until\\\": \\\"2023 -07-20T11:57:54.101Z\\\",  \\n        \\\"type\\\": \\\"buyerApp\\\",  \\n        \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n        \\\"encr_public_key\\\": \\n\\\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\\nac7kk=\\\",  \\n        \\\"created\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"updated\\\": \\\"2023 -01-25T11:39:53.868Z\\\",  \\n        \\\"br_id\\\": \\\"2233bd55- 6a80- 4219- 823e -b9e157976d4g\\\",  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 122 of 125 \\n        \\\"city\\\": \\\"std:080\\\"  \\n    }, \\n    { \\n        \\\"subscriber_id\\\": \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\",  \\n        \\\"status\\\": \\\"SUBSCRIBED\\\",  \\n        \\\"ukId\\\": \\\"2233bd55- 6a80- 4219- 823e -b9e157976d4g\\\",  \\n        \\\"subscriber_url\\\": \\\"/subscriber2\\\",  \\n        \\\"country\\\": \\\"IND\\\",  \\n        \\\"domain\\\": \\\"nic2004:52110\\\",  \\n        \\\"valid_from\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"valid_until\\\": \\\"2023 -07-20T11:57:54.101Z\\\",  \\n        \\\"type\\\": \\\"sellerApp\\\",  \\n        \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n        \\\"encr_public_key\\\": \\n\\\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/\\nac7kk=\\\",  \\n        \\\"created\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"updated\\\": \\\"2023 -01-25T11:39:53.868Z\\\",  \\n        \\\"br_id\\\": \\\"2233bd55- 6a80- 4219- 823e -b9e157976d4g\\\",  \\n        \\\"city\\\": \\\"std:080\\\"  \\n    }, \\n    { \\n        \\\"subscriber_id\\\": \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\",  \\n        \\\"status\\\": \\\"SUBSCRIBED\\\",  \\n        \\\"ukId\\\": \\\"99b25419- 2587- 42bf-9559- ca0ac91e3808\\\",  \\n        \\\"subscriber_url\\\": \\\"/subscriber2\\\",  \\n        \\\"country\\\": \\\"IND\\\",  \\n        \\\"domain\\\": \\\"nic2004:52110\\\",  \\n        \\\"valid_from\\\": \\\"2022- 07-14T06:49:54.101Z\\\",  \\n        \\\"valid_until\\\": \\\"2023 -07-20T11:57:54.101Z\\\",  \\n        \\\"type\\\": \\\"sellerApp\\\",  \\n        \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n        \\\"encr_public_key\\\": \\n\\\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\\nLH0U=1\\\",  \\n        \\\"created\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"updated\\\": \\\"2023 -01-25T11:39:53.868Z\\\",  \\n        \\\"br_id\\\": \\\"99b25419- 2587- 42bf-9559- ca0ac91e3808\\\",  \\n        \\\"city\\\": \\\"std:080\\\"  \\n    }, \\n    { \\n        \\\"subscriber_id\\\": \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\",  \\n        \\\"status\\\": \\\"SUBSCRIBED\\\",  \\n        \\\"ukId\\\": \\\"67b25419- 5555- 42bf-9559- ca0ac91e7878\\\",  \\n        \\\"subscriber_url\\\": \\\"/subscriber2\\\",  \\n        \\\"country\\\": \\\"IND\\\",  \\n        \\\"domain\\\": \\\"nic2004:52110\\\",  \\n        \\\"valid_from\\\": \\\"2022- 07-14T06:49:54.101Z\\\",  \\n        \\\"valid_until\\\": \\\"2023 -07-20T11:57:54.101Z\\\",  \\n        \\\"type\\\": \\\"sellerApp\\\",  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 123 of 125 \\n        \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n        \\\"encr_public_key\\\": \\n\\\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6\\nLH0U=1\\\",  \\n        \\\"created\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"updated\\\": \\\"2023 -01-25T11:39:53.868Z\\\",  \\n        \\\"br_id\\\": \\\"67b25419- 5555- 42bf-9559- ca0ac91e7878\\\",  \\n        \\\"city\\\": \\\"std:080\\\"  \\n} \\n] \\n  \\n2. VLOOKUP [To be deprecated]  \\n\\u25cf Input parameters:   \\no Along with search parameters as inputs, few input parameters are also sent as \\ninputs.  \\no Signature is sent as one of the input parameters makes it highly secured as \\ncompared to /lookup.  \\no Minimum 2 search parameters are mandatory.  \\no API Input Parameters:  \\n\\u25aa sender_subscriber_id  \\n\\u25aa request_id  \\n\\u25aa timestamp  \\n\\u25aa search_parameters ( min 2 parameters):  \\n\\u25cf country  \\n\\u25cf domain \\n\\u25cf type \\n\\u25cf city \\n\\u25cf subscriber_id  \\n\\u25aa signature key  \\n\\u25aa Example:  \\n{ \\n    \\\"sender_subscriber_id\\\" : \\\"pilot -gateway -1.beckn.nsdl.co.in/option5\\\" , \\n    \\\"request_id\\\" : \\\"27baa06d- f90a-486c -85e5 -cc621b787f04\\\" , \\n    \\\"timestamp\\\" : \\\"2022- 12-20T14:53:07.060Z\\\" , \\n    \\\"signature\\\" : \\\"RZvA+EwOa77fJcqSxuj4+JGr115oMtlVKdyG8febGjivv\\nOpZZUAX0tLAgapmDIX+xQhl3RS2qpCX3s6mS3uoCw==\\\" , \\n    \\\"search_parameters\\\" : { \\n        \\\"country\\\" : \\\"IND\\\" , \\n        \\\"domain\\\" : \\\"nic2004:52110\\\"  \\n   } \\n} \\n\\u25cf Output Parameters:  \\no Output Response for the API is a list of network participants satisfying the search \\nparameters passed via input.  \\no Output Response of /lookup will show all details in a hierarchical manner. For example, if the response contains 2 network participants, one is a buyer and other is a MSN seller with 2 sellers on record, then /vlookup response will show the \\ndetails of two sellers on record as a subset of the MSN seller.  \\no Example:  \\n[ \\n    { \\n        \\\"subscriber_id\\\": \\\"pilot -gateway -1.beckn.nsdl.co.in/option10\\\",  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 124 of 125 \\n        \\\"city\\\": [  \\n            \\\"std:080\\\"  \\n        ], \\n        \\\"country\\\": \\\"IND\\\",  \\n        \\\"valid_from\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"valid_until\\\": \\\"2023 -07-20T11:57:54.101Z\\\",  \\n        \\\"signing_public_key\\\": \\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n        \\\"encr_public_key\\\": \\n\\\"MCowBQYDK2VuAyEAUGKRSbRhO68ebUv1EmYOj9ZyVDEyC3BwzDinp/ac7\\nkk=\\\",  \\n        \\\"created\\\": \\\"2022- 07-14T06:48:54.101Z\\\",  \\n        \\\"updated\\\": \\\"2023 -01-25T11:39:53.868Z\\\",  \\n        \\\"unique_key_id\\\": \\\"2233bd55- 6a80- 4219 -823e- b9e157976d4g\\\",  \\n        \\\"network_participant\\\": [  \\n            { \\n                \\\"subscriber_url\\\": \\\"/subscriber1\\\",  \\n                \\\"domain\\\": \\\"nic2004:52110\\\",  \\n                \\\"type\\\": \\\"buyerApp\\\",  \\n                \\\"msn\\\": false,  \\n                \\\"city_code\\\": [  \\n                    \\\"std:080\\\"  \\n                ], \\n                \\\"seller_on_record\\\": []  \\n            }, \\n            { \\n                \\\"subscriber_url\\\": \\\"/subscriber2\\\",  \\n                \\\"domain\\\": \\\"nic2004:52110\\\",  \\n                \\\"type\\\": \\\"sellerApp\\\",  \\n                \\\"msn\\\": true,  \\n                \\\"city_code\\\": [  \\n                    \\\"std:080\\\"  \\n                ], \\n                \\\"seller_on_record\\\": [  \\n                    { \\n                        \\\"unique_key_id\\\": \\\"99b25419- 2587 -42bf-9559 -ca0ac91e3808\\\",  \\n                        \\\"key_pair\\\": {  \\n                            \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n                            \\\"encryption_public_key\\\": \\n\\\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\\n0U=1\\\",  \\n                            \\\"valid_from\\\": \\\"2022 -07-14T06:49:54.101Z\\\",  \\n                            \\\"valid_until\\\": \\\"2023- 07-20T11:57:54.101Z\\\"  \\n                        }, \\n                        \\\"city_code\\\": [  \\n                            \\\"std:080\\\"  \\n                        ] \\n                    }, \\n                    { \\n                        \\\"unique_key_id\\\": \\\"67b25419- 5555 -42bf-9559 -ca0ac91e7878\\\",  \\n                        \\\"key_pair\\\": {  \\n                            \\\"signing_public_key\\\": \\n\\\"K0el1kYfJI222a8Zja9jOsU68zU+zqT6/AiTobEl66k=\\\",  \\n\\n \\n  \\n \\nRequest for Proposals for upgrade and maintenance of ONDC Registry  | Page 125 of 125 \\n                            \\\"encryption_public_key\\\": \\n\\\"MCowBQYDK2VuAyEApnurIktWUD8Y0SnnOaQ8JrWn+QG3uxmEqSEDYr6LH\\n0U=1\\\",  \\n                            \\\"valid_from\\\": \\\"2022 -07-14T06:49:54.101Z\\\",  \\n                            \\\"valid_until\\\": \\\"2023- 07-20T11:57:54.101Z\\\"  \\n                        }, \\n                        \\\"city_code\\\": [  \\n                            \\\"std:080\\\"  \\n                        ] \\n                    } \\n                ] \\n            } \\n        ] \\n    } \\n]\", \"retrieval_context\": null}": {"cached_metrics_data": [{"metric_data": {"name": "Correctness (GEval)", "threshold": 0.6, "success": true, "score": 0.8426479465347793, "reason": "The Actual Output addresses key client requirements such as scalability, performance, security, and user experience. It proposes a multi-tiered architecture, API-first design, and robust security measures, aligning with the client's needs. However, it lacks specific mention of GST compliance and change management process details from the Input.", "strictMode": false, "evaluationModel": "gpt-4o", "evaluationCost": 0, "verboseLogs": "Criteria:\nDoes the proposal fully address the client's requirements? \n \nEvaluation Steps:\n[\n    \"Identify and list the client's requirements from the Input.\",\n    \"Compare each identified requirement against the Actual Output to see if it is addressed.\",\n    \"Assess whether the Actual Output not only addresses each requirement but also provides comprehensive solutions or suggestions.\",\n    \"Verify that there are no missing or misinterpreted requirements by cross-checking with the client's original request.\"\n]"}, "metric_configuration": {"threshold": 0.6, "evaluation_model": "gpt-4o", "strict_mode": false, "criteria": "Does the proposal fully address the client's requirements?", "include_reason": false, "evaluation_steps": ["Identify and list the client's requirements from the Input.", "Compare each identified requirement against the Actual Output to see if it is addressed.", "Assess whether the Actual Output not only addresses each requirement but also provides comprehensive solutions or suggestions.", "Verify that there are no missing or misinterpreted requirements by cross-checking with the client's original request."], "evaluation_params": ["actual_output", "input"]}}, {"metric_data": {"name": "Persuasiveness (GEval)", "threshold": 0.6, "success": true, "score": 0.9095349466184454, "reason": "The proposal is convincing and motivates action with a clear understanding of client needs and a detailed solution. It uses professional language and terminology suitable for a business context, maintaining a balance between assertiveness and respectfulness. The structure and content align well with standard business proposal practices.", "strictMode": false, "evaluationModel": "gpt-4o", "evaluationCost": 0, "verboseLogs": "Criteria:\nIs the tone of the proposal persuasive and business\u2011appropriate? \n \nEvaluation Steps:\n[\n    \"Assess if the tone of the Actual Output is convincing and motivates the intended action.\",\n    \"Evaluate the use of professional language and terminology suitable for a business context in the Actual Output.\",\n    \"Compare the persuasiveness and professionalism of the Actual Output against standard business proposal practices.\",\n    \"Determine if the Actual Output maintains a balance between assertiveness and respectfulness in tone.\"\n]"}, "metric_configuration": {"threshold": 0.6, "evaluation_model": "gpt-4o", "strict_mode": false, "criteria": "Is the tone of the proposal persuasive and business\u2011appropriate?", "include_reason": false, "evaluation_steps": ["Assess if the tone of the Actual Output is convincing and motivates the intended action.", "Evaluate the use of professional language and terminology suitable for a business context in the Actual Output.", "Compare the persuasiveness and professionalism of the Actual Output against standard business proposal practices.", "Determine if the Actual Output maintains a balance between assertiveness and respectfulness in tone."], "evaluation_params": ["actual_output"]}}]}}}